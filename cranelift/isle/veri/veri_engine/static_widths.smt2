(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const bnot__8 (_ BitVec 64))
(declare-const bnot__8__result__20 (_ BitVec 64))
(declare-const bnot__8__x__21 (_ BitVec 64))
(declare-const fits_in_64__4 Int)
(declare-const fits_in_64__4__arg__16 Int)
(declare-const fits_in_64__4__result__15 Int)
(declare-const has_type__9 (_ BitVec 64))
(declare-const has_type__9__arg__40 (_ BitVec 64))
(declare-const has_type__9__result__39 (_ BitVec 64))
(declare-const has_type__9__ty__42 Int)
(declare-const lower__10 (_ BitVec 64))
(declare-const lower__10__arg__46 (_ BitVec 64))
(declare-const lower__10__result__45 (_ BitVec 64))
(declare-const orr_not__13 (_ BitVec 64))
(declare-const orr_not__13__a__61 (_ BitVec 64))
(declare-const orr_not__13__b__63 (_ BitVec 64))
(declare-const orr_not__13__result__56 (_ BitVec 64))
(declare-const orr_not__13__ty__57 Int)
(declare-const output_reg__14 (_ BitVec 64))
(declare-const output_reg__14__arg__74 (_ BitVec 64))
(declare-const output_reg__14__result__72 (_ BitVec 64))
(declare-const put_in_reg__12 (_ BitVec 64))
(declare-const put_in_reg__12__arg__53 (_ BitVec 64))
(declare-const put_in_reg__12__result__51 (_ BitVec 64))
(declare-const ty__clif0__1 Int)
(declare-const x__clif1__5 (_ BitVec 64))
(declare-const zero_reg__11 (_ BitVec 64))
(declare-const zero_reg__11__result__48 (_ BitVec 64))
(declare-const fresh0 Int)
(declare-const fresh1 (_ BitVec 64))
(declare-const fresh2 (_ BitVec 32))
(push)
(assert (! (= ty__clif0__1 fresh0) :named assum0))
(assert (! (= fits_in_64__4__result__15 fits_in_64__4__arg__16) :named assum1))
(assert (! (<= fits_in_64__4__arg__16 64) :named assum2))
(assert (! (= ty__clif0__1 fits_in_64__4__arg__16) :named assum3))
(assert (! (= fits_in_64__4 fits_in_64__4__result__15) :named assum4))
(assert (! (= x__clif1__5 fresh1) :named assum5))
(assert (! (= bnot__8__result__20 (bvnot bnot__8__x__21)) :named assum6))
(assert (! (or (= 64 8) (or (= 64 16) (or (= 64 32) (= 64 64)))) :named assum7))
(assert (! (= x__clif1__5 bnot__8__x__21) :named assum8))
(assert (! (= bnot__8 bnot__8__result__20) :named assum9))
(assert (! (= has_type__9__result__39 has_type__9__arg__40) :named assum10))
(assert (! (= has_type__9__ty__42 64) :named assum11))
(assert (! (= fits_in_64__4 has_type__9__ty__42) :named assum12))
(assert (! (= bnot__8 has_type__9__arg__40) :named assum13))
(assert (! (= has_type__9 has_type__9__result__39) :named assum14))
(assert (! (= lower__10__result__45 lower__10__arg__46) :named assum15))
(assert (! (= has_type__9 lower__10__arg__46) :named assum16))
(assert (! (= lower__10 lower__10__result__45) :named assum17))
(assert (! (= zero_reg__11__result__48 (_ bv0 64)) :named assum18))
(assert (! (= zero_reg__11 zero_reg__11__result__48) :named assum19))
(assert (! (= put_in_reg__12__result__51 put_in_reg__12__arg__53) :named assum20))
(assert (! (= x__clif1__5 put_in_reg__12__arg__53) :named assum21))
(assert (! (= put_in_reg__12 put_in_reg__12__result__51) :named assum22))
(assert (! (= orr_not__13__result__56 (ite (<= orr_not__13__ty__57 32) (concat fresh2 (bvor ((_ extract 31 0) orr_not__13__a__61) (bvnot ((_ extract 31 0) orr_not__13__b__63)))) (bvor orr_not__13__a__61 (bvnot orr_not__13__b__63)))) :named assum23))
(assert (! (= ty__clif0__1 orr_not__13__ty__57) :named assum24))
(assert (! (= zero_reg__11 orr_not__13__a__61) :named assum25))
(assert (! (= put_in_reg__12 orr_not__13__b__63) :named assum26))
(assert (! (= orr_not__13 orr_not__13__result__56) :named assum27))
(assert (! (= output_reg__14__result__72 output_reg__14__arg__74) :named assum28))
(assert (! (= orr_not__13 output_reg__14__arg__74) :named assum29))
(assert (! (= output_reg__14 output_reg__14__result__72) :named assum30))
(check-sat)
(get-value (x__clif1__5))
(assert (not (= x__clif1__5 #xffffffffffffffff)))
(check-sat)
(pop)
(assert (not (=> (and (= ty__clif0__1 fresh0) (= fits_in_64__4__result__15 fits_in_64__4__arg__16) (<= fits_in_64__4__arg__16 64) (= ty__clif0__1 fits_in_64__4__arg__16) (= fits_in_64__4 fits_in_64__4__result__15) (= x__clif1__5 fresh1) (= bnot__8__result__20 (bvnot bnot__8__x__21)) (or (= 64 8) (or (= 64 16) (or (= 64 32) (= 64 64)))) (= x__clif1__5 bnot__8__x__21) (= bnot__8 bnot__8__result__20) (= has_type__9__result__39 has_type__9__arg__40) (= has_type__9__ty__42 64) (= fits_in_64__4 has_type__9__ty__42) (= bnot__8 has_type__9__arg__40) (= has_type__9 has_type__9__result__39) (= lower__10__result__45 lower__10__arg__46) (= has_type__9 lower__10__arg__46) (= lower__10 lower__10__result__45) (= zero_reg__11__result__48 (_ bv0 64)) (= zero_reg__11 zero_reg__11__result__48) (= put_in_reg__12__result__51 put_in_reg__12__arg__53) (= x__clif1__5 put_in_reg__12__arg__53) (= put_in_reg__12 put_in_reg__12__result__51) (= orr_not__13__result__56 (ite (<= orr_not__13__ty__57 32) (concat fresh2 (bvor ((_ extract 31 0) orr_not__13__a__61) (bvnot ((_ extract 31 0) orr_not__13__b__63)))) (bvor orr_not__13__a__61 (bvnot orr_not__13__b__63)))) (= ty__clif0__1 orr_not__13__ty__57) (= zero_reg__11 orr_not__13__a__61) (= put_in_reg__12 orr_not__13__b__63) (= orr_not__13 orr_not__13__result__56) (= output_reg__14__result__72 output_reg__14__arg__74) (= orr_not__13 output_reg__14__arg__74) (= output_reg__14 output_reg__14__result__72)) (= lower__10 output_reg__14))))
(check-sat)
