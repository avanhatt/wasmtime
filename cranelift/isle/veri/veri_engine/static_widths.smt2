(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const ALUOp.Eor__14 (_ BitVec 8))
(declare-const ALUOp.Eor__14__result__36 (_ BitVec 8))
(declare-const alu_rs_imm_logic_commutative__15 (_ BitVec 64))
(declare-const alu_rs_imm_logic_commutative__15__a__44 (_ BitVec 64))
(declare-const alu_rs_imm_logic_commutative__15__b__45 (_ BitVec 64))
(declare-const alu_rs_imm_logic_commutative__15__op__41 (_ BitVec 8))
(declare-const alu_rs_imm_logic_commutative__15__result__39 (_ BitVec 64))
(declare-const alu_rs_imm_logic_commutative__15__t__53 Int)
(declare-const bxor__11 (_ BitVec 64))
(declare-const bxor__11__result__22 (_ BitVec 64))
(declare-const bxor__11__x__23 (_ BitVec 64))
(declare-const bxor__11__y__24 (_ BitVec 64))
(declare-const fits_in_64__4 Int)
(declare-const fits_in_64__4__arg__18 Int)
(declare-const fits_in_64__4__result__17 Int)
(declare-const has_type__12 (_ BitVec 64))
(declare-const has_type__12__arg__28 (_ BitVec 64))
(declare-const has_type__12__result__27 (_ BitVec 64))
(declare-const has_type__12__ty__30 Int)
(declare-const lower__13 (_ BitVec 64))
(declare-const lower__13__arg__34 (_ BitVec 64))
(declare-const lower__13__result__33 (_ BitVec 64))
(declare-const output_reg__16 (_ BitVec 64))
(declare-const output_reg__16__arg__56 (_ BitVec 64))
(declare-const output_reg__16__result__54 (_ BitVec 64))
(declare-const ty__clif0__1 Int)
(declare-const x__clif1__5 (_ BitVec 64))
(declare-const y__clif2__8 (_ BitVec 64))
(declare-const fresh0 Int)
(declare-const fresh1 (_ BitVec 64))
(declare-const fresh2 (_ BitVec 64))
(push)
(assert (! (= ty__clif0__1 fresh0) :named assum0))
(assert (! (= fits_in_64__4__result__17 fits_in_64__4__arg__18) :named assum1))
(assert (! (<= fits_in_64__4__arg__18 64) :named assum2))
(assert (! (= ty__clif0__1 fits_in_64__4__arg__18) :named assum3))
(assert (! (= fits_in_64__4 fits_in_64__4__result__17) :named assum4))
(assert (! (= x__clif1__5 fresh1) :named assum5))
(assert (! (= y__clif2__8 fresh2) :named assum6))
(assert (! (= bxor__11__result__22 (bvxor bxor__11__x__23 bxor__11__y__24)) :named assum7))
(assert (! (= x__clif1__5 bxor__11__x__23) :named assum8))
(assert (! (= y__clif2__8 bxor__11__y__24) :named assum9))
(assert (! (= bxor__11 bxor__11__result__22) :named assum10))
(assert (! (= has_type__12__result__27 has_type__12__arg__28) :named assum11))
(assert (! (= has_type__12__ty__30 64) :named assum12))
(assert (! (= fits_in_64__4 has_type__12__ty__30) :named assum13))
(assert (! (= bxor__11 has_type__12__arg__28) :named assum14))
(assert (! (= has_type__12 has_type__12__result__27) :named assum15))
(assert (! (= lower__13__result__33 lower__13__arg__34) :named assum16))
(assert (! (= has_type__12 lower__13__arg__34) :named assum17))
(assert (! (= lower__13 lower__13__result__33) :named assum18))
(assert (! (= ALUOp.Eor__14__result__36 (_ bv6 8)) :named assum19))
(assert (! (= ALUOp.Eor__14 ALUOp.Eor__14__result__36) :named assum20))
(assert (! (= alu_rs_imm_logic_commutative__15__result__39 (ite (= alu_rs_imm_logic_commutative__15__op__41 (_ bv2 8)) (bvor alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45) (ite (= alu_rs_imm_logic_commutative__15__op__41 (_ bv4 8)) (bvand alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45) (bvxor alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45)))) :named assum21))
(assert (! (= ALUOp.Eor__14 alu_rs_imm_logic_commutative__15__op__41) :named assum22))
(assert (! (= ty__clif0__1 alu_rs_imm_logic_commutative__15__t__53) :named assum23))
(assert (! (= x__clif1__5 alu_rs_imm_logic_commutative__15__a__44) :named assum24))
(assert (! (= y__clif2__8 alu_rs_imm_logic_commutative__15__b__45) :named assum25))
(assert (! (= alu_rs_imm_logic_commutative__15 alu_rs_imm_logic_commutative__15__result__39) :named assum26))
(assert (! (= output_reg__16__result__54 output_reg__16__arg__56) :named assum27))
(assert (! (= alu_rs_imm_logic_commutative__15 output_reg__16__arg__56) :named assum28))
(assert (! (= output_reg__16 output_reg__16__result__54) :named assum29))
(check-sat)
(get-value (x__clif1__5 y__clif2__8))
(assert (and (not (= x__clif1__5 #xfffdffffffffffff)) (not (= y__clif2__8 #xfffdffffffffffff))))
(check-sat)
(pop)
(assert (not (=> (and (= ty__clif0__1 fresh0) (= fits_in_64__4__result__17 fits_in_64__4__arg__18) (<= fits_in_64__4__arg__18 64) (= ty__clif0__1 fits_in_64__4__arg__18) (= fits_in_64__4 fits_in_64__4__result__17) (= x__clif1__5 fresh1) (= y__clif2__8 fresh2) (= bxor__11__result__22 (bvxor bxor__11__x__23 bxor__11__y__24)) (= x__clif1__5 bxor__11__x__23) (= y__clif2__8 bxor__11__y__24) (= bxor__11 bxor__11__result__22) (= has_type__12__result__27 has_type__12__arg__28) (= has_type__12__ty__30 64) (= fits_in_64__4 has_type__12__ty__30) (= bxor__11 has_type__12__arg__28) (= has_type__12 has_type__12__result__27) (= lower__13__result__33 lower__13__arg__34) (= has_type__12 lower__13__arg__34) (= lower__13 lower__13__result__33) (= ALUOp.Eor__14__result__36 (_ bv6 8)) (= ALUOp.Eor__14 ALUOp.Eor__14__result__36) (= alu_rs_imm_logic_commutative__15__result__39 (ite (= alu_rs_imm_logic_commutative__15__op__41 (_ bv2 8)) (bvor alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45) (ite (= alu_rs_imm_logic_commutative__15__op__41 (_ bv4 8)) (bvand alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45) (bvxor alu_rs_imm_logic_commutative__15__a__44 alu_rs_imm_logic_commutative__15__b__45)))) (= ALUOp.Eor__14 alu_rs_imm_logic_commutative__15__op__41) (= ty__clif0__1 alu_rs_imm_logic_commutative__15__t__53) (= x__clif1__5 alu_rs_imm_logic_commutative__15__a__44) (= y__clif2__8 alu_rs_imm_logic_commutative__15__b__45) (= alu_rs_imm_logic_commutative__15 alu_rs_imm_logic_commutative__15__result__39) (= output_reg__16__result__54 output_reg__16__arg__56) (= alu_rs_imm_logic_commutative__15 output_reg__16__arg__56) (= output_reg__16 output_reg__16__result__54)) (and (= lower__13 output_reg__16) (or (= alu_rs_imm_logic_commutative__15__op__41 (_ bv2 8)) (= alu_rs_imm_logic_commutative__15__op__41 (_ bv4 8)) (= alu_rs_imm_logic_commutative__15__op__41 (_ bv6 8)))))))
(check-sat)
