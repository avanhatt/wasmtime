(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const amt__clif2__7 (_ BitVec 6))
(declare-const let__20 (_ BitVec 64))
(declare-const lsl_imm__16 (_ BitVec 64))
(declare-const lsl_imm__16__a__89 (_ BitVec 64))
(declare-const lsl_imm__16__b__92 (_ BitVec 6))
(declare-const lsl_imm__16__result__84 (_ BitVec 64))
(declare-const lsl_imm__16__ty__85 Int)
(declare-const lsr_imm__12 (_ BitVec 64))
(declare-const lsr_imm__12__a__62 (_ BitVec 64))
(declare-const lsr_imm__12__b__65 (_ BitVec 6))
(declare-const lsr_imm__12__result__57 (_ BitVec 64))
(declare-const lsr_imm__12__ty__58 Int)
(declare-const orr__19 (_ BitVec 64))
(declare-const orr__19__a__106 (_ BitVec 64))
(declare-const orr__19__b__108 (_ BitVec 64))
(declare-const orr__19__result__101 (_ BitVec 64))
(declare-const orr__19__ty__102 Int)
(declare-const rotr_opposite_amount__15 (_ BitVec 6))
(declare-const rotr_opposite_amount__15__result__82 (_ BitVec 6))
(declare-const rotr_opposite_amount__15__ty__74 Int)
(declare-const rotr_opposite_amount__15__x__76 (_ BitVec 6))
(declare-const small_rotr_imm__10 (_ BitVec 64))
(declare-const small_rotr_imm__10__result__21 (_ BitVec 64))
(declare-const small_rotr_imm__10__t__22 Int)
(declare-const small_rotr_imm__10__x__26 (_ BitVec 64))
(declare-const small_rotr_imm__10__y__29 (_ BitVec 6))
(declare-const ty__clif0__1 Int)
(declare-const val__clif1__4 (_ BitVec 64))
(declare-const val_lshift__clif4__17 (_ BitVec 64))
(declare-const val_rshift__clif3__13 (_ BitVec 64))
(declare-const fresh0 Int)
(declare-const fresh1 (_ BitVec 64))
(declare-const fresh2 (_ BitVec 6))
(declare-const fresh3 (_ BitVec 56))
(declare-const fresh4 (_ BitVec 48))
(declare-const fresh5 (_ BitVec 32))
(declare-const fresh6 (_ BitVec 32))
(declare-const fresh7 (_ BitVec 32))
(push)
(assert (! (= ty__clif0__1 fresh0) :named assum0))
(assert (! (= val__clif1__4 fresh1) :named assum1))
(assert (! (= amt__clif2__7 fresh2) :named assum2))
(assert (! (= small_rotr_imm__10__result__21 (ite (= small_rotr_imm__10__t__22 8) (concat fresh3 (bvor (bvshl ((_ extract 7 0) small_rotr_imm__10__x__26) (bvsub (_ bv8 8) (bvurem ((_ zero_extend 2) small_rotr_imm__10__y__29) (_ bv8 8)))) (bvlshr ((_ extract 7 0) small_rotr_imm__10__x__26) (bvurem ((_ zero_extend 2) small_rotr_imm__10__y__29) (_ bv8 8))))) (concat fresh4 (bvor (bvshl ((_ extract 15 0) small_rotr_imm__10__x__26) (bvsub (_ bv16 16) (bvurem ((_ zero_extend 10) small_rotr_imm__10__y__29) (_ bv16 16)))) (bvlshr ((_ extract 15 0) small_rotr_imm__10__x__26) (bvurem ((_ zero_extend 10) small_rotr_imm__10__y__29) (_ bv16 16))))))) :named assum3))
(assert (! (or (= small_rotr_imm__10__t__22 8) (= small_rotr_imm__10__t__22 16)) :named assum4))
(assert (! (ite (= small_rotr_imm__10__t__22 8) (= ((_ extract 31 8) small_rotr_imm__10__x__26) (_ bv0 24)) (= ((_ extract 31 16) small_rotr_imm__10__x__26) (_ bv0 16))) :named assum5))
(assert (! (bvult small_rotr_imm__10__y__29 ((_ int2bv 6) small_rotr_imm__10__t__22)) :named assum6))
(assert (! (= ty__clif0__1 small_rotr_imm__10__t__22) :named assum7))
(assert (! (= val__clif1__4 small_rotr_imm__10__x__26) :named assum8))
(assert (! (= amt__clif2__7 small_rotr_imm__10__y__29) :named assum9))
(assert (! (= small_rotr_imm__10 small_rotr_imm__10__result__21) :named assum10))
(assert (! (= lsr_imm__12__result__57 (ite (= lsr_imm__12__ty__58 32) (concat fresh5 (bvlshr ((_ extract 31 0) lsr_imm__12__a__62) ((_ zero_extend 26) lsr_imm__12__b__65))) (bvlshr lsr_imm__12__a__62 ((_ zero_extend 58) lsr_imm__12__b__65)))) :named assum11))
(assert (! (= 32 lsr_imm__12__ty__58) :named assum12))
(assert (! (= val__clif1__4 lsr_imm__12__a__62) :named assum13))
(assert (! (= amt__clif2__7 lsr_imm__12__b__65) :named assum14))
(assert (! (= lsr_imm__12 lsr_imm__12__result__57) :named assum15))
(assert (! (= (bvsub ((_ int2bv 6) rotr_opposite_amount__15__ty__74) (bvand rotr_opposite_amount__15__x__76 (bvsub ((_ int2bv 6) rotr_opposite_amount__15__ty__74) (_ bv1 6)))) rotr_opposite_amount__15__result__82) :named assum16))
(assert (! (= ty__clif0__1 rotr_opposite_amount__15__ty__74) :named assum17))
(assert (! (= amt__clif2__7 rotr_opposite_amount__15__x__76) :named assum18))
(assert (! (= rotr_opposite_amount__15 rotr_opposite_amount__15__result__82) :named assum19))
(assert (! (= lsl_imm__16__result__84 (ite (= lsl_imm__16__ty__85 32) (concat fresh6 (bvshl ((_ extract 31 0) lsl_imm__16__a__89) ((_ zero_extend 26) lsl_imm__16__b__92))) (bvshl lsl_imm__16__a__89 ((_ zero_extend 58) lsl_imm__16__b__92)))) :named assum20))
(assert (! (= 32 lsl_imm__16__ty__85) :named assum21))
(assert (! (= val__clif1__4 lsl_imm__16__a__89) :named assum22))
(assert (! (= rotr_opposite_amount__15 lsl_imm__16__b__92) :named assum23))
(assert (! (= lsl_imm__16 lsl_imm__16__result__84) :named assum24))
(assert (! (= orr__19__result__101 (ite (<= orr__19__ty__102 32) (concat fresh7 (bvor ((_ extract 31 0) orr__19__a__106) ((_ extract 31 0) orr__19__b__108))) (bvor orr__19__a__106 orr__19__b__108))) :named assum25))
(assert (! (= 32 orr__19__ty__102) :named assum26))
(assert (! (= val_lshift__clif4__17 orr__19__a__106) :named assum27))
(assert (! (= val_rshift__clif3__13 orr__19__b__108) :named assum28))
(assert (! (= orr__19 orr__19__result__101) :named assum29))
(assert (! (= val_rshift__clif3__13 lsr_imm__12) :named assum30))
(assert (! (= val_lshift__clif4__17 lsl_imm__16) :named assum31))
(check-sat)
(get-value (val__clif1__4 amt__clif2__7))
(assert (and (not (= val__clif1__4 #x0000000000000000)) (not (= amt__clif2__7 #b000010))))
(check-sat)
(pop)
(assert (not (=> (and (= ty__clif0__1 fresh0) (= val__clif1__4 fresh1) (= amt__clif2__7 fresh2) (= small_rotr_imm__10__result__21 (ite (= small_rotr_imm__10__t__22 8) (concat fresh3 (bvor (bvshl ((_ extract 7 0) small_rotr_imm__10__x__26) (bvsub (_ bv8 8) (bvurem ((_ zero_extend 2) small_rotr_imm__10__y__29) (_ bv8 8)))) (bvlshr ((_ extract 7 0) small_rotr_imm__10__x__26) (bvurem ((_ zero_extend 2) small_rotr_imm__10__y__29) (_ bv8 8))))) (concat fresh4 (bvor (bvshl ((_ extract 15 0) small_rotr_imm__10__x__26) (bvsub (_ bv16 16) (bvurem ((_ zero_extend 10) small_rotr_imm__10__y__29) (_ bv16 16)))) (bvlshr ((_ extract 15 0) small_rotr_imm__10__x__26) (bvurem ((_ zero_extend 10) small_rotr_imm__10__y__29) (_ bv16 16))))))) (or (= small_rotr_imm__10__t__22 8) (= small_rotr_imm__10__t__22 16)) (ite (= small_rotr_imm__10__t__22 8) (= ((_ extract 31 8) small_rotr_imm__10__x__26) (_ bv0 24)) (= ((_ extract 31 16) small_rotr_imm__10__x__26) (_ bv0 16))) (bvult small_rotr_imm__10__y__29 ((_ int2bv 6) small_rotr_imm__10__t__22)) (= ty__clif0__1 small_rotr_imm__10__t__22) (= val__clif1__4 small_rotr_imm__10__x__26) (= amt__clif2__7 small_rotr_imm__10__y__29) (= small_rotr_imm__10 small_rotr_imm__10__result__21) (= lsr_imm__12__result__57 (ite (= lsr_imm__12__ty__58 32) (concat fresh5 (bvlshr ((_ extract 31 0) lsr_imm__12__a__62) ((_ zero_extend 26) lsr_imm__12__b__65))) (bvlshr lsr_imm__12__a__62 ((_ zero_extend 58) lsr_imm__12__b__65)))) (= 32 lsr_imm__12__ty__58) (= val__clif1__4 lsr_imm__12__a__62) (= amt__clif2__7 lsr_imm__12__b__65) (= lsr_imm__12 lsr_imm__12__result__57) (= (bvsub ((_ int2bv 6) rotr_opposite_amount__15__ty__74) (bvand rotr_opposite_amount__15__x__76 (bvsub ((_ int2bv 6) rotr_opposite_amount__15__ty__74) (_ bv1 6)))) rotr_opposite_amount__15__result__82) (= ty__clif0__1 rotr_opposite_amount__15__ty__74) (= amt__clif2__7 rotr_opposite_amount__15__x__76) (= rotr_opposite_amount__15 rotr_opposite_amount__15__result__82) (= lsl_imm__16__result__84 (ite (= lsl_imm__16__ty__85 32) (concat fresh6 (bvshl ((_ extract 31 0) lsl_imm__16__a__89) ((_ zero_extend 26) lsl_imm__16__b__92))) (bvshl lsl_imm__16__a__89 ((_ zero_extend 58) lsl_imm__16__b__92)))) (= 32 lsl_imm__16__ty__85) (= val__clif1__4 lsl_imm__16__a__89) (= rotr_opposite_amount__15 lsl_imm__16__b__92) (= lsl_imm__16 lsl_imm__16__result__84) (= orr__19__result__101 (ite (<= orr__19__ty__102 32) (concat fresh7 (bvor ((_ extract 31 0) orr__19__a__106) ((_ extract 31 0) orr__19__b__108))) (bvor orr__19__a__106 orr__19__b__108))) (= 32 orr__19__ty__102) (= val_lshift__clif4__17 orr__19__a__106) (= val_rshift__clif3__13 orr__19__b__108) (= orr__19 orr__19__result__101) (= val_rshift__clif3__13 lsr_imm__12) (= val_lshift__clif4__17 lsl_imm__16)) (and (ite (= ty__clif0__1 8) (= (bvand #x00000000000000FF small_rotr_imm__10) (bvand #x00000000000000FF orr__19)) (= (bvand #x000000000000FFFF small_rotr_imm__10) (bvand #x000000000000FFFF orr__19))) (and (or (= orr__19__ty__102 8) (or (= orr__19__ty__102 16) (or (= orr__19__ty__102 32) (= orr__19__ty__102 64)))) (or (= small_rotr_imm__10__t__22 8) (= small_rotr_imm__10__t__22 16)) (or (= small_rotr_imm__10__t__22 8) (= small_rotr_imm__10__t__22 16)) (or (= lsr_imm__12__ty__58 32) (= lsr_imm__12__ty__58 64)) (or (= lsl_imm__16__ty__85 32) (= lsl_imm__16__ty__85 64)))))))
(check-sat)
