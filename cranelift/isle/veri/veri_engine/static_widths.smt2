(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const cmp_extend__31 (_ BitVec 68))
(declare-const cmp_extend__31__extend__158 (_ BitVec 3))
(declare-const cmp_extend__31__ret__155 (_ BitVec 68))
(declare-const cmp_extend__31__ty__156 Int)
(declare-const cmp_extend__31__x__157 (_ BitVec 64))
(declare-const cmp_extend__31__y__161 (_ BitVec 64))
(declare-const cond__clif0__2 (_ BitVec 8))
(declare-const fits_in_16__23 Int)
(declare-const fits_in_16__23__arg__34 Int)
(declare-const fits_in_16__23__ret__35 Int)
(declare-const flags_and_cc__32 (_ BitVec 12))
(declare-const flags_and_cc__32__c__200 (_ BitVec 8))
(declare-const flags_and_cc__32__pflags__194 (_ BitVec 68))
(declare-const flags_and_cc__32__ret__192 (_ BitVec 12))
(declare-const let__33 (_ BitVec 12))
(declare-const lower_extend_op__30 (_ BitVec 3))
(declare-const lower_extend_op__30__b__135 Bool)
(declare-const lower_extend_op__30__ret__131 (_ BitVec 3))
(declare-const lower_extend_op__30__ty__132 Int)
(declare-const lower_icmp__24 (_ BitVec 12))
(declare-const lower_icmp__24__c__41 (_ BitVec 8))
(declare-const lower_icmp__24__in_ty__47 Int)
(declare-const lower_icmp__24__ret__39 (_ BitVec 12))
(declare-const lower_icmp__24__x__51 (_ BitVec 64))
(declare-const lower_icmp__24__y__53 (_ BitVec 64))
(declare-const operand_size__27 Int)
(declare-const operand_size__27__ret__108 Int)
(declare-const operand_size__27__ty__109 Int)
(declare-const put_in_reg__28 (_ BitVec 64))
(declare-const put_in_reg__28__arg__127 (_ BitVec 64))
(declare-const put_in_reg__28__ret__129 (_ BitVec 64))
(declare-const put_in_reg_sext32__25 (_ BitVec 64))
(declare-const put_in_reg_sext32__25__arg__99 (_ BitVec 64))
(declare-const put_in_reg_sext32__25__ret__98 (_ BitVec 64))
(declare-const rm__clif2__17 (_ BitVec 64))
(declare-const rn__clif1__14 (_ BitVec 64))
(declare-const rn__clif4__26 (_ BitVec 64))
(declare-const signed_cond_code__3 (_ BitVec 8))
(declare-const signed_cond_code__3__c__5 (_ BitVec 8))
(declare-const signed_cond_code__3__ret__4 (_ BitVec 8))
(declare-const ty__clif3__20 Int)
(declare-const fresh0 (_ BitVec 8))
(declare-const fresh1 (_ BitVec 8))
(declare-const fresh2 (_ BitVec 64))
(declare-const fresh3 (_ BitVec 64))
(declare-const fresh4 Int)
(declare-const ynot_32_55 (_ BitVec 32))
(declare-const subs_wide_32_55 (_ BitVec 64))
(declare-const subs_32_55 (_ BitVec 32))
(declare-const flags_32_55 (_ BitVec 4))
(declare-const subs_ret_32_55 (_ BitVec 68))
(declare-const ynot_64_55 (_ BitVec 64))
(declare-const subs_wide_64_55 (_ BitVec 128))
(declare-const subs_64_55 (_ BitVec 64))
(declare-const flags_64_55 (_ BitVec 4))
(declare-const subs_ret_64_55 (_ BitVec 68))
(declare-const ynot_32_59 (_ BitVec 32))
(declare-const subs_wide_32_59 (_ BitVec 64))
(declare-const subs_32_59 (_ BitVec 32))
(declare-const flags_32_59 (_ BitVec 4))
(declare-const subs_ret_32_59 (_ BitVec 68))
(declare-const ynot_64_59 (_ BitVec 64))
(declare-const subs_wide_64_59 (_ BitVec 128))
(declare-const subs_64_59 (_ BitVec 64))
(declare-const flags_64_59 (_ BitVec 4))
(declare-const subs_ret_64_59 (_ BitVec 68))
(declare-const ynot_32_66 (_ BitVec 32))
(declare-const subs_wide_32_66 (_ BitVec 64))
(declare-const subs_32_66 (_ BitVec 32))
(declare-const flags_32_66 (_ BitVec 4))
(declare-const subs_ret_32_66 (_ BitVec 68))
(declare-const ynot_64_66 (_ BitVec 64))
(declare-const subs_wide_64_66 (_ BitVec 128))
(declare-const subs_64_66 (_ BitVec 64))
(declare-const flags_64_66 (_ BitVec 4))
(declare-const subs_ret_64_66 (_ BitVec 68))
(declare-const ynot_32_70 (_ BitVec 32))
(declare-const subs_wide_32_70 (_ BitVec 64))
(declare-const subs_32_70 (_ BitVec 32))
(declare-const flags_32_70 (_ BitVec 4))
(declare-const subs_ret_32_70 (_ BitVec 68))
(declare-const ynot_64_70 (_ BitVec 64))
(declare-const subs_wide_64_70 (_ BitVec 128))
(declare-const subs_64_70 (_ BitVec 64))
(declare-const flags_64_70 (_ BitVec 4))
(declare-const subs_ret_64_70 (_ BitVec 68))
(declare-const fresh5 (_ BitVec 32))
(declare-const ynot_32_185 (_ BitVec 32))
(declare-const subs_wide_32_185 (_ BitVec 64))
(declare-const subs_32_185 (_ BitVec 32))
(declare-const flags_32_185 (_ BitVec 4))
(declare-const subs_ret_32_185 (_ BitVec 68))
(declare-const ynot_64_185 (_ BitVec 64))
(declare-const subs_wide_64_185 (_ BitVec 128))
(declare-const subs_64_185 (_ BitVec 64))
(declare-const flags_64_185 (_ BitVec 4))
(declare-const subs_ret_64_185 (_ BitVec 68))
(push)
(assert (! (= signed_cond_code__3__ret__4 signed_cond_code__3__c__5) :named assum0))
(assert (! (and (bvuge signed_cond_code__3__c__5 (_ bv2 8)) (bvule signed_cond_code__3__c__5 (_ bv5 8))) :named assum1))
(assert (! (= cond__clif0__2 signed_cond_code__3__c__5) :named assum2))
(assert (! (= signed_cond_code__3 signed_cond_code__3__ret__4) :named assum3))
(assert (! (= fresh0 signed_cond_code__3) :named assum4))
(assert (! (= cond__clif0__2 fresh1) :named assum5))
(assert (! (= rn__clif1__14 fresh2) :named assum6))
(assert (! (= rm__clif2__17 fresh3) :named assum7))
(assert (! (= ty__clif3__20 fresh4) :named assum8))
(assert (! (= fits_in_16__23__arg__34 fits_in_16__23__ret__35) :named assum9))
(assert (! (<= fits_in_16__23__arg__34 16) :named assum10))
(assert (! (= ty__clif3__20 fits_in_16__23__arg__34) :named assum11))
(assert (! (= fits_in_16__23 fits_in_16__23__ret__35) :named assum12))
(assert (! (= lower_icmp__24__ret__39 (bvor (bvshl ((_ zero_extend 8) ((_ extract 67 64) (ite (and (bvuge lower_icmp__24__c__41 (_ bv2 8)) (bvule lower_icmp__24__c__41 (_ bv5 8))) (ite (<= lower_icmp__24__in_ty__47 32) (ite (= 32 32) subs_ret_32_55 subs_ret_64_55) (ite (= 64 32) subs_ret_32_59 subs_ret_64_59)) (ite (<= lower_icmp__24__in_ty__47 32) (ite (= 32 32) subs_ret_32_66 subs_ret_64_66) (ite (= 64 32) subs_ret_32_70 subs_ret_64_70))))) (_ bv8 12)) ((_ zero_extend 4) lower_icmp__24__c__41))) :named assum13))
(assert (! (bvule lower_icmp__24__c__41 (_ bv9 8)) :named assum14))
(assert (! (or (= lower_icmp__24__in_ty__47 8) (or (= lower_icmp__24__in_ty__47 16) (or (= lower_icmp__24__in_ty__47 32) (= lower_icmp__24__in_ty__47 64)))) :named assum15))
(assert (! (= lower_icmp__24__in_ty__47 64) :named assum16))
(assert (! (= lower_icmp__24__in_ty__47 64) :named assum17))
(assert (! (= cond__clif0__2 lower_icmp__24__c__41) :named assum18))
(assert (! (= rn__clif1__14 lower_icmp__24__x__51) :named assum19))
(assert (! (= rm__clif2__17 lower_icmp__24__y__53) :named assum20))
(assert (! (= fits_in_16__23 lower_icmp__24__in_ty__47) :named assum21))
(assert (! (= lower_icmp__24 lower_icmp__24__ret__39) :named assum22))
(assert (! (= put_in_reg_sext32__25__ret__98 (ite (<= 64 32) (concat fresh5 (_ bv0 32)) put_in_reg_sext32__25__arg__99)) :named assum23))
(assert (! (= rn__clif1__14 put_in_reg_sext32__25__arg__99) :named assum24))
(assert (! (= put_in_reg_sext32__25 put_in_reg_sext32__25__ret__98) :named assum25))
(assert (! (= operand_size__27__ret__108 (ite (<= operand_size__27__ty__109 32) 32 64)) :named assum26))
(assert (! (= ty__clif3__20 operand_size__27__ty__109) :named assum27))
(assert (! (= operand_size__27 operand_size__27__ret__108) :named assum28))
(assert (! (= put_in_reg__28__arg__127 put_in_reg__28__ret__129) :named assum29))
(assert (! (= rm__clif2__17 put_in_reg__28__arg__127) :named assum30))
(assert (! (= put_in_reg__28 put_in_reg__28__ret__129) :named assum31))
(assert (! (= lower_extend_op__30__ret__131 (ite (= lower_extend_op__30__ty__132 8) (ite lower_extend_op__30__b__135 (_ bv4 3) (_ bv0 3)) (ite lower_extend_op__30__b__135 (_ bv5 3) (_ bv1 3)))) :named assum32))
(assert (! (= ty__clif3__20 lower_extend_op__30__ty__132) :named assum33))
(assert (! (= true lower_extend_op__30__b__135) :named assum34))
(assert (! (= lower_extend_op__30 lower_extend_op__30__ret__131) :named assum35))
(assert (! (= cmp_extend__31__ret__155 (ite (= cmp_extend__31__ty__156 32) subs_ret_32_185 subs_ret_64_185)) :named assum36))
(assert (! (= operand_size__27 cmp_extend__31__ty__156) :named assum37))
(assert (! (= rn__clif4__26 cmp_extend__31__x__157) :named assum38))
(assert (! (= put_in_reg__28 cmp_extend__31__y__161) :named assum39))
(assert (! (= lower_extend_op__30 cmp_extend__31__extend__158) :named assum40))
(assert (! (= cmp_extend__31 cmp_extend__31__ret__155) :named assum41))
(assert (! (= flags_and_cc__32__ret__192 (bvor (bvshl ((_ zero_extend 8) ((_ extract 67 64) flags_and_cc__32__pflags__194)) (_ bv8 12)) ((_ zero_extend 4) flags_and_cc__32__c__200))) :named assum42))
(assert (! (= cmp_extend__31 flags_and_cc__32__pflags__194) :named assum43))
(assert (! (= cond__clif0__2 flags_and_cc__32__c__200) :named assum44))
(assert (! (= flags_and_cc__32 flags_and_cc__32__ret__192) :named assum45))
(assert (! (= rn__clif4__26 put_in_reg_sext32__25) :named assum46))
(assert (! (= ynot_32_55 (bvnot ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__y__53)))) :named assum47))
(assert (! (= subs_wide_32_55 (bvadd (bvadd ((_ zero_extend 32) ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__x__51))) ((_ zero_extend 32) ynot_32_55)) (_ bv1 64))) :named assum48))
(assert (! (= subs_32_55 ((_ extract 31 0) subs_wide_32_55)) :named assum49))
(assert (! (= flags_32_55 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_32_55 (_ bv31 32))) (ite (= subs_32_55 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 32) subs_32_55) subs_wide_32_55) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 32) subs_32_55) (bvadd (bvadd ((_ sign_extend 32) ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__x__51))) ((_ sign_extend 32) ynot_32_55)) (_ bv1 64))) (_ bv0 1) (_ bv1 1)))) :named assum50))
(assert (! (= subs_ret_32_55 (concat flags_32_55 ((_ zero_extend 32) subs_32_55))) :named assum51))
(assert (! (= ynot_64_55 (bvnot ((_ sign_extend 0) lower_icmp__24__y__53))) :named assum52))
(assert (! (= subs_wide_64_55 (bvadd (bvadd ((_ zero_extend 64) ((_ sign_extend 0) lower_icmp__24__x__51)) ((_ zero_extend 64) ynot_64_55)) (_ bv1 128))) :named assum53))
(assert (! (= subs_64_55 ((_ extract 63 0) subs_wide_64_55)) :named assum54))
(assert (! (= flags_64_55 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_64_55 (_ bv63 64))) (ite (= subs_64_55 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 64) subs_64_55) subs_wide_64_55) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 64) subs_64_55) (bvadd (bvadd ((_ sign_extend 64) ((_ sign_extend 0) lower_icmp__24__x__51)) ((_ sign_extend 64) ynot_64_55)) (_ bv1 128))) (_ bv0 1) (_ bv1 1)))) :named assum55))
(assert (! (= subs_ret_64_55 (concat flags_64_55 subs_64_55)) :named assum56))
(assert (! (= ynot_32_59 (bvnot ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__y__53)))) :named assum57))
(assert (! (= subs_wide_32_59 (bvadd (bvadd ((_ zero_extend 32) ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__x__51))) ((_ zero_extend 32) ynot_32_59)) (_ bv1 64))) :named assum58))
(assert (! (= subs_32_59 ((_ extract 31 0) subs_wide_32_59)) :named assum59))
(assert (! (= flags_32_59 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_32_59 (_ bv31 32))) (ite (= subs_32_59 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 32) subs_32_59) subs_wide_32_59) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 32) subs_32_59) (bvadd (bvadd ((_ sign_extend 32) ((_ extract 31 0) ((_ sign_extend 0) lower_icmp__24__x__51))) ((_ sign_extend 32) ynot_32_59)) (_ bv1 64))) (_ bv0 1) (_ bv1 1)))) :named assum60))
(assert (! (= subs_ret_32_59 (concat flags_32_59 ((_ zero_extend 32) subs_32_59))) :named assum61))
(assert (! (= ynot_64_59 (bvnot ((_ sign_extend 0) lower_icmp__24__y__53))) :named assum62))
(assert (! (= subs_wide_64_59 (bvadd (bvadd ((_ zero_extend 64) ((_ sign_extend 0) lower_icmp__24__x__51)) ((_ zero_extend 64) ynot_64_59)) (_ bv1 128))) :named assum63))
(assert (! (= subs_64_59 ((_ extract 63 0) subs_wide_64_59)) :named assum64))
(assert (! (= flags_64_59 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_64_59 (_ bv63 64))) (ite (= subs_64_59 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 64) subs_64_59) subs_wide_64_59) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 64) subs_64_59) (bvadd (bvadd ((_ sign_extend 64) ((_ sign_extend 0) lower_icmp__24__x__51)) ((_ sign_extend 64) ynot_64_59)) (_ bv1 128))) (_ bv0 1) (_ bv1 1)))) :named assum65))
(assert (! (= subs_ret_64_59 (concat flags_64_59 subs_64_59)) :named assum66))
(assert (! (= ynot_32_66 (bvnot ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__y__53)))) :named assum67))
(assert (! (= subs_wide_32_66 (bvadd (bvadd ((_ zero_extend 32) ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__x__51))) ((_ zero_extend 32) ynot_32_66)) (_ bv1 64))) :named assum68))
(assert (! (= subs_32_66 ((_ extract 31 0) subs_wide_32_66)) :named assum69))
(assert (! (= flags_32_66 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_32_66 (_ bv31 32))) (ite (= subs_32_66 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 32) subs_32_66) subs_wide_32_66) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 32) subs_32_66) (bvadd (bvadd ((_ sign_extend 32) ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__x__51))) ((_ sign_extend 32) ynot_32_66)) (_ bv1 64))) (_ bv0 1) (_ bv1 1)))) :named assum70))
(assert (! (= subs_ret_32_66 (concat flags_32_66 ((_ zero_extend 32) subs_32_66))) :named assum71))
(assert (! (= ynot_64_66 (bvnot ((_ zero_extend 0) lower_icmp__24__y__53))) :named assum72))
(assert (! (= subs_wide_64_66 (bvadd (bvadd ((_ zero_extend 64) ((_ zero_extend 0) lower_icmp__24__x__51)) ((_ zero_extend 64) ynot_64_66)) (_ bv1 128))) :named assum73))
(assert (! (= subs_64_66 ((_ extract 63 0) subs_wide_64_66)) :named assum74))
(assert (! (= flags_64_66 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_64_66 (_ bv63 64))) (ite (= subs_64_66 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 64) subs_64_66) subs_wide_64_66) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 64) subs_64_66) (bvadd (bvadd ((_ sign_extend 64) ((_ zero_extend 0) lower_icmp__24__x__51)) ((_ sign_extend 64) ynot_64_66)) (_ bv1 128))) (_ bv0 1) (_ bv1 1)))) :named assum75))
(assert (! (= subs_ret_64_66 (concat flags_64_66 subs_64_66)) :named assum76))
(assert (! (= ynot_32_70 (bvnot ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__y__53)))) :named assum77))
(assert (! (= subs_wide_32_70 (bvadd (bvadd ((_ zero_extend 32) ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__x__51))) ((_ zero_extend 32) ynot_32_70)) (_ bv1 64))) :named assum78))
(assert (! (= subs_32_70 ((_ extract 31 0) subs_wide_32_70)) :named assum79))
(assert (! (= flags_32_70 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_32_70 (_ bv31 32))) (ite (= subs_32_70 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 32) subs_32_70) subs_wide_32_70) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 32) subs_32_70) (bvadd (bvadd ((_ sign_extend 32) ((_ extract 31 0) ((_ zero_extend 0) lower_icmp__24__x__51))) ((_ sign_extend 32) ynot_32_70)) (_ bv1 64))) (_ bv0 1) (_ bv1 1)))) :named assum80))
(assert (! (= subs_ret_32_70 (concat flags_32_70 ((_ zero_extend 32) subs_32_70))) :named assum81))
(assert (! (= ynot_64_70 (bvnot ((_ zero_extend 0) lower_icmp__24__y__53))) :named assum82))
(assert (! (= subs_wide_64_70 (bvadd (bvadd ((_ zero_extend 64) ((_ zero_extend 0) lower_icmp__24__x__51)) ((_ zero_extend 64) ynot_64_70)) (_ bv1 128))) :named assum83))
(assert (! (= subs_64_70 ((_ extract 63 0) subs_wide_64_70)) :named assum84))
(assert (! (= flags_64_70 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_64_70 (_ bv63 64))) (ite (= subs_64_70 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 64) subs_64_70) subs_wide_64_70) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 64) subs_64_70) (bvadd (bvadd ((_ sign_extend 64) ((_ zero_extend 0) lower_icmp__24__x__51)) ((_ sign_extend 64) ynot_64_70)) (_ bv1 128))) (_ bv0 1) (_ bv1 1)))) :named assum85))
(assert (! (= subs_ret_64_70 (concat flags_64_70 subs_64_70)) :named assum86))
(assert (! (= ynot_32_185 (bvnot ((_ extract 31 0) (ite (= cmp_extend__31__extend__158 (_ bv0 3)) ((_ zero_extend 56) ((_ extract 7 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv1 3)) ((_ zero_extend 48) ((_ extract 15 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv2 3)) ((_ zero_extend 32) ((_ extract 31 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv3 3)) ((_ zero_extend 0) ((_ extract 63 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv4 3)) ((_ sign_extend 56) ((_ extract 7 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv5 3)) ((_ sign_extend 48) ((_ extract 15 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv6 3)) ((_ sign_extend 32) ((_ extract 31 0) cmp_extend__31__y__161)) ((_ sign_extend 0) ((_ extract 63 0) cmp_extend__31__y__161)))))))))))) :named assum87))
(assert (! (= subs_wide_32_185 (bvadd (bvadd ((_ zero_extend 32) ((_ extract 31 0) cmp_extend__31__x__157)) ((_ zero_extend 32) ynot_32_185)) (_ bv1 64))) :named assum88))
(assert (! (= subs_32_185 ((_ extract 31 0) subs_wide_32_185)) :named assum89))
(assert (! (= flags_32_185 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_32_185 (_ bv31 32))) (ite (= subs_32_185 (_ bv0 32)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 32) subs_32_185) subs_wide_32_185) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 32) subs_32_185) (bvadd (bvadd ((_ sign_extend 32) ((_ extract 31 0) cmp_extend__31__x__157)) ((_ sign_extend 32) ynot_32_185)) (_ bv1 64))) (_ bv0 1) (_ bv1 1)))) :named assum90))
(assert (! (= subs_ret_32_185 (concat flags_32_185 ((_ zero_extend 32) subs_32_185))) :named assum91))
(assert (! (= ynot_64_185 (bvnot (ite (= cmp_extend__31__extend__158 (_ bv0 3)) ((_ zero_extend 56) ((_ extract 7 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv1 3)) ((_ zero_extend 48) ((_ extract 15 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv2 3)) ((_ zero_extend 32) ((_ extract 31 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv3 3)) ((_ zero_extend 0) ((_ extract 63 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv4 3)) ((_ sign_extend 56) ((_ extract 7 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv5 3)) ((_ sign_extend 48) ((_ extract 15 0) cmp_extend__31__y__161)) (ite (= cmp_extend__31__extend__158 (_ bv6 3)) ((_ sign_extend 32) ((_ extract 31 0) cmp_extend__31__y__161)) ((_ sign_extend 0) ((_ extract 63 0) cmp_extend__31__y__161))))))))))) :named assum92))
(assert (! (= subs_wide_64_185 (bvadd (bvadd ((_ zero_extend 64) cmp_extend__31__x__157) ((_ zero_extend 64) ynot_64_185)) (_ bv1 128))) :named assum93))
(assert (! (= subs_64_185 ((_ extract 63 0) subs_wide_64_185)) :named assum94))
(assert (! (= flags_64_185 (concat (concat (concat ((_ extract 0 0) (bvlshr subs_64_185 (_ bv63 64))) (ite (= subs_64_185 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) (ite (= ((_ zero_extend 64) subs_64_185) subs_wide_64_185) (_ bv0 1) (_ bv1 1))) (ite (= ((_ sign_extend 64) subs_64_185) (bvadd (bvadd ((_ sign_extend 64) cmp_extend__31__x__157) ((_ sign_extend 64) ynot_64_185)) (_ bv1 128))) (_ bv0 1) (_ bv1 1)))) :named assum95))
(assert (! (= subs_ret_64_185 (concat flags_64_185 subs_64_185)) :named assum96))
(check-sat)
(get-unsat-core)
(pop)
