(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const add_imm__16 (_ BitVec 64))
(declare-const add_imm__16__a__69 (_ BitVec 64))
(declare-const add_imm__16__b__71 (_ BitVec 24))
(declare-const add_imm__16__result__64 (_ BitVec 64))
(declare-const add_imm__16__ty__65 Int)
(declare-const fits_in_64__4 Int)
(declare-const fits_in_64__4__arg__19 Int)
(declare-const fits_in_64__4__result__18 Int)
(declare-const has_type__13 (_ BitVec 64))
(declare-const has_type__13__arg__51 (_ BitVec 64))
(declare-const has_type__13__result__50 (_ BitVec 64))
(declare-const has_type__13__ty__53 Int)
(declare-const imm12_from_negated_value__11 (_ BitVec 64))
(declare-const imm12_from_negated_value__11__arg__39 (_ BitVec 24))
(declare-const imm12_from_negated_value__11__result__23 (_ BitVec 64))
(declare-const isub__12 (_ BitVec 64))
(declare-const isub__12__result__45 (_ BitVec 64))
(declare-const isub__12__x__46 (_ BitVec 64))
(declare-const isub__12__y__47 (_ BitVec 64))
(declare-const lower__14 (_ BitVec 64))
(declare-const lower__14__arg__57 (_ BitVec 64))
(declare-const lower__14__result__56 (_ BitVec 64))
(declare-const output_reg__17 (_ BitVec 64))
(declare-const output_reg__17__arg__92 (_ BitVec 64))
(declare-const output_reg__17__result__90 (_ BitVec 64))
(declare-const put_in_reg__15 (_ BitVec 64))
(declare-const put_in_reg__15__arg__61 (_ BitVec 64))
(declare-const put_in_reg__15__result__59 (_ BitVec 64))
(declare-const ty__clif0__1 Int)
(declare-const x__clif1__5 (_ BitVec 64))
(declare-const y__clif2__8 (_ BitVec 24))
(declare-const fresh0 Int)
(declare-const fresh1 (_ BitVec 64))
(declare-const fresh2 (_ BitVec 24))
(declare-const fresh3 (_ BitVec 32))
(push)
(assert (! (= ty__clif0__1 fresh0) :named assum0))
(assert (! (= fits_in_64__4__result__18 fits_in_64__4__arg__19) :named assum1))
(assert (! (<= fits_in_64__4__arg__19 64) :named assum2))
(assert (! (= ty__clif0__1 fits_in_64__4__arg__19) :named assum3))
(assert (! (= fits_in_64__4 fits_in_64__4__result__18) :named assum4))
(assert (! (= x__clif1__5 fresh1) :named assum5))
(assert (! (= y__clif2__8 fresh2) :named assum6))
(assert (! (or (bvult (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23)) (_ bv4095 64)) (and (bvult (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23)) (_ bv16773120 64)) (= ((_ extract 2 0) (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23))) (_ bv0 3)))) :named assum7))
(assert (! (= imm12_from_negated_value__11__result__23 (bvneg ((_ zero_extend 40) imm12_from_negated_value__11__arg__39))) :named assum8))
(assert (! (= y__clif2__8 imm12_from_negated_value__11__arg__39) :named assum9))
(assert (! (= imm12_from_negated_value__11 imm12_from_negated_value__11__result__23) :named assum10))
(assert (! (= isub__12__result__45 (bvsub isub__12__x__46 isub__12__y__47)) :named assum11))
(assert (! (= x__clif1__5 isub__12__x__46) :named assum12))
(assert (! (= imm12_from_negated_value__11 isub__12__y__47) :named assum13))
(assert (! (= isub__12 isub__12__result__45) :named assum14))
(assert (! (= has_type__13__result__50 has_type__13__arg__51) :named assum15))
(assert (! (= has_type__13__ty__53 64) :named assum16))
(assert (! (= fits_in_64__4 has_type__13__ty__53) :named assum17))
(assert (! (= isub__12 has_type__13__arg__51) :named assum18))
(assert (! (= has_type__13 has_type__13__result__50) :named assum19))
(assert (! (= lower__14__result__56 lower__14__arg__57) :named assum20))
(assert (! (= has_type__13 lower__14__arg__57) :named assum21))
(assert (! (= lower__14 lower__14__result__56) :named assum22))
(assert (! (= put_in_reg__15__result__59 put_in_reg__15__arg__61) :named assum23))
(assert (! (= x__clif1__5 put_in_reg__15__arg__61) :named assum24))
(assert (! (= put_in_reg__15 put_in_reg__15__result__59) :named assum25))
(assert (! (= add_imm__16__result__64 (ite (<= add_imm__16__ty__65 32) (concat fresh3 (bvadd ((_ extract 31 0) add_imm__16__a__69) ((_ zero_extend 8) add_imm__16__b__71))) (bvadd add_imm__16__a__69 ((_ zero_extend 40) add_imm__16__b__71)))) :named assum26))
(assert (! (= ty__clif0__1 add_imm__16__ty__65) :named assum27))
(assert (! (= put_in_reg__15 add_imm__16__a__69) :named assum28))
(assert (! (= y__clif2__8 add_imm__16__b__71) :named assum29))
(assert (! (= add_imm__16 add_imm__16__result__64) :named assum30))
(assert (! (= output_reg__17__result__90 output_reg__17__arg__92) :named assum31))
(assert (! (= add_imm__16 output_reg__17__arg__92) :named assum32))
(assert (! (= output_reg__17 output_reg__17__result__90) :named assum33))
(check-sat)
(get-value (x__clif1__5 imm12_from_negated_value__11))
(assert (and (not (= x__clif1__5 #x0000000000000000)) (not (= imm12_from_negated_value__11 #x0000000000000000))))
(check-sat)
(pop)
(assert (not (=> (and (= ty__clif0__1 fresh0) (= fits_in_64__4__result__18 fits_in_64__4__arg__19) (<= fits_in_64__4__arg__19 64) (= ty__clif0__1 fits_in_64__4__arg__19) (= fits_in_64__4 fits_in_64__4__result__18) (= x__clif1__5 fresh1) (= y__clif2__8 fresh2) (or (bvult (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23)) (_ bv4095 64)) (and (bvult (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23)) (_ bv16773120 64)) (= ((_ extract 2 0) (bvneg ((_ zero_extend 0) imm12_from_negated_value__11__result__23))) (_ bv0 3)))) (= imm12_from_negated_value__11__result__23 (bvneg ((_ zero_extend 40) imm12_from_negated_value__11__arg__39))) (= y__clif2__8 imm12_from_negated_value__11__arg__39) (= imm12_from_negated_value__11 imm12_from_negated_value__11__result__23) (= isub__12__result__45 (bvsub isub__12__x__46 isub__12__y__47)) (= x__clif1__5 isub__12__x__46) (= imm12_from_negated_value__11 isub__12__y__47) (= isub__12 isub__12__result__45) (= has_type__13__result__50 has_type__13__arg__51) (= has_type__13__ty__53 64) (= fits_in_64__4 has_type__13__ty__53) (= isub__12 has_type__13__arg__51) (= has_type__13 has_type__13__result__50) (= lower__14__result__56 lower__14__arg__57) (= has_type__13 lower__14__arg__57) (= lower__14 lower__14__result__56) (= put_in_reg__15__result__59 put_in_reg__15__arg__61) (= x__clif1__5 put_in_reg__15__arg__61) (= put_in_reg__15 put_in_reg__15__result__59) (= add_imm__16__result__64 (ite (<= add_imm__16__ty__65 32) (concat fresh3 (bvadd ((_ extract 31 0) add_imm__16__a__69) ((_ zero_extend 8) add_imm__16__b__71))) (bvadd add_imm__16__a__69 ((_ zero_extend 40) add_imm__16__b__71)))) (= ty__clif0__1 add_imm__16__ty__65) (= put_in_reg__15 add_imm__16__a__69) (= y__clif2__8 add_imm__16__b__71) (= add_imm__16 add_imm__16__result__64) (= output_reg__17__result__90 output_reg__17__arg__92) (= add_imm__16 output_reg__17__arg__92) (= output_reg__17 output_reg__17__result__90)) (and (= lower__14 output_reg__17) (or (<= (bv2nat add_imm__16__b__71) 4094) (and (<= (bv2nat add_imm__16__b__71) 16773119) (= ((_ extract 2 0) add_imm__16__b__71) (_ bv0 3))))))))
(check-sat)
