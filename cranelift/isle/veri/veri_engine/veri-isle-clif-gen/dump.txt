inst = jump
    format = Jump(imms=(), vals=0, blocks=1)
    op = <not value>
inst = brif
    format = Brif(imms=(), vals=1, blocks=2)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = br_table
    format = BranchTable(imms=(table: ir::JumpTable), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={32})
    op = <not value>
inst = debugtrap
    format = NullAry(imms=(), vals=0, blocks=0)
    error = unknown signatures: non-polymorphic instructions not handled
inst = trap
    format = Trap(imms=(code: ir::TrapCode), vals=0, blocks=0)
    op = <not value>
inst = trapz
    format = CondTrap(imms=(code: ir::TrapCode), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = resumable_trap
    format = Trap(imms=(code: ir::TrapCode), vals=0, blocks=0)
    op = <not value>
inst = trapnz
    format = CondTrap(imms=(code: ir::TrapCode), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = resumable_trapnz
    format = CondTrap(imms=(code: ir::TrapCode), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = return
    format = MultiAry(imms=(), vals=0, blocks=0)
    op = <not value>
inst = call
    format = Call(imms=(func_ref: ir::FuncRef), vals=0, blocks=0)
    op = <not value>
inst = call_indirect
    format = CallIndirect(imms=(sig_ref: ir::SigRef), vals=1, blocks=0)
    op = <not value>
inst = return_call
    format = Call(imms=(func_ref: ir::FuncRef), vals=0, blocks=0)
    op = <not value>
inst = return_call_indirect
    format = CallIndirect(imms=(sig_ref: ir::SigRef), vals=1, blocks=0)
    op = <not value>
inst = func_addr
    format = FuncAddr(imms=(func_ref: ir::FuncRef), vals=0, blocks=0)
    op = <not value>
inst = splat
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = TxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    error = unknown signatures: could not derived operand types
inst = swizzle
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={16}, ints={8})
    op = TypeSet(lanes={16}, ints={8})
    error = unknown signatures: non-polymorphic instructions not handled
inst = x86_pshufb
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={16}, ints={8})
    op = TypeSet(lanes={16}, ints={8})
    error = unknown signatures: non-polymorphic instructions not handled
inst = insertlane
    format = TernaryImm8(imms=(imm: ir::immediates::Uimm8), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = <not value>
inst = extractlane
    format = BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = <not value>
inst = smin
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = umin
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = smax
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = umax
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = avg_round
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = IxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = uadd_sat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = IxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = sadd_sat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = IxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = usub_sat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = IxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = ssub_sat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = IxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = load
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = store
    format = Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2, blocks=0)
    op = <not value>
inst = uload8
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload8
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = istore8
    format = Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2, blocks=0)
    op = <not value>
inst = uload16
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload16
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = istore16
    format = Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2, blocks=0)
    op = <not value>
inst = uload32
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload32
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = istore32
    format = Store(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=2, blocks=0)
    op = <not value>
inst = uload8x8
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload8x8
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = uload16x4
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload16x4
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = uload32x2
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = sload32x2
    format = Load(imms=(flags: ir::MemFlags, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = stack_load
    format = StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0, blocks=0)
    op = <not value>
inst = stack_store
    format = StackStore(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = <not value>
inst = stack_addr
    format = StackLoad(imms=(stack_slot: ir::StackSlot, offset: ir::immediates::Offset32), vals=0, blocks=0)
    op = <not value>
inst = dynamic_stack_load
    format = DynamicStackLoad(imms=(dynamic_stack_slot: ir::DynamicStackSlot), vals=0, blocks=0)
    op = <not value>
inst = dynamic_stack_store
    format = DynamicStackStore(imms=(dynamic_stack_slot: ir::DynamicStackSlot), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = <not value>
inst = dynamic_stack_addr
    format = DynamicStackLoad(imms=(dynamic_stack_slot: ir::DynamicStackSlot), vals=0, blocks=0)
    op = <not value>
inst = global_value
    format = UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0, blocks=0)
    op = <not value>
inst = symbol_value
    format = UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0, blocks=0)
    op = <not value>
inst = tls_value
    format = UnaryGlobalValue(imms=(global_value: ir::GlobalValue), vals=0, blocks=0)
    op = <not value>
inst = get_pinned_reg
    format = NullAry(imms=(), vals=0, blocks=0)
    use_typevar_operand = false
    ctrl_typevar = iAddr
    typeset = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    sig = Signature { args: [], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = set_pinned_reg
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = iAddr
    typeset = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = get_frame_pointer
    format = NullAry(imms=(), vals=0, blocks=0)
    use_typevar_operand = false
    ctrl_typevar = iAddr
    typeset = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    sig = Signature { args: [], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = get_stack_pointer
    format = NullAry(imms=(), vals=0, blocks=0)
    use_typevar_operand = false
    ctrl_typevar = iAddr
    typeset = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    sig = Signature { args: [], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = get_return_address
    format = NullAry(imms=(), vals=0, blocks=0)
    use_typevar_operand = false
    ctrl_typevar = iAddr
    typeset = TypeSet(lanes={1}, ints={32, 64}, refs={32, 64})
    sig = Signature { args: [], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = table_addr
    format = TableAddr(imms=(table: ir::Table, offset: ir::immediates::Offset32), vals=1, blocks=0)
    op = <not value>
inst = iconst
    format = UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0, blocks=0)
    op = <not value>
inst = f32const
    format = UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0, blocks=0)
    op = <not value>
inst = f64const
    format = UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0, blocks=0)
    op = <not value>
inst = vconst
    format = UnaryConst(imms=(constant_handle: ir::Constant), vals=0, blocks=0)
    op = <not value>
inst = shuffle
    format = Shuffle(imms=(imm: ir::Immediate), vals=2, blocks=0)
    op = TypeSet(lanes={16}, ints={8})
    op = TypeSet(lanes={16}, ints={8})
    op = <not value>
inst = null
    format = NullAry(imms=(), vals=0, blocks=0)
    use_typevar_operand = false
    ctrl_typevar = Ref
    typeset = TypeSet(lanes={1}, refs={32, 64})
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = nop
    format = NullAry(imms=(), vals=0, blocks=0)
    error = unknown signatures: non-polymorphic instructions not handled
inst = select
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Any
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = select_spectre_guard
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Any
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = bitselect
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Any
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = x86_blendv
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Any
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64}, refs={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32)), Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64)), Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = vany_true
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = TxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = vall_true
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = TxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = vhigh_bits
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = NarrowInt
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
inst = icmp
    format = IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2, blocks=0)
    op = <not value>
inst = icmp_imm
    format = IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = <not value>
inst = iadd
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = isub
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = ineg
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = iabs
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = imul
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = umulhi
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = smulhi
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = sqmul_round_sat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={4, 8}, ints={16, 32})
    op = TypeSet(lanes={4, 8}, ints={16, 32})
    use_typevar_operand = true
    ctrl_typevar = I16or32
    typeset = TypeSet(lanes={4, 8}, ints={16, 32})
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
inst = x86_pmulhrsw
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={4, 8}, ints={16, 32})
    op = TypeSet(lanes={4, 8}, ints={16, 32})
    use_typevar_operand = true
    ctrl_typevar = I16or32
    typeset = TypeSet(lanes={4, 8}, ints={16, 32})
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
inst = udiv
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = sdiv
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = urem
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = srem
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = iadd_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = imul_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = udiv_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = sdiv_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = urem_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = srem_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = irsub_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = iadd_cin
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = iadd_carry
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = uadd_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = sadd_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = usub_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = ssub_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = umul_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = NarrowScalar
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
inst = smul_overflow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = NarrowScalar
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
inst = uadd_overflow_trap
    format = IntAddTrap(imms=(code: ir::TrapCode), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={32, 64})
    op = TypeSet(lanes={1}, ints={32, 64})
    op = <not value>
inst = isub_bin
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = isub_borrow
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = band
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = bor
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = bxor
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = bnot
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = band_not
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = bor_not
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = bxor_not
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = bits
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = band_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = bor_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = bxor_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = rotl
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = rotr
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = rotl_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = rotr_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = ishl
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = ushr
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = sshr
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128)), Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256)), Lane(IntType(bits=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = ishl_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = ushr_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = sshr_imm
    format = BinaryImm64(imms=(imm: ir::immediates::Imm64), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    op = <not value>
inst = bitrev
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = clz
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = cls
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = ctz
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iB
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = bswap
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = iSwappable
    typeset = TypeSet(lanes={1}, ints={16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = popcnt
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=i128, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=i128, lanes=256)) }
inst = fcmp
    format = FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2, blocks=0)
    op = <not value>
inst = fadd
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fsub
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fmul
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fdiv
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = sqrt
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fma
    format = Ternary(imms=(), vals=3, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fneg
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fabs
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fcopysign
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fmin
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = fmax
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32)), Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64)), Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2)), Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2)), Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4)), Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4)), Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8)), Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8)), Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16)), Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16)), Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32)), Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32)), Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64)), Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64)), Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128)), Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128)), Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256)), Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256)), Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2)), DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2)), DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4)), DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4)), DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8)), DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8)), DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16)), DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16)), DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32)), DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32)), DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64)), DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64)), DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128)), DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128)), DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256)), DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256)), DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = ceil
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = floor
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = trunc
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = nearest
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Float
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], ctrl: DynamicVector(DynamicVectorType(base=f64, lanes=256)) }
inst = is_null
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Ref
    typeset = TypeSet(lanes={1}, refs={32, 64})
    sig = Signature { args: [Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = is_invalid
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, refs={32, 64})
    use_typevar_operand = true
    ctrl_typevar = Ref
    typeset = TypeSet(lanes={1}, refs={32, 64})
    sig = Signature { args: [Reference(ReferenceType(bits=32))], rets: [Reference(ReferenceType(bits=32))], ctrl: Reference(ReferenceType(bits=32)) }
    sig = Signature { args: [Reference(ReferenceType(bits=64))], rets: [Reference(ReferenceType(bits=64))], ctrl: Reference(ReferenceType(bits=64)) }
inst = bitcast
    format = LoadNoOffset(imms=(flags: ir::MemFlags), vals=1, blocks=0)
    op = <not value>
inst = scalar_to_vector
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = TxN
    typeset = TypeSet(lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    error = unknown signatures: could not derived operand types
inst = bmask
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = ireduce
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    error = unknown signatures: could not derived operand types
inst = snarrow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = I16or32or64xN
    typeset = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
inst = unarrow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = I16or32or64xN
    typeset = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
inst = uunarrow
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    op = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = I16or32or64xN
    typeset = TypeSet(lanes={2, 4, 8}, dynamic_lanes={2, 4, 8}, ints={16, 32, 64})
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2)), Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4)), Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8)), Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=2)), DynamicVector(DynamicVectorType(base=i64, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=4)), DynamicVector(DynamicVectorType(base=i64, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i64, lanes=8)), DynamicVector(DynamicVectorType(base=i64, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i64, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i64, lanes=8)) }
inst = swiden_low
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    use_typevar_operand = true
    ctrl_typevar = I8or16or32xN
    typeset = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
inst = swiden_high
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    use_typevar_operand = true
    ctrl_typevar = I8or16or32xN
    typeset = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
inst = uwiden_low
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    use_typevar_operand = true
    ctrl_typevar = I8or16or32xN
    typeset = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
inst = uwiden_high
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    use_typevar_operand = true
    ctrl_typevar = I8or16or32xN
    typeset = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
inst = iadd_pairwise
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    op = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    use_typevar_operand = true
    ctrl_typevar = I8or16or32xN
    typeset = TypeSet(lanes={2, 4, 8, 16}, dynamic_lanes={2, 4, 8, 16}, ints={8, 16, 32})
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2)), Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2)), Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2)), Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4)), Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4)), Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4)), Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8)), Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8)), Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8)), Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16)), Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16)), Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16)), Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=2)), DynamicVector(DynamicVectorType(base=i8, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=2)), DynamicVector(DynamicVectorType(base=i16, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=2)), DynamicVector(DynamicVectorType(base=i32, lanes=2))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=2))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=4)), DynamicVector(DynamicVectorType(base=i8, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=4)), DynamicVector(DynamicVectorType(base=i16, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=4)), DynamicVector(DynamicVectorType(base=i32, lanes=4))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=4))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=8)), DynamicVector(DynamicVectorType(base=i8, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=8)), DynamicVector(DynamicVectorType(base=i16, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=8)), DynamicVector(DynamicVectorType(base=i32, lanes=8))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=8))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i8, lanes=16)), DynamicVector(DynamicVectorType(base=i8, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i8, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i16, lanes=16)), DynamicVector(DynamicVectorType(base=i16, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i16, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=i32, lanes=16)), DynamicVector(DynamicVectorType(base=i32, lanes=16))], rets: [DynamicVector(DynamicVectorType(base=i32, lanes=16))], ctrl: DynamicVector(DynamicVectorType(base=i32, lanes=16)) }
inst = x86_pmaddubsw
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={16}, ints={8})
    op = TypeSet(lanes={16}, ints={8})
    error = unknown signatures: non-polymorphic instructions not handled
inst = uextend
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    error = unknown signatures: could not derived operand types
inst = sextend
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = Int
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    error = unknown signatures: could not derived operand types
inst = fpromote
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = FloatScalar
    typeset = TypeSet(lanes={1}, floats={32, 64})
    error = unknown signatures: could not derived operand types
inst = fdemote
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = FloatScalar
    typeset = TypeSet(lanes={1}, floats={32, 64})
    error = unknown signatures: could not derived operand types
inst = fvdemote
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={2}, floats={64})
    error = unknown signatures: non-polymorphic instructions not handled
inst = fvpromote_low
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={4}, floats={32})
    error = unknown signatures: non-polymorphic instructions not handled
inst = fcvt_to_uint
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = fcvt_to_sint
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = fcvt_to_uint_sat
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = fcvt_to_sint_sat
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = x86_cvtt2dq
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    use_typevar_operand = false
    ctrl_typevar = IntTo
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=2))], ctrl: Vector(VectorType(base=i8, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=2))], ctrl: Vector(VectorType(base=i16, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=2))], ctrl: Vector(VectorType(base=i32, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=2))], ctrl: Vector(VectorType(base=i64, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=2))], ctrl: Vector(VectorType(base=i128, lanes=2)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=4))], ctrl: Vector(VectorType(base=i8, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=4))], ctrl: Vector(VectorType(base=i16, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=4))], ctrl: Vector(VectorType(base=i32, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=4))], ctrl: Vector(VectorType(base=i64, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=4))], ctrl: Vector(VectorType(base=i128, lanes=4)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=8))], ctrl: Vector(VectorType(base=i8, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=8))], ctrl: Vector(VectorType(base=i16, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=8))], ctrl: Vector(VectorType(base=i32, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=8))], ctrl: Vector(VectorType(base=i64, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=8))], ctrl: Vector(VectorType(base=i128, lanes=8)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=16))], ctrl: Vector(VectorType(base=i8, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=16))], ctrl: Vector(VectorType(base=i16, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=16))], ctrl: Vector(VectorType(base=i32, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=16))], ctrl: Vector(VectorType(base=i64, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=16))], ctrl: Vector(VectorType(base=i128, lanes=16)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=32))], ctrl: Vector(VectorType(base=i8, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=32))], ctrl: Vector(VectorType(base=i16, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=32))], ctrl: Vector(VectorType(base=i32, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=32))], ctrl: Vector(VectorType(base=i64, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=32))], ctrl: Vector(VectorType(base=i128, lanes=32)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=64))], ctrl: Vector(VectorType(base=i8, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=64))], ctrl: Vector(VectorType(base=i16, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=64))], ctrl: Vector(VectorType(base=i32, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=64))], ctrl: Vector(VectorType(base=i64, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=64))], ctrl: Vector(VectorType(base=i128, lanes=64)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=128))], ctrl: Vector(VectorType(base=i8, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=128))], ctrl: Vector(VectorType(base=i16, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=128))], ctrl: Vector(VectorType(base=i32, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=128))], ctrl: Vector(VectorType(base=i64, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=128))], ctrl: Vector(VectorType(base=i128, lanes=128)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i8, lanes=256))], ctrl: Vector(VectorType(base=i8, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i16, lanes=256))], ctrl: Vector(VectorType(base=i16, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i32, lanes=256))], ctrl: Vector(VectorType(base=i32, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i64, lanes=256))], ctrl: Vector(VectorType(base=i64, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Lane(FloatType(bits=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=2))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=4))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=8))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=16))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=32))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=64))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=128))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f32, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
    sig = Signature { args: [DynamicVector(DynamicVectorType(base=f64, lanes=256))], rets: [Vector(VectorType(base=i128, lanes=256))], ctrl: Vector(VectorType(base=i128, lanes=256)) }
inst = fcvt_from_uint
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = FloatTo
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = fcvt_from_sint
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128})
    use_typevar_operand = false
    ctrl_typevar = FloatTo
    typeset = TypeSet(lanes={1, 2, 4, 8, 16, 32, 64, 128, 256}, floats={32, 64})
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(FloatType(bits=32))], ctrl: Lane(FloatType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Lane(FloatType(bits=64))], ctrl: Lane(FloatType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=2))], ctrl: Vector(VectorType(base=f32, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=2))], ctrl: Vector(VectorType(base=f64, lanes=2)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=4))], ctrl: Vector(VectorType(base=f32, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=4))], ctrl: Vector(VectorType(base=f64, lanes=4)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=8))], ctrl: Vector(VectorType(base=f32, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=8))], ctrl: Vector(VectorType(base=f64, lanes=8)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=16))], ctrl: Vector(VectorType(base=f32, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=16))], ctrl: Vector(VectorType(base=f64, lanes=16)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=32))], ctrl: Vector(VectorType(base=f32, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=32))], ctrl: Vector(VectorType(base=f64, lanes=32)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=64))], ctrl: Vector(VectorType(base=f32, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=64))], ctrl: Vector(VectorType(base=f64, lanes=64)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=128))], ctrl: Vector(VectorType(base=f32, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=128))], ctrl: Vector(VectorType(base=f64, lanes=128)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f32, lanes=256))], ctrl: Vector(VectorType(base=f32, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=2))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=4))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=8))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=16))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=32))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=64))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=128))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i8, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i16, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i32, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i64, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
    sig = Signature { args: [Vector(VectorType(base=i128, lanes=256))], rets: [Vector(VectorType(base=f64, lanes=256))], ctrl: Vector(VectorType(base=f64, lanes=256)) }
inst = isplit
    format = Unary(imms=(), vals=1, blocks=0)
    op = TypeSet(lanes={1}, ints={16, 32, 64, 128})
    use_typevar_operand = true
    ctrl_typevar = WideInt
    typeset = TypeSet(lanes={1}, ints={16, 32, 64, 128})
    sig = Signature { args: [Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
    sig = Signature { args: [Lane(IntType(bits=128))], rets: [Lane(IntType(bits=128))], ctrl: Lane(IntType(bits=128)) }
inst = iconcat
    format = Binary(imms=(), vals=2, blocks=0)
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    op = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    use_typevar_operand = true
    ctrl_typevar = NarrowInt
    typeset = TypeSet(lanes={1}, ints={8, 16, 32, 64})
    sig = Signature { args: [Lane(IntType(bits=8)), Lane(IntType(bits=8))], rets: [Lane(IntType(bits=8))], ctrl: Lane(IntType(bits=8)) }
    sig = Signature { args: [Lane(IntType(bits=16)), Lane(IntType(bits=16))], rets: [Lane(IntType(bits=16))], ctrl: Lane(IntType(bits=16)) }
    sig = Signature { args: [Lane(IntType(bits=32)), Lane(IntType(bits=32))], rets: [Lane(IntType(bits=32))], ctrl: Lane(IntType(bits=32)) }
    sig = Signature { args: [Lane(IntType(bits=64)), Lane(IntType(bits=64))], rets: [Lane(IntType(bits=64))], ctrl: Lane(IntType(bits=64)) }
inst = atomic_rmw
    format = AtomicRmw(imms=(flags: ir::MemFlags, op: ir::AtomicRmwOp), vals=2, blocks=0)
    op = <not value>
inst = atomic_cas
    format = AtomicCas(imms=(flags: ir::MemFlags), vals=3, blocks=0)
    op = <not value>
inst = atomic_load
    format = LoadNoOffset(imms=(flags: ir::MemFlags), vals=1, blocks=0)
    op = <not value>
inst = atomic_store
    format = StoreNoOffset(imms=(flags: ir::MemFlags), vals=2, blocks=0)
    op = <not value>
inst = fence
    format = NullAry(imms=(), vals=0, blocks=0)
    error = unknown signatures: non-polymorphic instructions not handled
inst = extract_vector
    format = BinaryImm8(imms=(imm: ir::immediates::Uimm8), vals=1, blocks=0)
    op = TypeSet(lanes={1}, dynamic_lanes={2, 4, 8, 16, 32, 64, 128, 256}, ints={8, 16, 32, 64, 128}, floats={32, 64})
    op = <not value>
