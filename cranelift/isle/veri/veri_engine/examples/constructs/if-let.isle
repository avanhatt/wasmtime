;;@ (spec (sig (args arg) (ret))
;;@     (assume  (= (arg) (ret))))
(decl lower (Inst) InstOutput)

;; Instruction formats.
(type MInst
  (enum
))

;; Constructor to test whether two values are same.
;;@ (spec (sig (args x, y) (ret))
;;@     (assume  (= (x) (ret)),
;;@                 (= (x) (y))))
(decl pure same_value (Value Value) Value)
(extern constructor same_value same_value)

(rule (lower (has_type (fits_in_64 ty) (iadd x y)))
      (if-let z (same_value x y))
      (add ty z z))

;;@ (spec (sig (args ty, a, b) (r))
;;@     (assume  (= (+ (a) (b)) (r))))
(decl add (Type Reg Reg) Reg)
(extern constructor add add)
