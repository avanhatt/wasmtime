;;@ (spec (sig (args arg) (ret))
;;@     (assertions (= (arg) (ret))))
(decl lower (Inst) InstOutput)

;; Instruction formats.
(type MInst
  (enum
))

(rule (lower (has_type (fits_in_64 ty) (iadd x y)))
      (if-let z (same_value x y))
      (add ty z z))

;;@ (spec (sig (args ty, a, b) (r))
;;@     (assertions (= (+ (a) (b)) (r))))
(decl add (Type Reg Reg) Reg)
(extern constructor add add)
