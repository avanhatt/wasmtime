;;@ (spec (sig (args arg) (ret))
;;@     (assertions (= (arg) (ret))))
(decl lower (Inst) InstOutput)

;; Instruction formats.
(type MInst
  (enum
))

;;@ (spec (sig (args t, x, y) (ret))
;;@       (assertions 
;;@          (= (rotr (conv_to (t) (x)) (conv_to (t) (y))) (ret)),
;;@       )
;;@ )
(decl a64_rotr (Type Reg Reg) Reg)
(extern constructor a64_rotr a64_rotr)

;; General 64-bit case.
(rule -1 (lower (has_type $I64 (rotr x y)))
      (a64_rotr $I64 x (value_regs_get y 0)))