(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const extend__18 (_ BitVec 64))
(declare-const extend__18__a__62 (_ BitVec 64))
(declare-const extend__18__b__56 Bool)
(declare-const extend__18__c__60 (_ BitVec 8))
(declare-const extend__18__d__58 (_ BitVec 8))
(declare-const extend__18__result__57 (_ BitVec 64))
(declare-const fits_in_64__4 Int)
(declare-const fits_in_64__4__arg__21 Int)
(declare-const fits_in_64__4__result__20 Int)
(declare-const has_type__12 (_ BitVec 64))
(declare-const has_type__12__arg__35 (_ BitVec 64))
(declare-const has_type__12__result__34 (_ BitVec 64))
(declare-const has_type__12__ty__37 Int)
(declare-const in__clif1__6 Int)
(declare-const lower__13 (_ BitVec 64))
(declare-const lower__13__arg__41 (_ BitVec 64))
(declare-const lower__13__result__40 (_ BitVec 64))
(declare-const out__clif0__1 Int)
(declare-const output_reg__19 (_ BitVec 64))
(declare-const output_reg__19__arg__74 (_ BitVec 64))
(declare-const output_reg__19__result__72 (_ BitVec 64))
(declare-const put_in_reg__14 (_ BitVec 64))
(declare-const put_in_reg__14__arg__45 (_ BitVec 32))
(declare-const put_in_reg__14__result__43 (_ BitVec 64))
(declare-const ty_bits__16 (_ BitVec 8))
(declare-const ty_bits__16__result__48 (_ BitVec 8))
(declare-const ty_bits__16__x__49 Int)
(declare-const ty_bits__17 (_ BitVec 8))
(declare-const ty_bits__17__result__52 (_ BitVec 8))
(declare-const ty_bits__17__x__53 Int)
(declare-const uextend__11 (_ BitVec 64))
(declare-const uextend__11__result__29 (_ BitVec 64))
(declare-const uextend__11__x__31 (_ BitVec 32))
(declare-const value_type__9 (_ BitVec 32))
(declare-const value_type__9__arg__25 Int)
(declare-const value_type__9__result__26 (_ BitVec 32))
(declare-const x__clif2__5 (_ BitVec 32))
(declare-const width__46 Int)
(declare-const width__17 Int)
(declare-const width__11 Int)
(declare-const width__69 Int)
(declare-const width__45 Int)
(declare-const width__34 Int)
(declare-const width__54 Int)
(declare-const width__12 Int)
(declare-const width__16 Int)
(declare-const width__57 Int)
(declare-const width__62 Int)
(declare-const width__9 Int)
(declare-const width__18 Int)
(declare-const width__43 Int)
(declare-const width__60 Int)
(declare-const width__72 Int)
(declare-const width__75 Int)
(declare-const width__13 Int)
(declare-const width__29 Int)
(declare-const width__19 Int)
(declare-const width__58 Int)
(declare-const width__32 Int)
(declare-const width__74 Int)
(declare-const width__5 Int)
(declare-const width__26 Int)
(declare-const width__64 Int)
(declare-const width__41 Int)
(declare-const width__31 Int)
(declare-const width__40 Int)
(declare-const width__35 Int)
(declare-const width__50 Int)
(declare-const width__52 Int)
(declare-const width__14 Int)
(declare-const width__48 Int)
(declare-const width__68 Int)
(declare-const extend__18__c__60_narrow__60 (_ BitVec 8))
(declare-const extend__18__c__60_wide__60 (_ BitVec 64))
(declare-const fresh0 (_ BitVec 56))
(declare-const extend__18__d__58_narrow__58 (_ BitVec 8))
(declare-const extend__18__d__58_wide__58 (_ BitVec 64))
(declare-const fresh1 (_ BitVec 56))
(declare-const put_in_reg__14__arg__45_narrow__45 (_ BitVec 32))
(declare-const put_in_reg__14__arg__45_wide__45 (_ BitVec 64))
(declare-const fresh2 (_ BitVec 32))
(declare-const ty_bits__16_narrow__16 (_ BitVec 8))
(declare-const ty_bits__16_wide__16 (_ BitVec 64))
(declare-const fresh3 (_ BitVec 56))
(declare-const ty_bits__16__result__48_narrow__48 (_ BitVec 8))
(declare-const ty_bits__16__result__48_wide__48 (_ BitVec 64))
(declare-const fresh4 (_ BitVec 56))
(declare-const ty_bits__17_narrow__17 (_ BitVec 8))
(declare-const ty_bits__17_wide__17 (_ BitVec 64))
(declare-const fresh5 (_ BitVec 56))
(declare-const ty_bits__17__result__52_narrow__52 (_ BitVec 8))
(declare-const ty_bits__17__result__52_wide__52 (_ BitVec 64))
(declare-const fresh6 (_ BitVec 56))
(declare-const uextend__11__x__31_narrow__31 (_ BitVec 32))
(declare-const uextend__11__x__31_wide__31 (_ BitVec 64))
(declare-const fresh7 (_ BitVec 32))
(declare-const value_type__9_narrow__9 (_ BitVec 32))
(declare-const value_type__9_wide__9 (_ BitVec 64))
(declare-const fresh8 (_ BitVec 32))
(declare-const value_type__9__result__26_narrow__26 (_ BitVec 32))
(declare-const value_type__9__result__26_wide__26 (_ BitVec 64))
(declare-const fresh9 (_ BitVec 32))
(declare-const x__clif2__5_narrow__5 (_ BitVec 32))
(declare-const x__clif2__5_wide__5 (_ BitVec 64))
(declare-const fresh10 (_ BitVec 32))
(declare-const fresh11 Int)
(declare-const fresh12 Int)
(push)
(assert (! (= out__clif0__1 fresh11) :named dyn0))
(assert (! (= fits_in_64__4__result__20 fits_in_64__4__arg__21) :named dyn1))
(assert (! (<= fits_in_64__4__arg__21 64) :named dyn2))
(assert (! (= out__clif0__1 fits_in_64__4__arg__21) :named dyn3))
(assert (! (= fits_in_64__4 fits_in_64__4__result__20) :named dyn4))
(assert (! (= in__clif1__6 fresh12) :named dyn5))
(assert (! (= value_type__9__arg__25 width__26) :named dyn6))
(assert (! (= in__clif1__6 value_type__9__arg__25) :named dyn7))
(assert (! (= value_type__9_wide__9 value_type__9__result__26_wide__26) :named dyn8))
(assert (! (= x__clif2__5_wide__5 value_type__9_wide__9) :named dyn9))
(assert (! (= uextend__11__result__29 ((_ zero_extend 32) ((_ extract 31 0) uextend__11__x__31_wide__31))) :named dyn10))
(assert (! (= x__clif2__5_wide__5 uextend__11__x__31_wide__31) :named dyn11))
(assert (! (= uextend__11 uextend__11__result__29) :named dyn12))
(assert (! (= has_type__12__result__34 has_type__12__arg__35) :named dyn13))
(assert (! (= has_type__12__ty__37 width__35) :named dyn14))
(assert (! (= fits_in_64__4 has_type__12__ty__37) :named dyn15))
(assert (! (= uextend__11 has_type__12__arg__35) :named dyn16))
(assert (! (= has_type__12 has_type__12__result__34) :named dyn17))
(assert (! (= lower__13__result__40 lower__13__arg__41) :named dyn18))
(assert (! (= has_type__12 lower__13__arg__41) :named dyn19))
(assert (! (= lower__13 lower__13__result__40) :named dyn20))
(assert (! (= put_in_reg__14__result__43 put_in_reg__14__arg__45_wide__45) :named dyn21))
(assert (! (= x__clif2__5_wide__5 put_in_reg__14__arg__45_wide__45) :named dyn22))
(assert (! (= put_in_reg__14 put_in_reg__14__result__43) :named dyn23))
(assert (! (= ty_bits__16__result__48_wide__48 ((_ zero_extend 56) ((_ int2bv 8) ty_bits__16__x__49))) :named dyn24))
(assert (! (= in__clif1__6 ty_bits__16__x__49) :named dyn25))
(assert (! (= ty_bits__16_wide__16 ty_bits__16__result__48_wide__48) :named dyn26))
(assert (! (= ty_bits__17__result__52_wide__52 ((_ zero_extend 56) ((_ int2bv 8) ty_bits__17__x__53))) :named dyn27))
(assert (! (= out__clif0__1 ty_bits__17__x__53) :named dyn28))
(assert (! (= ty_bits__17_wide__17 ty_bits__17__result__52_wide__52) :named dyn29))
(assert (! (ite extend__18__b__56 (= extend__18__result__57 extend__18__a__62) (= extend__18__result__57 extend__18__a__62)) :named dyn30))
(assert (! (= put_in_reg__14 extend__18__a__62) :named dyn31))
(assert (! (= false extend__18__b__56) :named dyn32))
(assert (! (= ty_bits__16_wide__16 extend__18__c__60_wide__60) :named dyn33))
(assert (! (= ty_bits__17_wide__17 extend__18__d__58_wide__58) :named dyn34))
(assert (! (= extend__18 extend__18__result__57) :named dyn35))
(assert (! (= output_reg__19__result__72 output_reg__19__arg__74) :named dyn36))
(assert (! (= extend__18 output_reg__19__arg__74) :named dyn37))
(assert (! (= output_reg__19 output_reg__19__result__72) :named dyn38))
(assert (! (= width__46 64) :named dyn39))
(assert (! (= width__17 8) :named dyn40))
(assert (! (= width__11 64) :named dyn41))
(assert (! (> width__69 0) :named dyn42))
(assert (! (= width__45 32) :named dyn43))
(assert (! (= width__34 64) :named dyn44))
(assert (! (= width__54 8) :named dyn45))
(assert (! (= width__12 64) :named dyn46))
(assert (! (= width__16 8) :named dyn47))
(assert (! (> width__57 0) :named dyn48))
(assert (! (= width__62 64) :named dyn49))
(assert (! (= width__9 32) :named dyn50))
(assert (! (> width__18 0) :named dyn51))
(assert (! (= width__43 64) :named dyn52))
(assert (! (= width__60 8) :named dyn53))
(assert (! (= width__72 64) :named dyn54))
(assert (! (= width__75 64) :named dyn55))
(assert (! (= width__13 64) :named dyn56))
(assert (! (= width__29 64) :named dyn57))
(assert (! (= width__19 64) :named dyn58))
(assert (! (= width__58 8) :named dyn59))
(assert (! (= width__32 64) :named dyn60))
(assert (! (> width__74 0) :named dyn61))
(assert (! (= width__5 32) :named dyn62))
(assert (! (= width__26 32) :named dyn63))
(assert (! (> width__64 0) :named dyn64))
(assert (! (= width__41 64) :named dyn65))
(assert (! (= width__31 32) :named dyn66))
(assert (! (= width__40 64) :named dyn67))
(assert (! (= width__35 64) :named dyn68))
(assert (! (= width__50 8) :named dyn69))
(assert (! (= width__52 8) :named dyn70))
(assert (! (= width__14 64) :named dyn71))
(assert (! (= width__48 8) :named dyn72))
(assert (! (> width__68 0) :named dyn73))
(assert (! (= width__32 width__29) :named dyn74))
(assert (! (= width__57 width__64) :named dyn75))
(assert (! (= width__57 width__64) :named dyn76))
(assert (! (= width__68 (bv2nat extend__18__c__60_wide__60)) :named dyn77))
(assert (! (= width__64 (bv2nat extend__18__d__58_wide__58)) :named dyn78))
(assert (! (= width__57 width__69) :named dyn79))
(assert (! (= width__57 width__69) :named dyn80))
(assert (! (= width__68 (bv2nat extend__18__c__60_wide__60)) :named dyn81))
(assert (! (= width__69 (bv2nat extend__18__d__58_wide__58)) :named dyn82))
(assert (! (= width__18 width__57) :named dyn83))
(assert (! (= width__18 width__57) :named dyn84))
(assert (! (= width__75 width__72) :named dyn85))
(assert (! (= width__18 width__74) :named dyn86))
(assert (! (= width__18 width__74) :named dyn87))
(assert (! (= extend__18 extend__18) :named dyn88))
(assert (! (= extend__18__a__62 extend__18__a__62) :named dyn89))
(assert (! (= extend__18__c__60_narrow__60 extend__18__c__60) :named dyn90))
(assert (! (= extend__18__c__60_wide__60 (concat fresh0 extend__18__c__60_narrow__60)) :named dyn91))
(assert (! (= extend__18__d__58_narrow__58 extend__18__d__58) :named dyn92))
(assert (! (= extend__18__d__58_wide__58 (concat fresh1 extend__18__d__58_narrow__58)) :named dyn93))
(assert (! (= extend__18__result__57 extend__18__result__57) :named dyn94))
(assert (! (= has_type__12 has_type__12) :named dyn95))
(assert (! (= has_type__12__arg__35 has_type__12__arg__35) :named dyn96))
(assert (! (= has_type__12__result__34 has_type__12__result__34) :named dyn97))
(assert (! (= lower__13 lower__13) :named dyn98))
(assert (! (= lower__13__arg__41 lower__13__arg__41) :named dyn99))
(assert (! (= lower__13__result__40 lower__13__result__40) :named dyn100))
(assert (! (= output_reg__19 output_reg__19) :named dyn101))
(assert (! (= output_reg__19__arg__74 output_reg__19__arg__74) :named dyn102))
(assert (! (= output_reg__19__result__72 output_reg__19__result__72) :named dyn103))
(assert (! (= put_in_reg__14 put_in_reg__14) :named dyn104))
(assert (! (= put_in_reg__14__arg__45_narrow__45 put_in_reg__14__arg__45) :named dyn105))
(assert (! (= put_in_reg__14__arg__45_wide__45 (concat fresh2 put_in_reg__14__arg__45_narrow__45)) :named dyn106))
(assert (! (= put_in_reg__14__result__43 put_in_reg__14__result__43) :named dyn107))
(assert (! (= ty_bits__16_narrow__16 ty_bits__16) :named dyn108))
(assert (! (= ty_bits__16_wide__16 (concat fresh3 ty_bits__16_narrow__16)) :named dyn109))
(assert (! (= ty_bits__16__result__48_narrow__48 ty_bits__16__result__48) :named dyn110))
(assert (! (= ty_bits__16__result__48_wide__48 (concat fresh4 ty_bits__16__result__48_narrow__48)) :named dyn111))
(assert (! (= ty_bits__17_narrow__17 ty_bits__17) :named dyn112))
(assert (! (= ty_bits__17_wide__17 (concat fresh5 ty_bits__17_narrow__17)) :named dyn113))
(assert (! (= ty_bits__17__result__52_narrow__52 ty_bits__17__result__52) :named dyn114))
(assert (! (= ty_bits__17__result__52_wide__52 (concat fresh6 ty_bits__17__result__52_narrow__52)) :named dyn115))
(assert (! (= uextend__11 uextend__11) :named dyn116))
(assert (! (= uextend__11__result__29 uextend__11__result__29) :named dyn117))
(assert (! (= uextend__11__x__31_narrow__31 uextend__11__x__31) :named dyn118))
(assert (! (= uextend__11__x__31_wide__31 (conc(assert (or (not (= width__68 64)) (not (= width__57 64)) (not (= width__64 64)) (not (= width__18 64)) (not (= width__74 64)) (not (= width__69 64))))
(check-sat)
concat fresh8 value_type__9_narrow__9)) :named dyn121))
(assert (! (= value_type__9__result__26_narrow__26 value_type__9__result__26) :named dyn122))
(assert (! (= value_type__9__result__26_wide__26 (concat fresh9 value_type__9__result__26_narrow__26)) :named dyn123))
(assert (! (= x__clif2__5_narrow__5 x__clif2__5) :named dyn124))
(assert (! (= x__clif2__5_wide__5 (concat fresh10 x__clif2__5_narrow__5)) :named dyn125))
(check-sat)
h__60 width__93) :named dyn124))
(assert (! (= width__77 width__95) :named dyn125))
(assert (! (= width__95 width__76) :named dyn126))
(assert (! (= width__95 do_shift__16__t__64) :named dyn127))
(assert (! (= width__91 width__95) :named dyn128))
(assert (! (= width__95 width__90) :named dyn129))
(assert (! (= width__95 do_shift__16__t__64) :named dyn130))
(assert (! (= width__90 do_shift__16__t__64) :named dyn131))
(assert (! (= width__89 64) :named dyn132))
(assert (! (= width__88 width__87) :named dyn133))
(assert (! (= width__87 width__67) :named dyn134))
(assert (! (= width__86 width__98) :named dyn135))
(assert (! (= width__105 width__95) :named dyn136))
(assert (! (= width__95 width__104) :named dyn137))
(assert (! (= width__95 do_shift__16__t__64) :named dyn138))
(assert (! (= width__104 do_shift__16__t__64) :named dyn139))
(assert (! (= width__103 64) :named dyn140))
(assert (! (= width__102 width__101) :named dyn141))
(assert (! (= width__101 width__67) :named dyn142))
(assert (! (= width__100 width__98) :named dyn143))
(assert (! (= width__167 width__164) :named dyn144))
(assert (! (= ALUOp.Lsr__14_narrow__14 ALUOp.Lsr__14) :named dyn145))
(assert (! (= ALUOp.Lsr__14_wide__14 (concat fresh0 ALUOp.Lsr__14_narrow__14)) :named dyn146))
(assert (! (= ALUOp.Lsr__14__result__44_narrow__44 ALUOp.Lsr__14__result__44) :named dyn147))
(assert (! (= ALUOp.Lsr__14__result__44_wide__44 (concat fresh1 ALUOp.Lsr__14__result__44_narrow__44)) :named dyn148))
(assert (! (= do_shift__16 do_shift__16) :named dyn149))
(assert (! (= do_shift__16__a__65 do_shift__16__a__65) :named dyn150))
(assert (! (= do_shift__16__b__67 do_shift__16__b__67) :named dyn151))
(assert (! (= do_shift__16__op__60_narrow__60 do_shift__16__op__60) :named dyn152))
(assert (! (= do_shift__16__op__60_wide__60 (concat fresh2 do_shift__16__op__60_narrow__60)) :named dyn153))
(assert (! (= do_shift__16__result__59 do_shift__16__result__59) :named dyn154))
(assert (! (= has_type__12 has_type__12) :named dyn155))
(assert (! (= has_type__12__arg__36 has_type__12__arg__36) :named dyn156))
(assert (! (= has_type__12__result__35 has_type__12__result__35) :named dyn157))
(assert (! (= lower__13 lower__13) :named dyn158))
(assert (! (= lower__13__arg__42 lower__13__arg__42) :named dyn159))
(assert (! (= lower__13__result__41 lower__13__result__41) :named dyn160))
(assert (! (= output_reg__17 output_reg__17) :named dyn161))
(assert (! (= output_reg__17__arg__166 output_reg__17__arg__166) :named dyn162))
(assert (! (= output_reg__17__result__164 output_reg__17__result__164) :named dyn163))
(assert (! (= put_in_reg_zext32__15 put_in_reg_zext32__15) :named dyn164))
(assert (! (= put_in_reg_zext32__15__arg__48 put_in_reg_zext32__15__arg__48) :named dyn165))
(assert (! (= put_in_reg_zext32__15__result__47 put_in_reg_zext32__15__result__47) :named dyn166))
(assert (! (= ushr__11 ushr__11) :named dyn167))
(assert (! (= ushr__11__result__23 ushr__11__result__23) :named dyn168))
(assert (! (= ushr__11__x__24 ushr__11__x__24) :named dyn169))
(assert (! (= ushr__11__y__25 ushr__11__y__25) :named dyn170))
(assert (! (= x__clif1__5 x__clif1__5) :named dyn171))
(assert (! (= y__clif2__8 y__clif2__8) :named dyn172))
(assert (! (= narrow__45 (_ bv12 8)) :named dyn173))
(assert (! (= wide__45 (concat fresh6 narrow__45)) :named dyn174))
(assert (! (= narrow__62 (_ bv12 8)) :named dyn175))
(assert (! (= wide__62 (concat fresh7 narrow__62)) :named dyn176))
(assert (! (= narrow__79 (_ bv13 8)) :named dyn177))
(assert (! (= wide__79 (concat fresh8 narrow__79)) :named dyn178))
(assert (! (= narrow__93 (_ bv14 8)) :named dyn179))
(assert (! (= wide__93 (concat fresh9 narrow__93)) :named dyn180))
(check-sat)
(get-unsat-core)
