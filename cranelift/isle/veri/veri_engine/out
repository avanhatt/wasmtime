    Finished dev [unoptimized + debuginfo] target(s) in 0.10s
     Running `/Users/avh/research/wasmtime/target/debug/veri_engine_bin -t cls -i examples/broken/cls/broken_cls8.isle`
Typing rule:
	LHS: cls has_type lower
	RHS: put_in_reg_zext32 a64_cls u8_into_imm12 sub_imm output_reg
Verifying rule with term cls and types TermSignature { args: [BitVector(Some(8))], ret: BitVector(Some(8)), canonical_type: Some(BitVector(Some(8))) }
All widths resolved after basic type inference
Declaring quantified variables
	a64_cls__11 : (_ BitVec 64)
	a64_cls__11__a__45 : (_ BitVec 64)
	a64_cls__11__ret__40 : (_ BitVec 64)
	a64_cls__11__ty__41 : Int
	cls__5 : (_ BitVec 8)
	cls__5__a__17 : (_ BitVec 8)
	cls__5__ret__16 : (_ BitVec 8)
	has_type__6 : (_ BitVec 8)
	has_type__6__arg__21 : (_ BitVec 8)
	has_type__6__ret__24 : (_ BitVec 8)
	has_type__6__ty__20 : Int
	lower__7 : (_ BitVec 8)
	lower__7__arg__26 : (_ BitVec 8)
	lower__7__ret__27 : (_ BitVec 8)
	output_reg__15 : (_ BitVec 8)
	output_reg__15__arg__78 : (_ BitVec 64)
	output_reg__15__ret__80 : (_ BitVec 8)
	put_in_reg_zext32__10 : (_ BitVec 64)
	put_in_reg_zext32__10__arg__30 : (_ BitVec 8)
	put_in_reg_zext32__10__ret__33 : (_ BitVec 64)
	sub_imm__14 : (_ BitVec 64)
	sub_imm__14__ret__74 : (_ BitVec 64)
	sub_imm__14__ty__72 : Int
	sub_imm__14__x__73 : (_ BitVec 64)
	sub_imm__14__y__60 : (_ BitVec 24)
	u8_into_imm12__13 : (_ BitVec 24)
	u8_into_imm12__13__arg__57 : (_ BitVec 8)
	u8_into_imm12__13__ret__56 : (_ BitVec 24)
	x__clif0__2 : (_ BitVec 8)
Adding explicit assumptions
Adding additional assumptions
Declaring additional variables
Checking assumption feasibility
assum0: (= x__clif0__2 fresh0)
assum1: (= cls__5__ret__16 cls8ret_18)
assum2: (= x__clif0__2 cls__5__a__17)
assum3: (= cls__5 cls__5__ret__16)
assum4: (= has_type__6__ty__20 8)
assum5: (= has_type__6__arg__21 has_type__6__ret__24)
assum6: (= 8 has_type__6__ty__20)
assum7: (= cls__5 has_type__6__arg__21)
assum8: (= has_type__6 has_type__6__ret__24)
assum9: (= lower__7__arg__26 lower__7__ret__27)
assum10: (= has_type__6 lower__7__arg__26)
assum11: (= lower__7 lower__7__ret__27)
assum12: (ite (<= 32 8) (= put_in_reg_zext32__10__ret__33 (concat fresh1 put_in_reg_zext32__10__arg__30)) (= put_in_reg_zext32__10__ret__33 (concat fresh2 ((_ zero_extend 24) put_in_reg_zext32__10__arg__30))))
assum13: (= x__clif0__2 put_in_reg_zext32__10__arg__30)
assum14: (= put_in_reg_zext32__10 put_in_reg_zext32__10__ret__33)
assum15: (= a64_cls__11__ret__40 (ite (= a64_cls__11__ty__41 32) a64cls32ret_46 cls64ret_48))
assum16: (or (= a64_cls__11__ty__41 32) (= a64_cls__11__ty__41 64))
assum17: (= 32 a64_cls__11__ty__41)
assum18: (= put_in_reg_zext32__10 a64_cls__11__a__45)
assum19: (= a64_cls__11 a64_cls__11__ret__40)
assum20: (= u8_into_imm12__13__ret__56 ((_ zero_extend 16) u8_into_imm12__13__arg__57))
assum21: (= (_ bv24 8) u8_into_imm12__13__arg__57)
assum22: (= u8_into_imm12__13 u8_into_imm12__13__ret__56)
assum23: (or (<= (bv2nat sub_imm__14__y__60) 4094) (and (<= (bv2nat sub_imm__14__y__60) 16773119) (= ((_ extract 2 0) sub_imm__14__y__60) (_ bv0 3))))
assum24: (= sub_imm__14__ret__74 (bvsub sub_imm__14__x__73 ((_ zero_extend 40) sub_imm__14__y__60)))
assum25: (= 32 sub_imm__14__ty__72)
assum26: (= a64_cls__11 sub_imm__14__x__73)
assum27: (= u8_into_imm12__13 sub_imm__14__y__60)
assum28: (= sub_imm__14 sub_imm__14__ret__74)
assum29: (= output_reg__15__arg__78 (concat fresh3 output_reg__15__ret__80))
assum30: (= sub_imm__14 output_reg__15__arg__78)
assum31: (= output_reg__15 output_reg__15__ret__80)
assum32: (= zret0_18 (_ bv0 8))
assum33: (= zy4_18 (bvlshr ((_ extract 7 0) cls__5__a__17) #x04))
assum34: (ite (not (= zy4_18 (_ bv0 8))) (= zret4_18 zret0_18) (= zret4_18 (bvadd zret0_18 (_ bv4 8))))
assum35: (ite (not (= zy4_18 (_ bv0 8))) (= zx4_18 zy4_18) (= zx4_18 ((_ extract 7 0) cls__5__a__17)))
assum36: (= zy2_18 (bvlshr zx4_18 #x02))
assum37: (ite (not (= zy2_18 (_ bv0 8))) (= zret5_18 zret4_18) (= zret5_18 (bvadd zret4_18 (_ bv2 8))))
assum38: (ite (not (= zy2_18 (_ bv0 8))) (= zx2_18 zy2_18) (= zx2_18 zx4_18))
assum39: (= zy1_18 (bvlshr zx2_18 #x01))
assum40: (ite (not (= zy1_18 (_ bv0 8))) (= zret6_18 zret5_18) (= zret6_18 (bvadd zret5_18 (_ bv1 8))))
assum41: (ite (not (= zy1_18 (_ bv0 8))) (= zx1_18 zy1_18) (= zx1_18 zx2_18))
assum42: (ite (not (= zx1_18 (_ bv0 8))) (= zret7_18 zret6_18) (= zret7_18 (bvadd zret6_18 (_ bv1 8))))
assum43: (ite (= zret7_18 (_ bv0 8)) (= clzret_18 zret7_18) (= clzret_18 (bvsub zret7_18 (_ bv1 8))))
assum44: (= sret0_18 (_ bv0 8))
assum45: (= sy4_18 (bvashr ((_ extract 7 0) cls__5__a__17) #x04))
assum46: (ite (not (= sy4_18 (_ bv255 8))) (= sret4_18 sret0_18) (= sret4_18 (bvadd sret0_18 (_ bv4 8))))
assum47: (ite (not (= sy4_18 (_ bv255 8))) (= sx4_18 sy4_18) (= sx4_18 ((_ extract 7 0) cls__5__a__17)))
assum48: (= sy2_18 (bvashr sx4_18 #x02))
assum49: (ite (not (= sy2_18 (_ bv255 8))) (= sret5_18 sret4_18) (= sret5_18 (bvadd sret4_18 (_ bv2 8))))
assum50: (ite (not (= sy2_18 (_ bv255 8))) (= sx2_18 sy2_18) (= sx2_18 sx4_18))
assum51: (= sy1_18 (bvashr sx2_18 #x01))
assum52: (ite (not (= sy1_18 (_ bv255 8))) (= sret6_18 sret5_18) (= sret6_18 (bvadd sret5_18 (_ bv1 8))))
assum53: (ite (not (= sy1_18 (_ bv255 8))) (= sx1_18 sy1_18) (= sx1_18 sx2_18))
assum54: (ite (not (= sx1_18 (_ bv255 8))) (= sret7_18 sret6_18) (= sret7_18 (bvadd sret6_18 (_ bv1 8))))
assum55: (ite (= sret7_18 (_ bv0 8)) (= clsret_18 sret7_18) (= clsret_18 (bvsub sret7_18 (_ bv1 8))))
assum56: (ite (bvsle (_ bv0 8) ((_ extract 7 0) cls__5__a__17)) (= cls8ret_18 clzret_18) (= cls8ret_18 clsret_18))
assum57: (= a64x_46 ((_ extract 31 0) a64_cls__11__a__45))
assum58: (= zret0_46 (_ bv0 64))
assum59: (= zy16_46 (bvlshr a64x_46 #x00000010))
assum60: (ite (not (= zy16_46 (_ bv0 32))) (= zret2_46 zret0_46) (= zret2_46 (bvadd zret0_46 (_ bv16 64))))
assum61: (ite (not (= zy16_46 (_ bv0 32))) (= zx16_46 zy16_46) (= zx16_46 a64x_46))
assum62: (= zy8_46 (bvlshr zx16_46 #x00000008))
assum63: (ite (not (= zy8_46 (_ bv0 32))) (= zret3_46 zret2_46) (= zret3_46 (bvadd zret2_46 (_ bv8 64))))
assum64: (ite (not (= zy8_46 (_ bv0 32))) (= zx8_46 zy8_46) (= zx8_46 zx16_46))
assum65: (= zy4_46 (bvlshr zx8_46 #x00000004))
assum66: (ite (not (= zy4_46 (_ bv0 32))) (= zret4_46 zret3_46) (= zret4_46 (bvadd zret3_46 (_ bv4 64))))
assum67: (ite (not (= zy4_46 (_ bv0 32))) (= zx4_46 zy4_46) (= zx4_46 zx8_46))
assum68: (= zy2_46 (bvlshr zx4_46 #x00000002))
assum69: (ite (not (= zy2_46 (_ bv0 32))) (= zret5_46 zret4_46) (= zret5_46 (bvadd zret4_46 (_ bv2 64))))
assum70: (ite (not (= zy2_46 (_ bv0 32))) (= zx2_46 zy2_46) (= zx2_46 zx4_46))
assum71: (= zy1_46 (bvlshr zx2_46 #x00000001))
assum72: (ite (not (= zy1_46 (_ bv0 32))) (= zret6_46 zret5_46) (= zret6_46 (bvadd zret5_46 (_ bv1 64))))
assum73: (ite (not (= zy1_46 (_ bv0 32))) (= zx1_46 zy1_46) (= zx1_46 zx2_46))
assum74: (ite (not (= zx1_46 (_ bv0 32))) (= zret7_46 zret6_46) (= zret7_46 (bvadd zret6_46 (_ bv1 64))))
assum75: (ite (= zret7_46 (_ bv0 64)) (= clzret_46 zret7_46) (= clzret_46 (bvsub zret7_46 (_ bv1 64))))
assum76: (= sret0_46 (_ bv0 64))
assum77: (= sy16_46 (bvashr a64x_46 #x00000010))
assum78: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sret2_46 sret0_46) (= sret2_46 (bvadd sret0_46 (_ bv16 64))))
assum79: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sx16_46 sy16_46) (= sx16_46 a64x_46))
assum80: (= sy8_46 (bvashr sx16_46 #x00000008))
assum81: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sret3_46 sret2_46) (= sret3_46 (bvadd sret2_46 (_ bv8 64))))
assum82: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sx8_46 sy8_46) (= sx8_46 sx16_46))
assum83: (= sy4_46 (bvashr sx8_46 #x00000004))
assum84: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sret4_46 sret3_46) (= sret4_46 (bvadd sret3_46 (_ bv4 64))))
assum85: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sx4_46 sy4_46) (= sx4_46 sx8_46))
assum86: (= sy2_46 (bvashr sx4_46 #x00000002))
assum87: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sret5_46 sret4_46) (= sret5_46 (bvadd sret4_46 (_ bv2 64))))
assum88: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sx2_46 sy2_46) (= sx2_46 sx4_46))
assum89: (= sy1_46 (bvashr sx2_46 #x00000001))
assum90: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sret6_46 sret5_46) (= sret6_46 (bvadd sret5_46 (_ bv1 64))))
assum91: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sx1_46 sy1_46) (= sx1_46 sx2_46))
assum92: (ite (not (= sx1_46 (_ bv4294967295 32))) (= sret7_46 sret6_46) (= sret7_46 (bvadd sret6_46 (_ bv1 64))))
assum93: (ite (= sret7_46 (_ bv0 64)) (= clsret_46 sret7_46) (= clsret_46 (bvsub sret7_46 (_ bv1 64))))
assum94: (ite (bvsle (_ bv0 32) a64x_46) (= a64cls32ret_46 clzret_46) (= a64cls32ret_46 clsret_46))
assum95: (= zret0_48 (_ bv0 64))
assum96: (= zy32_48 (bvlshr a64_cls__11__a__45 #x0000000000000020))
assum97: (ite (not (= zy32_48 (_ bv0 64))) (= zret1_48 zret0_48) (= zret1_48 (bvadd zret0_48 (_ bv32 64))))
assum98: (ite (not (= zy32_48 (_ bv0 64))) (= zx32_48 zy32_48) (= zx32_48 a64_cls__11__a__45))
assum99: (= zy16_48 (bvlshr zx32_48 #x0000000000000010))
assum100: (ite (not (= zy16_48 (_ bv0 64))) (= zret2_48 zret1_48) (= zret2_48 (bvadd zret1_48 (_ bv16 64))))
assum101: (ite (not (= zy16_48 (_ bv0 64))) (= zx16_48 zy16_48) (= zx16_48 zx32_48))
assum102: (= zy8_48 (bvlshr zx16_48 #x0000000000000008))
assum103: (ite (not (= zy8_48 (_ bv0 64))) (= zret3_48 zret2_48) (= zret3_48 (bvadd zret2_48 (_ bv8 64))))
assum104: (ite (not (= zy8_48 (_ bv0 64))) (= zx8_48 zy8_48) (= zx8_48 zx16_48))
assum105: (= zy4_48 (bvlshr zx8_48 #x0000000000000004))
assum106: (ite (not (= zy4_48 (_ bv0 64))) (= zret4_48 zret3_48) (= zret4_48 (bvadd zret3_48 (_ bv4 64))))
assum107: (ite (not (= zy4_48 (_ bv0 64))) (= zx4_48 zy4_48) (= zx4_48 zx8_48))
assum108: (= zy2_48 (bvlshr zx4_48 #x0000000000000002))
assum109: (ite (not (= zy2_48 (_ bv0 64))) (= zret5_48 zret4_48) (= zret5_48 (bvadd zret4_48 (_ bv2 64))))
assum110: (ite (not (= zy2_48 (_ bv0 64))) (= zx2_48 zy2_48) (= zx2_48 zx4_48))
assum111: (= zy1_48 (bvlshr zx2_48 #x0000000000000001))
assum112: (ite (not (= zy1_48 (_ bv0 64))) (= zret6_48 zret5_48) (= zret6_48 (bvadd zret5_48 (_ bv1 64))))
assum113: (ite (not (= zy1_48 (_ bv0 64))) (= zx1_48 zy1_48) (= zx1_48 zx2_48))
assum114: (ite (not (= zx1_48 (_ bv0 64))) (= zret7_48 zret6_48) (= zret7_48 (bvadd zret6_48 (_ bv1 64))))
assum115: (ite (= zret7_48 (_ bv0 64)) (= clzret_48 zret7_48) (= clzret_48 (bvsub zret7_48 (_ bv1 64))))
assum116: (= sret0_48 (_ bv0 64))
assum117: (= sy32_48 (bvashr a64_cls__11__a__45 #x0000000000000020))
assum118: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sret1_48 sret0_48) (= sret1_48 (bvadd sret0_48 (_ bv32 64))))
assum119: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sx32_48 sy32_48) (= sx32_48 a64_cls__11__a__45))
assum120: (= sy16_48 (bvashr sx32_48 #x0000000000000010))
assum121: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sret2_48 sret1_48) (= sret2_48 (bvadd sret1_48 (_ bv16 64))))
assum122: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sx16_48 sy16_48) (= sx16_48 sx32_48))
assum123: (= sy8_48 (bvashr sx16_48 #x0000000000000008))
assum124: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sret3_48 sret2_48) (= sret3_48 (bvadd sret2_48 (_ bv8 64))))
assum125: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sx8_48 sy8_48) (= sx8_48 sx16_48))
assum126: (= sy4_48 (bvashr sx8_48 #x0000000000000004))
assum127: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sret4_48 sret3_48) (= sret4_48 (bvadd sret3_48 (_ bv4 64))))
assum128: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sx4_48 sy4_48) (= sx4_48 sx8_48))
assum129: (= sy2_48 (bvashr sx4_48 #x0000000000000002))
assum130: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sret5_48 sret4_48) (= sret5_48 (bvadd sret4_48 (_ bv2 64))))
assum131: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sx2_48 sy2_48) (= sx2_48 sx4_48))
assum132: (= sy1_48 (bvashr sx2_48 #x0000000000000001))
assum133: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sret6_48 sret5_48) (= sret6_48 (bvadd sret5_48 (_ bv1 64))))
assum134: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sx1_48 sy1_48) (= sx1_48 sx2_48))
assum135: (ite (not (= sx1_48 (_ bv18446744073709551615 64))) (= sret7_48 sret6_48) (= sret7_48 (bvadd sret6_48 (_ bv1 64))))
assum136: (ite (= sret7_48 (_ bv0 64)) (= clsret_48 sret7_48) (= clsret_48 (bvsub sret7_48 (_ bv1 64))))
assum137: (ite (bvsle (_ bv0 64) a64_cls__11__a__45) (= cls64ret_48 clzret_48) (= cls64ret_48 clsret_48))
x__clif0__2
Assertion list is feasible for two distinct inputs!
LHS and RHS equality condition:
	(= ((_ extract 7 0) lower__7) ((_ extract 7 0) output_reg__15))

Full verification condition:
	(= ((_ extract 7 0) lower__7) ((_ extract 7 0) output_reg__15))

Running query
Verification failed
Quantified variables:
a64_cls__11
#x0000000000000017|0b000000000000000000000000000000000000000000000000000000000000010111

a64_cls__11__a__45
#x00100000000000fc|0b000000000000010000000000000000000000000000000000000000000011111100

a64_cls__11__ret__40
#x0000000000000017|0b000000000000000000000000000000000000000000000000000000000000010111

a64_cls__11__ty__41
32

a64cls32ret_46
#x0000000000000017|0b000000000000000000000000000000000000000000000000000000000000010111

a64x_46
#x000000fc|0b00000000000000000000000011111100

cls64ret_48
#x000000000000000a|0b000000000000000000000000000000000000000000000000000000000000001010

cls8ret_18
#x05|0b00000101

cls__5
#x05|0b00000101

cls__5__a__17
#xfc|0b11111100

cls__5__ret__16
#x05|0b00000101

clsret_18
#x05|0b00000101

clsret_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

clsret_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

clzret_18
#x00|0b00000000

clzret_46
#x0000000000000017|0b000000000000000000000000000000000000000000000000000000000000010111

clzret_48
#x000000000000000a|0b000000000000000000000000000000000000000000000000000000000000001010

fresh0
#xfc|0b11111100

fresh1
#x00000000000000|0b0

fresh2
#x00100000|0b00000000000100000000000000000000

fresh3
#xffffffffffffff|0b11111111111111111111111111111111111111111111111111111111

has_type__6
#x05|0b00000101

has_type__6__arg__21
#x05|0b00000101

has_type__6__ret__24
#x05|0b00000101

has_type__6__ty__20
8

lower__7
#x05|0b00000101

lower__7__arg__26
#x05|0b00000101

lower__7__ret__27
#x05|0b00000101

output_reg__15
#xff|0b11111111

output_reg__15__arg__78
#xffffffffffffffff|0b001111111111111111111111111111111111111111111111111111111111111111

output_reg__15__ret__80
#xff|0b11111111

put_in_reg_zext32__10
#x00100000000000fc|0b000000000000010000000000000000000000000000000000000000000011111100

put_in_reg_zext32__10__arg__30
#xfc|0b11111100

put_in_reg_zext32__10__ret__33
#x00100000000000fc|0b000000000000010000000000000000000000000000000000000000000011111100

sret0_18
#x00|0b00000000

sret0_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret0_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret1_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret2_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret2_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret3_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret3_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret4_18
#x04|0b00000100

sret4_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret4_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret5_18
#x06|0b00000110

sret5_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret5_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret6_18
#x06|0b00000110

sret6_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret6_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret7_18
#x06|0b00000110

sret7_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sret7_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sub_imm__14
#xffffffffffffffff|0b001111111111111111111111111111111111111111111111111111111111111111

sub_imm__14__ret__74
#xffffffffffffffff|0b001111111111111111111111111111111111111111111111111111111111111111

sub_imm__14__ty__72
32

sub_imm__14__x__73
#x0000000000000017|0b000000000000000000000000000000000000000000000000000000000000010111

sub_imm__14__y__60
#x000018|0b11000

sx16_46
#x00000000|0b00000000000000000000000000000000

sx16_48
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

sx1_18
#xfe|0b11111110

sx1_46
#x00000000|0b00000000000000000000000000000000

sx1_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sx2_18
#xfc|0b11111100

sx2_46
#x00000000|0b00000000000000000000000000000000

sx2_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sx32_48
#x0000000000100000|0b000000000000000000000000000000000000000000000100000000000000000000

sx4_18
#xfc|0b11111100

sx4_46
#x00000000|0b00000000000000000000000000000000

sx4_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sx8_46
#x00000000|0b00000000000000000000000000000000

sx8_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sy16_46
#x00000000|0b00000000000000000000000000000000

sy16_48
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

sy1_18
#xfe|0b11111110

sy1_46
#x00000000|0b00000000000000000000000000000000

sy1_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sy2_18
#xff|0b11111111

sy2_46
#x00000000|0b00000000000000000000000000000000

sy2_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sy32_48
#x0000000000100000|0b000000000000000000000000000000000000000000000100000000000000000000

sy4_18
#xff|0b11111111

sy4_46
#x00000000|0b00000000000000000000000000000000

sy4_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

sy8_46
#x00000000|0b00000000000000000000000000000000

sy8_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

u8_into_imm12__13
#x000018|0b11000

u8_into_imm12__13__arg__57
#x18|0b00011000

u8_into_imm12__13__ret__56
#x000018|0b11000

x__clif0__2
#xfc|0b11111100

zret0_18
#x00|0b00000000

zret0_46
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zret0_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zret1_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zret2_46
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

zret2_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zret3_46
#x0000000000000018|0b000000000000000000000000000000000000000000000000000000000000011000

zret3_48
#x0000000000000008|0b000000000000000000000000000000000000000000000000000000000000001000

zret4_18
#x00|0b00000000

zret4_46
#x0000000000000018|0b000000000000000000000000000000000000000000000000000000000000011000

zret4_48
#x0000000000000008|0b000000000000000000000000000000000000000000000000000000000000001000

zret5_18
#x00|0b00000000

zret5_46
#x0000000000000018|0b000000000000000000000000000000000000000000000000000000000000011000

zret5_48
#x000000000000000a|0b000000000000000000000000000000000000000000000000000000000000001010

zret6_18
#x00|0b00000000

zret6_46
#x0000000000000018|0b000000000000000000000000000000000000000000000000000000000000011000

zret6_48
#x000000000000000b|0b000000000000000000000000000000000000000000000000000000000000001011

zret7_18
#x00|0b00000000

zret7_46
#x0000000000000018|0b000000000000000000000000000000000000000000000000000000000000011000

zret7_48
#x000000000000000b|0b000000000000000000000000000000000000000000000000000000000000001011

zx16_46
#x000000fc|0b00000000000000000000000011111100

zx16_48
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

zx1_18
#x01|0b00000001

zx1_46
#x00000001|0b00000000000000000000000000000001

zx1_48
#x0000000000000001|0b000000000000000000000000000000000000000000000000000000000000000001

zx2_18
#x03|0b00000011

zx2_46
#x00000003|0b00000000000000000000000000000011

zx2_48
#x0000000000000001|0b000000000000000000000000000000000000000000000000000000000000000001

zx32_48
#x0000000000100000|0b000000000000000000000000000000000000000000000100000000000000000000

zx4_18
#x0f|0b00001111

zx4_46
#x0000000f|0b00000000000000000000000000001111

zx4_48
#x0000000000000001|0b000000000000000000000000000000000000000000000000000000000000000001

zx8_46
#x000000fc|0b00000000000000000000000011111100

zx8_48
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

zy16_46
#x00000000|0b00000000000000000000000000000000

zy16_48
#x0000000000000010|0b000000000000000000000000000000000000000000000000000000000000010000

zy1_18
#x01|0b00000001

zy1_46
#x00000001|0b00000000000000000000000000000001

zy1_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zy2_18
#x03|0b00000011

zy2_46
#x00000003|0b00000000000000000000000000000011

zy2_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

zy32_48
#x0000000000100000|0b000000000000000000000000000000000000000000000100000000000000000000

zy4_18
#x0f|0b00001111

zy4_46
#x0000000f|0b00000000000000000000000000001111

zy4_48
#x0000000000000001|0b000000000000000000000000000000000000000000000000000000000000000001

zy8_46
#x00000000|0b00000000000000000000000000000000

zy8_48
#x0000000000000000|0b000000000000000000000000000000000000000000000000000000000000000000

Counterexample summary
(lower (has_type (I8) (cls [x|#xfc|0b11111100])))
=>
(output_reg (sub_imm (I32) (a64_cls (I32) (put_in_reg_zext32 [x|#xfc|0b11111100])) (u8_into_imm12 (24))))

#x05|0b00000101 =>
#xff|0b11111111

Failed condition:
(= ((_ extract 7 0) lower__7) ((_ extract 7 0) output_reg__15))
Typing rule:
	LHS: cls has_type lower
	RHS: put_in_reg_zext32 a64_cls u8_into_imm12 sub_imm output_reg
Verifying rule with term cls and types TermSignature { args: [BitVector(Some(16))], ret: BitVector(Some(16)), canonical_type: Some(BitVector(Some(16))) }
All widths resolved after basic type inference
Declaring quantified variables
	a64_cls__11 : (_ BitVec 64)
	a64_cls__11__a__45 : (_ BitVec 64)
	a64_cls__11__ret__40 : (_ BitVec 64)
	a64_cls__11__ty__41 : Int
	cls__5 : (_ BitVec 16)
	cls__5__a__17 : (_ BitVec 16)
	cls__5__ret__16 : (_ BitVec 16)
	has_type__6 : (_ BitVec 16)
	has_type__6__arg__21 : (_ BitVec 16)
	has_type__6__ret__24 : (_ BitVec 16)
	has_type__6__ty__20 : Int
	lower__7 : (_ BitVec 16)
	lower__7__arg__26 : (_ BitVec 16)
	lower__7__ret__27 : (_ BitVec 16)
	output_reg__15 : (_ BitVec 16)
	output_reg__15__arg__78 : (_ BitVec 64)
	output_reg__15__ret__80 : (_ BitVec 16)
	put_in_reg_zext32__10 : (_ BitVec 64)
	put_in_reg_zext32__10__arg__30 : (_ BitVec 16)
	put_in_reg_zext32__10__ret__33 : (_ BitVec 64)
	sub_imm__14 : (_ BitVec 64)
	sub_imm__14__ret__74 : (_ BitVec 64)
	sub_imm__14__ty__72 : Int
	sub_imm__14__x__73 : (_ BitVec 64)
	sub_imm__14__y__60 : (_ BitVec 24)
	u8_into_imm12__13 : (_ BitVec 24)
	u8_into_imm12__13__arg__57 : (_ BitVec 8)
	u8_into_imm12__13__ret__56 : (_ BitVec 24)
	x__clif0__2 : (_ BitVec 16)
Adding explicit assumptions
Adding additional assumptions
Declaring additional variables
Checking assumption feasibility
assum0: (= x__clif0__2 fresh0)
assum1: (= cls__5__ret__16 cls16ret_18)
assum2: (= x__clif0__2 cls__5__a__17)
assum3: (= cls__5 cls__5__ret__16)
assum4: (= has_type__6__ty__20 16)
assum5: (= has_type__6__arg__21 has_type__6__ret__24)
assum6: (= 8 has_type__6__ty__20)
assum7: (= cls__5 has_type__6__arg__21)
assum8: (= has_type__6 has_type__6__ret__24)
assum9: (= lower__7__arg__26 lower__7__ret__27)
assum10: (= has_type__6 lower__7__arg__26)
assum11: (= lower__7 lower__7__ret__27)
assum12: (ite (<= 32 16) (= put_in_reg_zext32__10__ret__33 (concat fresh1 put_in_reg_zext32__10__arg__30)) (= put_in_reg_zext32__10__ret__33 (concat fresh2 ((_ zero_extend 16) put_in_reg_zext32__10__arg__30))))
assum13: (= x__clif0__2 put_in_reg_zext32__10__arg__30)
assum14: (= put_in_reg_zext32__10 put_in_reg_zext32__10__ret__33)
assum15: (= a64_cls__11__ret__40 (ite (= a64_cls__11__ty__41 32) a64cls32ret_46 cls64ret_48))
assum16: (or (= a64_cls__11__ty__41 32) (= a64_cls__11__ty__41 64))
assum17: (= 32 a64_cls__11__ty__41)
assum18: (= put_in_reg_zext32__10 a64_cls__11__a__45)
assum19: (= a64_cls__11 a64_cls__11__ret__40)
assum20: (= u8_into_imm12__13__ret__56 ((_ zero_extend 16) u8_into_imm12__13__arg__57))
assum21: (= (_ bv24 8) u8_into_imm12__13__arg__57)
assum22: (= u8_into_imm12__13 u8_into_imm12__13__ret__56)
assum23: (or (<= (bv2nat sub_imm__14__y__60) 4094) (and (<= (bv2nat sub_imm__14__y__60) 16773119) (= ((_ extract 2 0) sub_imm__14__y__60) (_ bv0 3))))
assum24: (= sub_imm__14__ret__74 (bvsub sub_imm__14__x__73 ((_ zero_extend 40) sub_imm__14__y__60)))
assum25: (= 32 sub_imm__14__ty__72)
assum26: (= a64_cls__11 sub_imm__14__x__73)
assum27: (= u8_into_imm12__13 sub_imm__14__y__60)
assum28: (= sub_imm__14 sub_imm__14__ret__74)
assum29: (= output_reg__15__arg__78 (concat fresh3 output_reg__15__ret__80))
assum30: (= sub_imm__14 output_reg__15__arg__78)
assum31: (= output_reg__15 output_reg__15__ret__80)
assum32: (= zret0_18 (_ bv0 16))
assum33: (= zy8_18 (bvlshr ((_ extract 15 0) cls__5__a__17) #x0008))
assum34: (ite (not (= zy8_18 (_ bv0 16))) (= zret3_18 zret0_18) (= zret3_18 (bvadd zret0_18 (_ bv8 16))))
assum35: (ite (not (= zy8_18 (_ bv0 16))) (= zx8_18 zy8_18) (= zx8_18 ((_ extract 15 0) cls__5__a__17)))
assum36: (= zy4_18 (bvlshr zx8_18 #x0004))
assum37: (ite (not (= zy4_18 (_ bv0 16))) (= zret4_18 zret3_18) (= zret4_18 (bvadd zret3_18 (_ bv4 16))))
assum38: (ite (not (= zy4_18 (_ bv0 16))) (= zx4_18 zy4_18) (= zx4_18 zx8_18))
assum39: (= zy2_18 (bvlshr zx4_18 #x0002))
assum40: (ite (not (= zy2_18 (_ bv0 16))) (= zret5_18 zret4_18) (= zret5_18 (bvadd zret4_18 (_ bv2 16))))
assum41: (ite (not (= zy2_18 (_ bv0 16))) (= zx2_18 zy2_18) (= zx2_18 zx4_18))
assum42: (= zy1_18 (bvlshr zx2_18 #x0001))
assum43: (ite (not (= zy1_18 (_ bv0 16))) (= zret6_18 zret5_18) (= zret6_18 (bvadd zret5_18 (_ bv1 16))))
assum44: (ite (not (= zy1_18 (_ bv0 16))) (= zx1_18 zy1_18) (= zx1_18 zx2_18))
assum45: (ite (not (= zx1_18 (_ bv0 16))) (= zret7_18 zret6_18) (= zret7_18 (bvadd zret6_18 (_ bv1 16))))
assum46: (ite (= zret7_18 (_ bv0 16)) (= clzret_18 zret7_18) (= clzret_18 (bvsub zret7_18 (_ bv1 16))))
assum47: (= sret0_18 (_ bv0 16))
assum48: (= sy8_18 (bvashr ((_ extract 15 0) cls__5__a__17) #x0008))
assum49: (ite (not (= sy8_18 (_ bv65535 16))) (= sret3_18 sret0_18) (= sret3_18 (bvadd sret0_18 (_ bv8 16))))
assum50: (ite (not (= sy8_18 (_ bv65535 16))) (= sx8_18 sy8_18) (= sx8_18 ((_ extract 15 0) cls__5__a__17)))
assum51: (= sy4_18 (bvashr sx8_18 #x0004))
assum52: (ite (not (= sy4_18 (_ bv65535 16))) (= sret4_18 sret3_18) (= sret4_18 (bvadd sret3_18 (_ bv4 16))))
assum53: (ite (not (= sy4_18 (_ bv65535 16))) (= sx4_18 sy4_18) (= sx4_18 sx8_18))
assum54: (= sy2_18 (bvashr sx4_18 #x0002))
assum55: (ite (not (= sy2_18 (_ bv65535 16))) (= sret5_18 sret4_18) (= sret5_18 (bvadd sret4_18 (_ bv2 16))))
assum56: (ite (not (= sy2_18 (_ bv65535 16))) (= sx2_18 sy2_18) (= sx2_18 sx4_18))
assum57: (= sy1_18 (bvashr sx2_18 #x0001))
assum58: (ite (not (= sy1_18 (_ bv65535 16))) (= sret6_18 sret5_18) (= sret6_18 (bvadd sret5_18 (_ bv1 16))))
assum59: (ite (not (= sy1_18 (_ bv65535 16))) (= sx1_18 sy1_18) (= sx1_18 sx2_18))
assum60: (ite (not (= sx1_18 (_ bv65535 16))) (= sret7_18 sret6_18) (= sret7_18 (bvadd sret6_18 (_ bv1 16))))
assum61: (ite (= sret7_18 (_ bv0 16)) (= clsret_18 sret7_18) (= clsret_18 (bvsub sret7_18 (_ bv1 16))))
assum62: (ite (bvsle (_ bv0 16) ((_ extract 15 0) cls__5__a__17)) (= cls16ret_18 clzret_18) (= cls16ret_18 clsret_18))
assum63: (= a64x_46 ((_ extract 31 0) a64_cls__11__a__45))
assum64: (= zret0_46 (_ bv0 64))
assum65: (= zy16_46 (bvlshr a64x_46 #x00000010))
assum66: (ite (not (= zy16_46 (_ bv0 32))) (= zret2_46 zret0_46) (= zret2_46 (bvadd zret0_46 (_ bv16 64))))
assum67: (ite (not (= zy16_46 (_ bv0 32))) (= zx16_46 zy16_46) (= zx16_46 a64x_46))
assum68: (= zy8_46 (bvlshr zx16_46 #x00000008))
assum69: (ite (not (= zy8_46 (_ bv0 32))) (= zret3_46 zret2_46) (= zret3_46 (bvadd zret2_46 (_ bv8 64))))
assum70: (ite (not (= zy8_46 (_ bv0 32))) (= zx8_46 zy8_46) (= zx8_46 zx16_46))
assum71: (= zy4_46 (bvlshr zx8_46 #x00000004))
assum72: (ite (not (= zy4_46 (_ bv0 32))) (= zret4_46 zret3_46) (= zret4_46 (bvadd zret3_46 (_ bv4 64))))
assum73: (ite (not (= zy4_46 (_ bv0 32))) (= zx4_46 zy4_46) (= zx4_46 zx8_46))
assum74: (= zy2_46 (bvlshr zx4_46 #x00000002))
assum75: (ite (not (= zy2_46 (_ bv0 32))) (= zret5_46 zret4_46) (= zret5_46 (bvadd zret4_46 (_ bv2 64))))
assum76: (ite (not (= zy2_46 (_ bv0 32))) (= zx2_46 zy2_46) (= zx2_46 zx4_46))
assum77: (= zy1_46 (bvlshr zx2_46 #x00000001))
assum78: (ite (not (= zy1_46 (_ bv0 32))) (= zret6_46 zret5_46) (= zret6_46 (bvadd zret5_46 (_ bv1 64))))
assum79: (ite (not (= zy1_46 (_ bv0 32))) (= zx1_46 zy1_46) (= zx1_46 zx2_46))
assum80: (ite (not (= zx1_46 (_ bv0 32))) (= zret7_46 zret6_46) (= zret7_46 (bvadd zret6_46 (_ bv1 64))))
assum81: (ite (= zret7_46 (_ bv0 64)) (= clzret_46 zret7_46) (= clzret_46 (bvsub zret7_46 (_ bv1 64))))
assum82: (= sret0_46 (_ bv0 64))
assum83: (= sy16_46 (bvashr a64x_46 #x00000010))
assum84: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sret2_46 sret0_46) (= sret2_46 (bvadd sret0_46 (_ bv16 64))))
assum85: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sx16_46 sy16_46) (= sx16_46 a64x_46))
assum86: (= sy8_46 (bvashr sx16_46 #x00000008))
assum87: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sret3_46 sret2_46) (= sret3_46 (bvadd sret2_46 (_ bv8 64))))
assum88: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sx8_46 sy8_46) (= sx8_46 sx16_46))
assum89: (= sy4_46 (bvashr sx8_46 #x00000004))
assum90: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sret4_46 sret3_46) (= sret4_46 (bvadd sret3_46 (_ bv4 64))))
assum91: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sx4_46 sy4_46) (= sx4_46 sx8_46))
assum92: (= sy2_46 (bvashr sx4_46 #x00000002))
assum93: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sret5_46 sret4_46) (= sret5_46 (bvadd sret4_46 (_ bv2 64))))
assum94: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sx2_46 sy2_46) (= sx2_46 sx4_46))
assum95: (= sy1_46 (bvashr sx2_46 #x00000001))
assum96: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sret6_46 sret5_46) (= sret6_46 (bvadd sret5_46 (_ bv1 64))))
assum97: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sx1_46 sy1_46) (= sx1_46 sx2_46))
assum98: (ite (not (= sx1_46 (_ bv4294967295 32))) (= sret7_46 sret6_46) (= sret7_46 (bvadd sret6_46 (_ bv1 64))))
assum99: (ite (= sret7_46 (_ bv0 64)) (= clsret_46 sret7_46) (= clsret_46 (bvsub sret7_46 (_ bv1 64))))
assum100: (ite (bvsle (_ bv0 32) a64x_46) (= a64cls32ret_46 clzret_46) (= a64cls32ret_46 clsret_46))
assum101: (= zret0_48 (_ bv0 64))
assum102: (= zy32_48 (bvlshr a64_cls__11__a__45 #x0000000000000020))
assum103: (ite (not (= zy32_48 (_ bv0 64))) (= zret1_48 zret0_48) (= zret1_48 (bvadd zret0_48 (_ bv32 64))))
assum104: (ite (not (= zy32_48 (_ bv0 64))) (= zx32_48 zy32_48) (= zx32_48 a64_cls__11__a__45))
assum105: (= zy16_48 (bvlshr zx32_48 #x0000000000000010))
assum106: (ite (not (= zy16_48 (_ bv0 64))) (= zret2_48 zret1_48) (= zret2_48 (bvadd zret1_48 (_ bv16 64))))
assum107: (ite (not (= zy16_48 (_ bv0 64))) (= zx16_48 zy16_48) (= zx16_48 zx32_48))
assum108: (= zy8_48 (bvlshr zx16_48 #x0000000000000008))
assum109: (ite (not (= zy8_48 (_ bv0 64))) (= zret3_48 zret2_48) (= zret3_48 (bvadd zret2_48 (_ bv8 64))))
assum110: (ite (not (= zy8_48 (_ bv0 64))) (= zx8_48 zy8_48) (= zx8_48 zx16_48))
assum111: (= zy4_48 (bvlshr zx8_48 #x0000000000000004))
assum112: (ite (not (= zy4_48 (_ bv0 64))) (= zret4_48 zret3_48) (= zret4_48 (bvadd zret3_48 (_ bv4 64))))
assum113: (ite (not (= zy4_48 (_ bv0 64))) (= zx4_48 zy4_48) (= zx4_48 zx8_48))
assum114: (= zy2_48 (bvlshr zx4_48 #x0000000000000002))
assum115: (ite (not (= zy2_48 (_ bv0 64))) (= zret5_48 zret4_48) (= zret5_48 (bvadd zret4_48 (_ bv2 64))))
assum116: (ite (not (= zy2_48 (_ bv0 64))) (= zx2_48 zy2_48) (= zx2_48 zx4_48))
assum117: (= zy1_48 (bvlshr zx2_48 #x0000000000000001))
assum118: (ite (not (= zy1_48 (_ bv0 64))) (= zret6_48 zret5_48) (= zret6_48 (bvadd zret5_48 (_ bv1 64))))
assum119: (ite (not (= zy1_48 (_ bv0 64))) (= zx1_48 zy1_48) (= zx1_48 zx2_48))
assum120: (ite (not (= zx1_48 (_ bv0 64))) (= zret7_48 zret6_48) (= zret7_48 (bvadd zret6_48 (_ bv1 64))))
assum121: (ite (= zret7_48 (_ bv0 64)) (= clzret_48 zret7_48) (= clzret_48 (bvsub zret7_48 (_ bv1 64))))
assum122: (= sret0_48 (_ bv0 64))
assum123: (= sy32_48 (bvashr a64_cls__11__a__45 #x0000000000000020))
assum124: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sret1_48 sret0_48) (= sret1_48 (bvadd sret0_48 (_ bv32 64))))
assum125: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sx32_48 sy32_48) (= sx32_48 a64_cls__11__a__45))
assum126: (= sy16_48 (bvashr sx32_48 #x0000000000000010))
assum127: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sret2_48 sret1_48) (= sret2_48 (bvadd sret1_48 (_ bv16 64))))
assum128: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sx16_48 sy16_48) (= sx16_48 sx32_48))
assum129: (= sy8_48 (bvashr sx16_48 #x0000000000000008))
assum130: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sret3_48 sret2_48) (= sret3_48 (bvadd sret2_48 (_ bv8 64))))
assum131: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sx8_48 sy8_48) (= sx8_48 sx16_48))
assum132: (= sy4_48 (bvashr sx8_48 #x0000000000000004))
assum133: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sret4_48 sret3_48) (= sret4_48 (bvadd sret3_48 (_ bv4 64))))
assum134: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sx4_48 sy4_48) (= sx4_48 sx8_48))
assum135: (= sy2_48 (bvashr sx4_48 #x0000000000000002))
assum136: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sret5_48 sret4_48) (= sret5_48 (bvadd sret4_48 (_ bv2 64))))
assum137: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sx2_48 sy2_48) (= sx2_48 sx4_48))
assum138: (= sy1_48 (bvashr sx2_48 #x0000000000000001))
assum139: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sret6_48 sret5_48) (= sret6_48 (bvadd sret5_48 (_ bv1 64))))
assum140: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sx1_48 sy1_48) (= sx1_48 sx2_48))
assum141: (ite (not (= sx1_48 (_ bv18446744073709551615 64))) (= sret7_48 sret6_48) (= sret7_48 (bvadd sret6_48 (_ bv1 64))))
assum142: (ite (= sret7_48 (_ bv0 64)) (= clsret_48 sret7_48) (= clsret_48 (bvsub sret7_48 (_ bv1 64))))
assum143: (ite (bvsle (_ bv0 64) a64_cls__11__a__45) (= cls64ret_48 clzret_48) (= cls64ret_48 clsret_48))
Assertion list is infeasible!
Unsat core:
(assum4 assum6)
Rule not applicable as written for rule assumptions, skipping full query
Typing rule:
	LHS: cls has_type lower
	RHS: put_in_reg_zext32 a64_cls u8_into_imm12 sub_imm output_reg
Verifying rule with term cls and types TermSignature { args: [BitVector(Some(32))], ret: BitVector(Some(32)), canonical_type: Some(BitVector(Some(32))) }
All widths resolved after basic type inference
Declaring quantified variables
	a64_cls__11 : (_ BitVec 64)
	a64_cls__11__a__45 : (_ BitVec 64)
	a64_cls__11__ret__40 : (_ BitVec 64)
	a64_cls__11__ty__41 : Int
	cls__5 : (_ BitVec 32)
	cls__5__a__17 : (_ BitVec 32)
	cls__5__ret__16 : (_ BitVec 32)
	has_type__6 : (_ BitVec 32)
	has_type__6__arg__21 : (_ BitVec 32)
	has_type__6__ret__24 : (_ BitVec 32)
	has_type__6__ty__20 : Int
	lower__7 : (_ BitVec 32)
	lower__7__arg__26 : (_ BitVec 32)
	lower__7__ret__27 : (_ BitVec 32)
	output_reg__15 : (_ BitVec 32)
	output_reg__15__arg__78 : (_ BitVec 64)
	output_reg__15__ret__80 : (_ BitVec 32)
	put_in_reg_zext32__10 : (_ BitVec 64)
	put_in_reg_zext32__10__arg__30 : (_ BitVec 32)
	put_in_reg_zext32__10__ret__33 : (_ BitVec 64)
	sub_imm__14 : (_ BitVec 64)
	sub_imm__14__ret__74 : (_ BitVec 64)
	sub_imm__14__ty__72 : Int
	sub_imm__14__x__73 : (_ BitVec 64)
	sub_imm__14__y__60 : (_ BitVec 24)
	u8_into_imm12__13 : (_ BitVec 24)
	u8_into_imm12__13__arg__57 : (_ BitVec 8)
	u8_into_imm12__13__ret__56 : (_ BitVec 24)
	x__clif0__2 : (_ BitVec 32)
Adding explicit assumptions
Adding additional assumptions
Declaring additional variables
Checking assumption feasibility
assum0: (= x__clif0__2 fresh0)
assum1: (= cls__5__ret__16 cls32ret_18)
assum2: (= x__clif0__2 cls__5__a__17)
assum3: (= cls__5 cls__5__ret__16)
assum4: (= has_type__6__ty__20 32)
assum5: (= has_type__6__arg__21 has_type__6__ret__24)
assum6: (= 8 has_type__6__ty__20)
assum7: (= cls__5 has_type__6__arg__21)
assum8: (= has_type__6 has_type__6__ret__24)
assum9: (= lower__7__arg__26 lower__7__ret__27)
assum10: (= has_type__6 lower__7__arg__26)
assum11: (= lower__7 lower__7__ret__27)
assum12: (ite (<= 32 32) (= put_in_reg_zext32__10__ret__33 (concat fresh1 put_in_reg_zext32__10__arg__30)) (= put_in_reg_zext32__10__ret__33 (concat fresh2 ((_ zero_extend 0) put_in_reg_zext32__10__arg__30))))
assum13: (= x__clif0__2 put_in_reg_zext32__10__arg__30)
assum14: (= put_in_reg_zext32__10 put_in_reg_zext32__10__ret__33)
assum15: (= a64_cls__11__ret__40 (ite (= a64_cls__11__ty__41 32) a64cls32ret_46 cls64ret_48))
assum16: (or (= a64_cls__11__ty__41 32) (= a64_cls__11__ty__41 64))
assum17: (= 32 a64_cls__11__ty__41)
assum18: (= put_in_reg_zext32__10 a64_cls__11__a__45)
assum19: (= a64_cls__11 a64_cls__11__ret__40)
assum20: (= u8_into_imm12__13__ret__56 ((_ zero_extend 16) u8_into_imm12__13__arg__57))
assum21: (= (_ bv24 8) u8_into_imm12__13__arg__57)
assum22: (= u8_into_imm12__13 u8_into_imm12__13__ret__56)
assum23: (or (<= (bv2nat sub_imm__14__y__60) 4094) (and (<= (bv2nat sub_imm__14__y__60) 16773119) (= ((_ extract 2 0) sub_imm__14__y__60) (_ bv0 3))))
assum24: (= sub_imm__14__ret__74 (bvsub sub_imm__14__x__73 ((_ zero_extend 40) sub_imm__14__y__60)))
assum25: (= 32 sub_imm__14__ty__72)
assum26: (= a64_cls__11 sub_imm__14__x__73)
assum27: (= u8_into_imm12__13 sub_imm__14__y__60)
assum28: (= sub_imm__14 sub_imm__14__ret__74)
assum29: (= output_reg__15__arg__78 (concat fresh3 output_reg__15__ret__80))
assum30: (= sub_imm__14 output_reg__15__arg__78)
assum31: (= output_reg__15 output_reg__15__ret__80)
assum32: (= zret0_18 (_ bv0 32))
assum33: (= zy16_18 (bvlshr ((_ extract 31 0) cls__5__a__17) #x00000010))
assum34: (ite (not (= zy16_18 (_ bv0 32))) (= zret2_18 zret0_18) (= zret2_18 (bvadd zret0_18 (_ bv16 32))))
assum35: (ite (not (= zy16_18 (_ bv0 32))) (= zx16_18 zy16_18) (= zx16_18 ((_ extract 31 0) cls__5__a__17)))
assum36: (= zy8_18 (bvlshr zx16_18 #x00000008))
assum37: (ite (not (= zy8_18 (_ bv0 32))) (= zret3_18 zret2_18) (= zret3_18 (bvadd zret2_18 (_ bv8 32))))
assum38: (ite (not (= zy8_18 (_ bv0 32))) (= zx8_18 zy8_18) (= zx8_18 zx16_18))
assum39: (= zy4_18 (bvlshr zx8_18 #x00000004))
assum40: (ite (not (= zy4_18 (_ bv0 32))) (= zret4_18 zret3_18) (= zret4_18 (bvadd zret3_18 (_ bv4 32))))
assum41: (ite (not (= zy4_18 (_ bv0 32))) (= zx4_18 zy4_18) (= zx4_18 zx8_18))
assum42: (= zy2_18 (bvlshr zx4_18 #x00000002))
assum43: (ite (not (= zy2_18 (_ bv0 32))) (= zret5_18 zret4_18) (= zret5_18 (bvadd zret4_18 (_ bv2 32))))
assum44: (ite (not (= zy2_18 (_ bv0 32))) (= zx2_18 zy2_18) (= zx2_18 zx4_18))
assum45: (= zy1_18 (bvlshr zx2_18 #x00000001))
assum46: (ite (not (= zy1_18 (_ bv0 32))) (= zret6_18 zret5_18) (= zret6_18 (bvadd zret5_18 (_ bv1 32))))
assum47: (ite (not (= zy1_18 (_ bv0 32))) (= zx1_18 zy1_18) (= zx1_18 zx2_18))
assum48: (ite (not (= zx1_18 (_ bv0 32))) (= zret7_18 zret6_18) (= zret7_18 (bvadd zret6_18 (_ bv1 32))))
assum49: (ite (= zret7_18 (_ bv0 32)) (= clzret_18 zret7_18) (= clzret_18 (bvsub zret7_18 (_ bv1 32))))
assum50: (= sret0_18 (_ bv0 32))
assum51: (= sy16_18 (bvashr ((_ extract 31 0) cls__5__a__17) #x00000010))
assum52: (ite (not (= sy16_18 (_ bv4294967295 32))) (= sret2_18 sret0_18) (= sret2_18 (bvadd sret0_18 (_ bv16 32))))
assum53: (ite (not (= sy16_18 (_ bv4294967295 32))) (= sx16_18 sy16_18) (= sx16_18 ((_ extract 31 0) cls__5__a__17)))
assum54: (= sy8_18 (bvashr sx16_18 #x00000008))
assum55: (ite (not (= sy8_18 (_ bv4294967295 32))) (= sret3_18 sret2_18) (= sret3_18 (bvadd sret2_18 (_ bv8 32))))
assum56: (ite (not (= sy8_18 (_ bv4294967295 32))) (= sx8_18 sy8_18) (= sx8_18 sx16_18))
assum57: (= sy4_18 (bvashr sx8_18 #x00000004))
assum58: (ite (not (= sy4_18 (_ bv4294967295 32))) (= sret4_18 sret3_18) (= sret4_18 (bvadd sret3_18 (_ bv4 32))))
assum59: (ite (not (= sy4_18 (_ bv4294967295 32))) (= sx4_18 sy4_18) (= sx4_18 sx8_18))
assum60: (= sy2_18 (bvashr sx4_18 #x00000002))
assum61: (ite (not (= sy2_18 (_ bv4294967295 32))) (= sret5_18 sret4_18) (= sret5_18 (bvadd sret4_18 (_ bv2 32))))
assum62: (ite (not (= sy2_18 (_ bv4294967295 32))) (= sx2_18 sy2_18) (= sx2_18 sx4_18))
assum63: (= sy1_18 (bvashr sx2_18 #x00000001))
assum64: (ite (not (= sy1_18 (_ bv4294967295 32))) (= sret6_18 sret5_18) (= sret6_18 (bvadd sret5_18 (_ bv1 32))))
assum65: (ite (not (= sy1_18 (_ bv4294967295 32))) (= sx1_18 sy1_18) (= sx1_18 sx2_18))
assum66: (ite (not (= sx1_18 (_ bv4294967295 32))) (= sret7_18 sret6_18) (= sret7_18 (bvadd sret6_18 (_ bv1 32))))
assum67: (ite (= sret7_18 (_ bv0 32)) (= clsret_18 sret7_18) (= clsret_18 (bvsub sret7_18 (_ bv1 32))))
assum68: (ite (bvsle (_ bv0 32) ((_ extract 31 0) cls__5__a__17)) (= cls32ret_18 clzret_18) (= cls32ret_18 clsret_18))
assum69: (= a64x_46 ((_ extract 31 0) a64_cls__11__a__45))
assum70: (= zret0_46 (_ bv0 64))
assum71: (= zy16_46 (bvlshr a64x_46 #x00000010))
assum72: (ite (not (= zy16_46 (_ bv0 32))) (= zret2_46 zret0_46) (= zret2_46 (bvadd zret0_46 (_ bv16 64))))
assum73: (ite (not (= zy16_46 (_ bv0 32))) (= zx16_46 zy16_46) (= zx16_46 a64x_46))
assum74: (= zy8_46 (bvlshr zx16_46 #x00000008))
assum75: (ite (not (= zy8_46 (_ bv0 32))) (= zret3_46 zret2_46) (= zret3_46 (bvadd zret2_46 (_ bv8 64))))
assum76: (ite (not (= zy8_46 (_ bv0 32))) (= zx8_46 zy8_46) (= zx8_46 zx16_46))
assum77: (= zy4_46 (bvlshr zx8_46 #x00000004))
assum78: (ite (not (= zy4_46 (_ bv0 32))) (= zret4_46 zret3_46) (= zret4_46 (bvadd zret3_46 (_ bv4 64))))
assum79: (ite (not (= zy4_46 (_ bv0 32))) (= zx4_46 zy4_46) (= zx4_46 zx8_46))
assum80: (= zy2_46 (bvlshr zx4_46 #x00000002))
assum81: (ite (not (= zy2_46 (_ bv0 32))) (= zret5_46 zret4_46) (= zret5_46 (bvadd zret4_46 (_ bv2 64))))
assum82: (ite (not (= zy2_46 (_ bv0 32))) (= zx2_46 zy2_46) (= zx2_46 zx4_46))
assum83: (= zy1_46 (bvlshr zx2_46 #x00000001))
assum84: (ite (not (= zy1_46 (_ bv0 32))) (= zret6_46 zret5_46) (= zret6_46 (bvadd zret5_46 (_ bv1 64))))
assum85: (ite (not (= zy1_46 (_ bv0 32))) (= zx1_46 zy1_46) (= zx1_46 zx2_46))
assum86: (ite (not (= zx1_46 (_ bv0 32))) (= zret7_46 zret6_46) (= zret7_46 (bvadd zret6_46 (_ bv1 64))))
assum87: (ite (= zret7_46 (_ bv0 64)) (= clzret_46 zret7_46) (= clzret_46 (bvsub zret7_46 (_ bv1 64))))
assum88: (= sret0_46 (_ bv0 64))
assum89: (= sy16_46 (bvashr a64x_46 #x00000010))
assum90: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sret2_46 sret0_46) (= sret2_46 (bvadd sret0_46 (_ bv16 64))))
assum91: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sx16_46 sy16_46) (= sx16_46 a64x_46))
assum92: (= sy8_46 (bvashr sx16_46 #x00000008))
assum93: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sret3_46 sret2_46) (= sret3_46 (bvadd sret2_46 (_ bv8 64))))
assum94: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sx8_46 sy8_46) (= sx8_46 sx16_46))
assum95: (= sy4_46 (bvashr sx8_46 #x00000004))
assum96: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sret4_46 sret3_46) (= sret4_46 (bvadd sret3_46 (_ bv4 64))))
assum97: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sx4_46 sy4_46) (= sx4_46 sx8_46))
assum98: (= sy2_46 (bvashr sx4_46 #x00000002))
assum99: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sret5_46 sret4_46) (= sret5_46 (bvadd sret4_46 (_ bv2 64))))
assum100: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sx2_46 sy2_46) (= sx2_46 sx4_46))
assum101: (= sy1_46 (bvashr sx2_46 #x00000001))
assum102: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sret6_46 sret5_46) (= sret6_46 (bvadd sret5_46 (_ bv1 64))))
assum103: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sx1_46 sy1_46) (= sx1_46 sx2_46))
assum104: (ite (not (= sx1_46 (_ bv4294967295 32))) (= sret7_46 sret6_46) (= sret7_46 (bvadd sret6_46 (_ bv1 64))))
assum105: (ite (= sret7_46 (_ bv0 64)) (= clsret_46 sret7_46) (= clsret_46 (bvsub sret7_46 (_ bv1 64))))
assum106: (ite (bvsle (_ bv0 32) a64x_46) (= a64cls32ret_46 clzret_46) (= a64cls32ret_46 clsret_46))
assum107: (= zret0_48 (_ bv0 64))
assum108: (= zy32_48 (bvlshr a64_cls__11__a__45 #x0000000000000020))
assum109: (ite (not (= zy32_48 (_ bv0 64))) (= zret1_48 zret0_48) (= zret1_48 (bvadd zret0_48 (_ bv32 64))))
assum110: (ite (not (= zy32_48 (_ bv0 64))) (= zx32_48 zy32_48) (= zx32_48 a64_cls__11__a__45))
assum111: (= zy16_48 (bvlshr zx32_48 #x0000000000000010))
assum112: (ite (not (= zy16_48 (_ bv0 64))) (= zret2_48 zret1_48) (= zret2_48 (bvadd zret1_48 (_ bv16 64))))
assum113: (ite (not (= zy16_48 (_ bv0 64))) (= zx16_48 zy16_48) (= zx16_48 zx32_48))
assum114: (= zy8_48 (bvlshr zx16_48 #x0000000000000008))
assum115: (ite (not (= zy8_48 (_ bv0 64))) (= zret3_48 zret2_48) (= zret3_48 (bvadd zret2_48 (_ bv8 64))))
assum116: (ite (not (= zy8_48 (_ bv0 64))) (= zx8_48 zy8_48) (= zx8_48 zx16_48))
assum117: (= zy4_48 (bvlshr zx8_48 #x0000000000000004))
assum118: (ite (not (= zy4_48 (_ bv0 64))) (= zret4_48 zret3_48) (= zret4_48 (bvadd zret3_48 (_ bv4 64))))
assum119: (ite (not (= zy4_48 (_ bv0 64))) (= zx4_48 zy4_48) (= zx4_48 zx8_48))
assum120: (= zy2_48 (bvlshr zx4_48 #x0000000000000002))
assum121: (ite (not (= zy2_48 (_ bv0 64))) (= zret5_48 zret4_48) (= zret5_48 (bvadd zret4_48 (_ bv2 64))))
assum122: (ite (not (= zy2_48 (_ bv0 64))) (= zx2_48 zy2_48) (= zx2_48 zx4_48))
assum123: (= zy1_48 (bvlshr zx2_48 #x0000000000000001))
assum124: (ite (not (= zy1_48 (_ bv0 64))) (= zret6_48 zret5_48) (= zret6_48 (bvadd zret5_48 (_ bv1 64))))
assum125: (ite (not (= zy1_48 (_ bv0 64))) (= zx1_48 zy1_48) (= zx1_48 zx2_48))
assum126: (ite (not (= zx1_48 (_ bv0 64))) (= zret7_48 zret6_48) (= zret7_48 (bvadd zret6_48 (_ bv1 64))))
assum127: (ite (= zret7_48 (_ bv0 64)) (= clzret_48 zret7_48) (= clzret_48 (bvsub zret7_48 (_ bv1 64))))
assum128: (= sret0_48 (_ bv0 64))
assum129: (= sy32_48 (bvashr a64_cls__11__a__45 #x0000000000000020))
assum130: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sret1_48 sret0_48) (= sret1_48 (bvadd sret0_48 (_ bv32 64))))
assum131: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sx32_48 sy32_48) (= sx32_48 a64_cls__11__a__45))
assum132: (= sy16_48 (bvashr sx32_48 #x0000000000000010))
assum133: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sret2_48 sret1_48) (= sret2_48 (bvadd sret1_48 (_ bv16 64))))
assum134: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sx16_48 sy16_48) (= sx16_48 sx32_48))
assum135: (= sy8_48 (bvashr sx16_48 #x0000000000000008))
assum136: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sret3_48 sret2_48) (= sret3_48 (bvadd sret2_48 (_ bv8 64))))
assum137: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sx8_48 sy8_48) (= sx8_48 sx16_48))
assum138: (= sy4_48 (bvashr sx8_48 #x0000000000000004))
assum139: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sret4_48 sret3_48) (= sret4_48 (bvadd sret3_48 (_ bv4 64))))
assum140: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sx4_48 sy4_48) (= sx4_48 sx8_48))
assum141: (= sy2_48 (bvashr sx4_48 #x0000000000000002))
assum142: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sret5_48 sret4_48) (= sret5_48 (bvadd sret4_48 (_ bv2 64))))
assum143: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sx2_48 sy2_48) (= sx2_48 sx4_48))
assum144: (= sy1_48 (bvashr sx2_48 #x0000000000000001))
assum145: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sret6_48 sret5_48) (= sret6_48 (bvadd sret5_48 (_ bv1 64))))
assum146: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sx1_48 sy1_48) (= sx1_48 sx2_48))
assum147: (ite (not (= sx1_48 (_ bv18446744073709551615 64))) (= sret7_48 sret6_48) (= sret7_48 (bvadd sret6_48 (_ bv1 64))))
assum148: (ite (= sret7_48 (_ bv0 64)) (= clsret_48 sret7_48) (= clsret_48 (bvsub sret7_48 (_ bv1 64))))
assum149: (ite (bvsle (_ bv0 64) a64_cls__11__a__45) (= cls64ret_48 clzret_48) (= cls64ret_48 clsret_48))
Assertion list is infeasible!
Unsat core:
(assum4 assum6)
Rule not applicable as written for rule assumptions, skipping full query
Typing rule:
	LHS: cls has_type lower
	RHS: put_in_reg_zext32 a64_cls u8_into_imm12 sub_imm output_reg
Verifying rule with term cls and types TermSignature { args: [BitVector(Some(64))], ret: BitVector(Some(64)), canonical_type: Some(BitVector(Some(64))) }
All widths resolved after basic type inference
Declaring quantified variables
	a64_cls__11 : (_ BitVec 64)
	a64_cls__11__a__45 : (_ BitVec 64)
	a64_cls__11__ret__40 : (_ BitVec 64)
	a64_cls__11__ty__41 : Int
	cls__5 : (_ BitVec 64)
	cls__5__a__17 : (_ BitVec 64)
	cls__5__ret__16 : (_ BitVec 64)
	has_type__6 : (_ BitVec 64)
	has_type__6__arg__21 : (_ BitVec 64)
	has_type__6__ret__24 : (_ BitVec 64)
	has_type__6__ty__20 : Int
	lower__7 : (_ BitVec 64)
	lower__7__arg__26 : (_ BitVec 64)
	lower__7__ret__27 : (_ BitVec 64)
	output_reg__15 : (_ BitVec 64)
	output_reg__15__arg__78 : (_ BitVec 64)
	output_reg__15__ret__80 : (_ BitVec 64)
	put_in_reg_zext32__10 : (_ BitVec 64)
	put_in_reg_zext32__10__arg__30 : (_ BitVec 64)
	put_in_reg_zext32__10__ret__33 : (_ BitVec 64)
	sub_imm__14 : (_ BitVec 64)
	sub_imm__14__ret__74 : (_ BitVec 64)
	sub_imm__14__ty__72 : Int
	sub_imm__14__x__73 : (_ BitVec 64)
	sub_imm__14__y__60 : (_ BitVec 24)
	u8_into_imm12__13 : (_ BitVec 24)
	u8_into_imm12__13__arg__57 : (_ BitVec 8)
	u8_into_imm12__13__ret__56 : (_ BitVec 24)
	x__clif0__2 : (_ BitVec 64)
Adding explicit assumptions
Unexpected extend widths for put_in_reg_zext32__10__arg__30: dest 32 source 64 
Adding additional assumptions
Declaring additional variables
Checking assumption feasibility
assum0: (= x__clif0__2 fresh0)
assum1: (= cls__5__ret__16 cls64ret_18)
assum2: (= x__clif0__2 cls__5__a__17)
assum3: (= cls__5 cls__5__ret__16)
assum4: (= has_type__6__ty__20 64)
assum5: (= has_type__6__arg__21 has_type__6__ret__24)
assum6: (= 8 has_type__6__ty__20)
assum7: (= cls__5 has_type__6__arg__21)
assum8: (= has_type__6 has_type__6__ret__24)
assum9: (= lower__7__arg__26 lower__7__ret__27)
assum10: (= has_type__6 lower__7__arg__26)
assum11: (= lower__7 lower__7__ret__27)
assum12: (ite (<= 32 64) (= put_in_reg_zext32__10__ret__33 put_in_reg_zext32__10__arg__30) (= put_in_reg_zext32__10__ret__33 (concat fresh1 (_ bv0 32))))
assum13: (= x__clif0__2 put_in_reg_zext32__10__arg__30)
assum14: (= put_in_reg_zext32__10 put_in_reg_zext32__10__ret__33)
assum15: (= a64_cls__11__ret__40 (ite (= a64_cls__11__ty__41 32) a64cls32ret_46 cls64ret_48))
assum16: (or (= a64_cls__11__ty__41 32) (= a64_cls__11__ty__41 64))
assum17: (= 32 a64_cls__11__ty__41)
assum18: (= put_in_reg_zext32__10 a64_cls__11__a__45)
assum19: (= a64_cls__11 a64_cls__11__ret__40)
assum20: (= u8_into_imm12__13__ret__56 ((_ zero_extend 16) u8_into_imm12__13__arg__57))
assum21: (= (_ bv24 8) u8_into_imm12__13__arg__57)
assum22: (= u8_into_imm12__13 u8_into_imm12__13__ret__56)
assum23: (or (<= (bv2nat sub_imm__14__y__60) 4094) (and (<= (bv2nat sub_imm__14__y__60) 16773119) (= ((_ extract 2 0) sub_imm__14__y__60) (_ bv0 3))))
assum24: (= sub_imm__14__ret__74 (bvsub sub_imm__14__x__73 ((_ zero_extend 40) sub_imm__14__y__60)))
assum25: (= 32 sub_imm__14__ty__72)
assum26: (= a64_cls__11 sub_imm__14__x__73)
assum27: (= u8_into_imm12__13 sub_imm__14__y__60)
assum28: (= sub_imm__14 sub_imm__14__ret__74)
assum29: (= output_reg__15__arg__78 output_reg__15__ret__80)
assum30: (= sub_imm__14 output_reg__15__arg__78)
assum31: (= output_reg__15 output_reg__15__ret__80)
assum32: (= zret0_18 (_ bv0 64))
assum33: (= zy32_18 (bvlshr cls__5__a__17 #x0000000000000020))
assum34: (ite (not (= zy32_18 (_ bv0 64))) (= zret1_18 zret0_18) (= zret1_18 (bvadd zret0_18 (_ bv32 64))))
assum35: (ite (not (= zy32_18 (_ bv0 64))) (= zx32_18 zy32_18) (= zx32_18 cls__5__a__17))
assum36: (= zy16_18 (bvlshr zx32_18 #x0000000000000010))
assum37: (ite (not (= zy16_18 (_ bv0 64))) (= zret2_18 zret1_18) (= zret2_18 (bvadd zret1_18 (_ bv16 64))))
assum38: (ite (not (= zy16_18 (_ bv0 64))) (= zx16_18 zy16_18) (= zx16_18 zx32_18))
assum39: (= zy8_18 (bvlshr zx16_18 #x0000000000000008))
assum40: (ite (not (= zy8_18 (_ bv0 64))) (= zret3_18 zret2_18) (= zret3_18 (bvadd zret2_18 (_ bv8 64))))
assum41: (ite (not (= zy8_18 (_ bv0 64))) (= zx8_18 zy8_18) (= zx8_18 zx16_18))
assum42: (= zy4_18 (bvlshr zx8_18 #x0000000000000004))
assum43: (ite (not (= zy4_18 (_ bv0 64))) (= zret4_18 zret3_18) (= zret4_18 (bvadd zret3_18 (_ bv4 64))))
assum44: (ite (not (= zy4_18 (_ bv0 64))) (= zx4_18 zy4_18) (= zx4_18 zx8_18))
assum45: (= zy2_18 (bvlshr zx4_18 #x0000000000000002))
assum46: (ite (not (= zy2_18 (_ bv0 64))) (= zret5_18 zret4_18) (= zret5_18 (bvadd zret4_18 (_ bv2 64))))
assum47: (ite (not (= zy2_18 (_ bv0 64))) (= zx2_18 zy2_18) (= zx2_18 zx4_18))
assum48: (= zy1_18 (bvlshr zx2_18 #x0000000000000001))
assum49: (ite (not (= zy1_18 (_ bv0 64))) (= zret6_18 zret5_18) (= zret6_18 (bvadd zret5_18 (_ bv1 64))))
assum50: (ite (not (= zy1_18 (_ bv0 64))) (= zx1_18 zy1_18) (= zx1_18 zx2_18))
assum51: (ite (not (= zx1_18 (_ bv0 64))) (= zret7_18 zret6_18) (= zret7_18 (bvadd zret6_18 (_ bv1 64))))
assum52: (ite (= zret7_18 (_ bv0 64)) (= clzret_18 zret7_18) (= clzret_18 (bvsub zret7_18 (_ bv1 64))))
assum53: (= sret0_18 (_ bv0 64))
assum54: (= sy32_18 (bvashr cls__5__a__17 #x0000000000000020))
assum55: (ite (not (= sy32_18 (_ bv18446744073709551615 64))) (= sret1_18 sret0_18) (= sret1_18 (bvadd sret0_18 (_ bv32 64))))
assum56: (ite (not (= sy32_18 (_ bv18446744073709551615 64))) (= sx32_18 sy32_18) (= sx32_18 cls__5__a__17))
assum57: (= sy16_18 (bvashr sx32_18 #x0000000000000010))
assum58: (ite (not (= sy16_18 (_ bv18446744073709551615 64))) (= sret2_18 sret1_18) (= sret2_18 (bvadd sret1_18 (_ bv16 64))))
assum59: (ite (not (= sy16_18 (_ bv18446744073709551615 64))) (= sx16_18 sy16_18) (= sx16_18 sx32_18))
assum60: (= sy8_18 (bvashr sx16_18 #x0000000000000008))
assum61: (ite (not (= sy8_18 (_ bv18446744073709551615 64))) (= sret3_18 sret2_18) (= sret3_18 (bvadd sret2_18 (_ bv8 64))))
assum62: (ite (not (= sy8_18 (_ bv18446744073709551615 64))) (= sx8_18 sy8_18) (= sx8_18 sx16_18))
assum63: (= sy4_18 (bvashr sx8_18 #x0000000000000004))
assum64: (ite (not (= sy4_18 (_ bv18446744073709551615 64))) (= sret4_18 sret3_18) (= sret4_18 (bvadd sret3_18 (_ bv4 64))))
assum65: (ite (not (= sy4_18 (_ bv18446744073709551615 64))) (= sx4_18 sy4_18) (= sx4_18 sx8_18))
assum66: (= sy2_18 (bvashr sx4_18 #x0000000000000002))
assum67: (ite (not (= sy2_18 (_ bv18446744073709551615 64))) (= sret5_18 sret4_18) (= sret5_18 (bvadd sret4_18 (_ bv2 64))))
assum68: (ite (not (= sy2_18 (_ bv18446744073709551615 64))) (= sx2_18 sy2_18) (= sx2_18 sx4_18))
assum69: (= sy1_18 (bvashr sx2_18 #x0000000000000001))
assum70: (ite (not (= sy1_18 (_ bv18446744073709551615 64))) (= sret6_18 sret5_18) (= sret6_18 (bvadd sret5_18 (_ bv1 64))))
assum71: (ite (not (= sy1_18 (_ bv18446744073709551615 64))) (= sx1_18 sy1_18) (= sx1_18 sx2_18))
assum72: (ite (not (= sx1_18 (_ bv18446744073709551615 64))) (= sret7_18 sret6_18) (= sret7_18 (bvadd sret6_18 (_ bv1 64))))
assum73: (ite (= sret7_18 (_ bv0 64)) (= clsret_18 sret7_18) (= clsret_18 (bvsub sret7_18 (_ bv1 64))))
assum74: (ite (bvsle (_ bv0 64) cls__5__a__17) (= cls64ret_18 clzret_18) (= cls64ret_18 clsret_18))
assum75: (= a64x_46 ((_ extract 31 0) a64_cls__11__a__45))
assum76: (= zret0_46 (_ bv0 64))
assum77: (= zy16_46 (bvlshr a64x_46 #x00000010))
assum78: (ite (not (= zy16_46 (_ bv0 32))) (= zret2_46 zret0_46) (= zret2_46 (bvadd zret0_46 (_ bv16 64))))
assum79: (ite (not (= zy16_46 (_ bv0 32))) (= zx16_46 zy16_46) (= zx16_46 a64x_46))
assum80: (= zy8_46 (bvlshr zx16_46 #x00000008))
assum81: (ite (not (= zy8_46 (_ bv0 32))) (= zret3_46 zret2_46) (= zret3_46 (bvadd zret2_46 (_ bv8 64))))
assum82: (ite (not (= zy8_46 (_ bv0 32))) (= zx8_46 zy8_46) (= zx8_46 zx16_46))
assum83: (= zy4_46 (bvlshr zx8_46 #x00000004))
assum84: (ite (not (= zy4_46 (_ bv0 32))) (= zret4_46 zret3_46) (= zret4_46 (bvadd zret3_46 (_ bv4 64))))
assum85: (ite (not (= zy4_46 (_ bv0 32))) (= zx4_46 zy4_46) (= zx4_46 zx8_46))
assum86: (= zy2_46 (bvlshr zx4_46 #x00000002))
assum87: (ite (not (= zy2_46 (_ bv0 32))) (= zret5_46 zret4_46) (= zret5_46 (bvadd zret4_46 (_ bv2 64))))
assum88: (ite (not (= zy2_46 (_ bv0 32))) (= zx2_46 zy2_46) (= zx2_46 zx4_46))
assum89: (= zy1_46 (bvlshr zx2_46 #x00000001))
assum90: (ite (not (= zy1_46 (_ bv0 32))) (= zret6_46 zret5_46) (= zret6_46 (bvadd zret5_46 (_ bv1 64))))
assum91: (ite (not (= zy1_46 (_ bv0 32))) (= zx1_46 zy1_46) (= zx1_46 zx2_46))
assum92: (ite (not (= zx1_46 (_ bv0 32))) (= zret7_46 zret6_46) (= zret7_46 (bvadd zret6_46 (_ bv1 64))))
assum93: (ite (= zret7_46 (_ bv0 64)) (= clzret_46 zret7_46) (= clzret_46 (bvsub zret7_46 (_ bv1 64))))
assum94: (= sret0_46 (_ bv0 64))
assum95: (= sy16_46 (bvashr a64x_46 #x00000010))
assum96: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sret2_46 sret0_46) (= sret2_46 (bvadd sret0_46 (_ bv16 64))))
assum97: (ite (not (= sy16_46 (_ bv4294967295 32))) (= sx16_46 sy16_46) (= sx16_46 a64x_46))
assum98: (= sy8_46 (bvashr sx16_46 #x00000008))
assum99: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sret3_46 sret2_46) (= sret3_46 (bvadd sret2_46 (_ bv8 64))))
assum100: (ite (not (= sy8_46 (_ bv4294967295 32))) (= sx8_46 sy8_46) (= sx8_46 sx16_46))
assum101: (= sy4_46 (bvashr sx8_46 #x00000004))
assum102: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sret4_46 sret3_46) (= sret4_46 (bvadd sret3_46 (_ bv4 64))))
assum103: (ite (not (= sy4_46 (_ bv4294967295 32))) (= sx4_46 sy4_46) (= sx4_46 sx8_46))
assum104: (= sy2_46 (bvashr sx4_46 #x00000002))
assum105: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sret5_46 sret4_46) (= sret5_46 (bvadd sret4_46 (_ bv2 64))))
assum106: (ite (not (= sy2_46 (_ bv4294967295 32))) (= sx2_46 sy2_46) (= sx2_46 sx4_46))
assum107: (= sy1_46 (bvashr sx2_46 #x00000001))
assum108: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sret6_46 sret5_46) (= sret6_46 (bvadd sret5_46 (_ bv1 64))))
assum109: (ite (not (= sy1_46 (_ bv4294967295 32))) (= sx1_46 sy1_46) (= sx1_46 sx2_46))
assum110: (ite (not (= sx1_46 (_ bv4294967295 32))) (= sret7_46 sret6_46) (= sret7_46 (bvadd sret6_46 (_ bv1 64))))
assum111: (ite (= sret7_46 (_ bv0 64)) (= clsret_46 sret7_46) (= clsret_46 (bvsub sret7_46 (_ bv1 64))))
assum112: (ite (bvsle (_ bv0 32) a64x_46) (= a64cls32ret_46 clzret_46) (= a64cls32ret_46 clsret_46))
assum113: (= zret0_48 (_ bv0 64))
assum114: (= zy32_48 (bvlshr a64_cls__11__a__45 #x0000000000000020))
assum115: (ite (not (= zy32_48 (_ bv0 64))) (= zret1_48 zret0_48) (= zret1_48 (bvadd zret0_48 (_ bv32 64))))
assum116: (ite (not (= zy32_48 (_ bv0 64))) (= zx32_48 zy32_48) (= zx32_48 a64_cls__11__a__45))
assum117: (= zy16_48 (bvlshr zx32_48 #x0000000000000010))
assum118: (ite (not (= zy16_48 (_ bv0 64))) (= zret2_48 zret1_48) (= zret2_48 (bvadd zret1_48 (_ bv16 64))))
assum119: (ite (not (= zy16_48 (_ bv0 64))) (= zx16_48 zy16_48) (= zx16_48 zx32_48))
assum120: (= zy8_48 (bvlshr zx16_48 #x0000000000000008))
assum121: (ite (not (= zy8_48 (_ bv0 64))) (= zret3_48 zret2_48) (= zret3_48 (bvadd zret2_48 (_ bv8 64))))
assum122: (ite (not (= zy8_48 (_ bv0 64))) (= zx8_48 zy8_48) (= zx8_48 zx16_48))
assum123: (= zy4_48 (bvlshr zx8_48 #x0000000000000004))
assum124: (ite (not (= zy4_48 (_ bv0 64))) (= zret4_48 zret3_48) (= zret4_48 (bvadd zret3_48 (_ bv4 64))))
assum125: (ite (not (= zy4_48 (_ bv0 64))) (= zx4_48 zy4_48) (= zx4_48 zx8_48))
assum126: (= zy2_48 (bvlshr zx4_48 #x0000000000000002))
assum127: (ite (not (= zy2_48 (_ bv0 64))) (= zret5_48 zret4_48) (= zret5_48 (bvadd zret4_48 (_ bv2 64))))
assum128: (ite (not (= zy2_48 (_ bv0 64))) (= zx2_48 zy2_48) (= zx2_48 zx4_48))
assum129: (= zy1_48 (bvlshr zx2_48 #x0000000000000001))
assum130: (ite (not (= zy1_48 (_ bv0 64))) (= zret6_48 zret5_48) (= zret6_48 (bvadd zret5_48 (_ bv1 64))))
assum131: (ite (not (= zy1_48 (_ bv0 64))) (= zx1_48 zy1_48) (= zx1_48 zx2_48))
assum132: (ite (not (= zx1_48 (_ bv0 64))) (= zret7_48 zret6_48) (= zret7_48 (bvadd zret6_48 (_ bv1 64))))
assum133: (ite (= zret7_48 (_ bv0 64)) (= clzret_48 zret7_48) (= clzret_48 (bvsub zret7_48 (_ bv1 64))))
assum134: (= sret0_48 (_ bv0 64))
assum135: (= sy32_48 (bvashr a64_cls__11__a__45 #x0000000000000020))
assum136: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sret1_48 sret0_48) (= sret1_48 (bvadd sret0_48 (_ bv32 64))))
assum137: (ite (not (= sy32_48 (_ bv18446744073709551615 64))) (= sx32_48 sy32_48) (= sx32_48 a64_cls__11__a__45))
assum138: (= sy16_48 (bvashr sx32_48 #x0000000000000010))
assum139: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sret2_48 sret1_48) (= sret2_48 (bvadd sret1_48 (_ bv16 64))))
assum140: (ite (not (= sy16_48 (_ bv18446744073709551615 64))) (= sx16_48 sy16_48) (= sx16_48 sx32_48))
assum141: (= sy8_48 (bvashr sx16_48 #x0000000000000008))
assum142: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sret3_48 sret2_48) (= sret3_48 (bvadd sret2_48 (_ bv8 64))))
assum143: (ite (not (= sy8_48 (_ bv18446744073709551615 64))) (= sx8_48 sy8_48) (= sx8_48 sx16_48))
assum144: (= sy4_48 (bvashr sx8_48 #x0000000000000004))
assum145: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sret4_48 sret3_48) (= sret4_48 (bvadd sret3_48 (_ bv4 64))))
assum146: (ite (not (= sy4_48 (_ bv18446744073709551615 64))) (= sx4_48 sy4_48) (= sx4_48 sx8_48))
assum147: (= sy2_48 (bvashr sx4_48 #x0000000000000002))
assum148: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sret5_48 sret4_48) (= sret5_48 (bvadd sret4_48 (_ bv2 64))))
assum149: (ite (not (= sy2_48 (_ bv18446744073709551615 64))) (= sx2_48 sy2_48) (= sx2_48 sx4_48))
assum150: (= sy1_48 (bvashr sx2_48 #x0000000000000001))
assum151: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sret6_48 sret5_48) (= sret6_48 (bvadd sret5_48 (_ bv1 64))))
assum152: (ite (not (= sy1_48 (_ bv18446744073709551615 64))) (= sx1_48 sy1_48) (= sx1_48 sx2_48))
assum153: (ite (not (= sx1_48 (_ bv18446744073709551615 64))) (= sret7_48 sret6_48) (= sret7_48 (bvadd sret6_48 (_ bv1 64))))
assum154: (ite (= sret7_48 (_ bv0 64)) (= clsret_48 sret7_48) (= clsret_48 (bvsub sret7_48 (_ bv1 64))))
assum155: (ite (bvsle (_ bv0 64) a64_cls__11__a__45) (= cls64ret_48 clzret_48) (= cls64ret_48 clsret_48))
Assertion list is infeasible!
Unsat core:
(assum4 assum6)
Rule not applicable as written for rule assumptions, skipping full query
