term {
	name = ty_shift_mask
	bindings = [
		0: Type	argument(0)
		1: Type	constructor(lane_type, [0], 0)
		2: u8	constructor(ty_bits, [1], 0)
		3: u64	constructor(u8_as_u64, [2], 0)
		4: u64	const_int(1, u64)
		5: u64	constructor(u64_sub, [3, 4], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude.isle line 323
			constraints = [
			]
			prio = 0
			result = 5
		}
	]
}
term {
	name = is_ref_type
	bindings = [
		0: Type	argument(0)
		1: bool	const_prim(true)
		2: bool	const_prim(false)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude.isle line 330
			constraints = [
				0:	const_prim(R32)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/prelude.isle line 331
			constraints = [
				0:	const_prim(R64)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/prelude.isle line 332
			constraints = [
			]
			prio = 0
			result = 2
		}
	]
}
term {
	name = output_reg
	bindings = [
		0: Reg	argument(0)
		1: ValueRegs	constructor(value_reg, [0], 1)
		2: InstOutput	constructor(output, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 73
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = output_value
	bindings = [
		0: Value	argument(0)
		1: ValueRegs	constructor(put_in_regs, [0], 1)
		2: InstOutput	constructor(output, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 77
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = temp_reg
	bindings = [
		0: Type	argument(0)
		1: WritableReg	constructor(temp_writable_reg, [0], 1)
		2: Reg	constructor(writable_reg_to_reg, [1], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 97
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = value_regs_range
	bindings = [
		0: ValueRegs	argument(0)
		1: usize	const_int(0, usize)
		2: usize	constructor(value_regs_len, [0], 0)
		3: Range	constructor(range, [1, 2], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 146
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = lo_reg
	bindings = [
		0: Value	argument(0)
		1: ValueRegs	constructor(put_in_regs, [0], 1)
		2: usize	const_int(0, usize)
		3: Reg	constructor(value_regs_get, [1, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 157
			constraints = [
			]
			prio = 0
			result = 3
			impure = [1, 3]
		}
	]
}
term {
	name = multi_reg_to_pair_and_single
	bindings = [
		0: MultiReg	argument(0)
		1: Reg	match_variant(0, MultiReg::Three, a)
		2: Reg	match_variant(0, MultiReg::Three, b)
		3: Reg	match_variant(0, MultiReg::Three, c)
		4: ValueRegs	constructor(value_regs, [1, 2], 1)
		5: ValueRegs	constructor(value_reg, [3], 2)
		6: InstOutput	constructor(output_pair, [4, 5], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 168
			constraints = [
				0:	variant(MultiReg::Three)
			]
			prio = 0
			result = 6
			impure = [4, 5, 6]
		}
	]
}
term {
	name = multi_reg_to_pair
	bindings = [
		0: MultiReg	argument(0)
		1: Reg	match_variant(0, MultiReg::Two, a)
		2: Reg	match_variant(0, MultiReg::Two, b)
		3: ValueRegs	constructor(value_regs, [1, 2], 1)
		4: InstOutput	constructor(output, [3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 173
			constraints = [
				0:	variant(MultiReg::Two)
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = multi_reg_to_single
	bindings = [
		0: MultiReg	argument(0)
		1: Reg	match_variant(0, MultiReg::One, a)
		2: ValueRegs	constructor(value_reg, [1], 1)
		3: InstOutput	constructor(output, [2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 178
			constraints = [
				0:	variant(MultiReg::One)
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
	]
}
term {
	name = emit_side_effect
	bindings = [
		0: SideEffectNoResult	argument(0)
		1: MInst	match_variant(0, SideEffectNoResult::Inst, inst)
		2: Unit	constructor(emit, [1], 1)
		3: MInst	match_variant(0, SideEffectNoResult::Inst2, inst1)
		4: MInst	match_variant(0, SideEffectNoResult::Inst2, inst2)
		5: Unit	constructor(emit, [3], 1)
		6: Unit	constructor(emit, [4], 2)
		7: MInst	match_variant(0, SideEffectNoResult::Inst3, inst1)
		8: MInst	match_variant(0, SideEffectNoResult::Inst3, inst2)
		9: MInst	match_variant(0, SideEffectNoResult::Inst3, inst3)
		10: Unit	constructor(emit, [7], 1)
		11: Unit	constructor(emit, [8], 2)
		12: Unit	constructor(emit, [9], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 367
			constraints = [
				0:	variant(SideEffectNoResult::Inst)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 369
			constraints = [
				0:	variant(SideEffectNoResult::Inst2)
			]
			prio = 0
			result = 6
			impure = [5, 6]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 372
			constraints = [
				0:	variant(SideEffectNoResult::Inst3)
			]
			prio = 0
			result = 12
			impure = [10, 11, 12]
		}
	]
}
term {
	name = side_effect
	bindings = [
		0: SideEffectNoResult	argument(0)
		1: Unit	constructor(emit_side_effect, [0], 1)
		2: InstOutput	constructor(output_none, [], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 380
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = side_effect_concat
	bindings = [
		0: SideEffectNoResult	argument(0)
		1: MInst	match_variant(0, SideEffectNoResult::Inst, inst)
		2: SideEffectNoResult	argument(1)
		3: MInst	match_variant(2, SideEffectNoResult::Inst, inst)
		4: SideEffectNoResult	make_variant(SideEffectNoResult::Inst2, [1, 3])
		5: MInst	match_variant(2, SideEffectNoResult::Inst2, inst1)
		6: MInst	match_variant(2, SideEffectNoResult::Inst2, inst2)
		7: SideEffectNoResult	make_variant(SideEffectNoResult::Inst3, [1, 5, 6])
		8: MInst	match_variant(0, SideEffectNoResult::Inst2, inst1)
		9: MInst	match_variant(0, SideEffectNoResult::Inst2, inst2)
		10: SideEffectNoResult	make_variant(SideEffectNoResult::Inst3, [8, 9, 3])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 385
			constraints = [
				0:	variant(SideEffectNoResult::Inst)
				2:	variant(SideEffectNoResult::Inst)
			]
			prio = 0
			result = 4
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 387
			constraints = [
				0:	variant(SideEffectNoResult::Inst)
				2:	variant(SideEffectNoResult::Inst2)
			]
			prio = 0
			result = 7
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 389
			constraints = [
				0:	variant(SideEffectNoResult::Inst2)
				2:	variant(SideEffectNoResult::Inst)
			]
			prio = 0
			result = 10
		}
	]
}
term {
	name = produces_flags_concat
	bindings = [
		0: ProducesFlags	argument(0)
		1: MInst	match_variant(0, ProducesFlags::ProducesFlagsSideEffect, inst)
		2: ProducesFlags	argument(1)
		3: MInst	match_variant(2, ProducesFlags::ProducesFlagsSideEffect, inst)
		4: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsTwiceSideEffect, [1, 3])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 414
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ProducesFlags::ProducesFlagsSideEffect)
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = produces_flags_get_reg
	bindings = [
		0: ProducesFlags	argument(0)
		1: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, inst)
		2: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, result)
		3: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, inst)
		4: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, result)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 444
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
			]
			prio = 0
			result = 2
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 445
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = produces_flags_ignore
	bindings = [
		0: ProducesFlags	argument(0)
		1: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, inst)
		2: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, result)
		3: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [1])
		4: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, inst)
		5: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, result)
		6: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 450
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
			]
			prio = 0
			result = 3
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 452
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
			]
			prio = 0
			result = 6
		}
	]
}
term {
	name = consumes_flags_concat
	bindings = [
		0: ConsumesFlags	argument(0)
		1: MInst	match_variant(0, ConsumesFlags::ConsumesFlagsReturnsReg, inst)
		2: Reg	match_variant(0, ConsumesFlags::ConsumesFlagsReturnsReg, result)
		3: ConsumesFlags	argument(1)
		4: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsReg, inst)
		5: Reg	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsReg, result)
		6: ValueRegs	constructor(value_regs, [2, 5], 1)
		7: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, [1, 4, 6])
		8: MInst	match_variant(0, ConsumesFlags::ConsumesFlagsSideEffect, inst)
		9: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsSideEffect, inst)
		10: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect2, [8, 9])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 459
			constraints = [
				0:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
				3:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 7
			impure = [6]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 465
			constraints = [
				0:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 10
		}
	]
}
term {
	name = with_flags
	bindings = [
		0: ProducesFlags	argument(0)
		1: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, inst)
		2: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, result)
		3: ConsumesFlags	argument(1)
		4: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, inst)
		5: Reg	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, result)
		6: Unit	constructor(emit, [1], 1)
		7: Unit	constructor(emit, [4], 2)
		8: ValueRegs	constructor(value_regs, [2, 5], 3)
		9: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsSideEffect, inst)
		10: Unit	constructor(emit, [9], 2)
		11: ValueRegs	constructor(value_reg, [2], 3)
		12: MInst	match_variant(0, ProducesFlags::ProducesFlagsSideEffect, inst)
		13: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsReg, inst)
		14: Reg	match_variant(3, ConsumesFlags::ConsumesFlagsReturnsReg, result)
		15: Unit	constructor(emit, [12], 1)
		16: Unit	constructor(emit, [13], 2)
		17: ValueRegs	constructor(value_reg, [14], 3)
		18: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, inst1)
		19: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, inst2)
		20: ValueRegs	match_variant(3, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, result)
		21: Unit	constructor(emit, [18], 2)
		22: Unit	constructor(emit, [19], 3)
		23: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst1)
		24: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst2)
		25: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst3)
		26: MInst	match_variant(3, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst4)
		27: ValueRegs	match_variant(3, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, result)
		28: Unit	constructor(emit, [23], 2)
		29: Unit	constructor(emit, [24], 3)
		30: Unit	constructor(emit, [25], 4)
		31: Unit	constructor(emit, [26], 5)
		32: MInst	match_variant(0, ProducesFlags::ProducesFlagsTwiceSideEffect, inst1)
		33: MInst	match_variant(0, ProducesFlags::ProducesFlagsTwiceSideEffect, inst2)
		34: Unit	constructor(emit, [32], 1)
		35: Unit	constructor(emit, [33], 2)
		36: Unit	constructor(emit, [13], 3)
		37: ValueRegs	constructor(value_reg, [14], 4)
		38: Unit	constructor(emit, [18], 3)
		39: Unit	constructor(emit, [19], 4)
		40: Unit	constructor(emit, [23], 3)
		41: Unit	constructor(emit, [24], 4)
		42: Unit	constructor(emit, [25], 5)
		43: Unit	constructor(emit, [26], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 482
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				3:	variant(ConsumesFlags::ConsumesFlagsReturnsResultWithProducer)
			]
			prio = 0
			result = 8
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 490
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				3:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 11
			impure = [6, 10, 11]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 496
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 17
			impure = [15, 16, 17]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 502
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 20
			impure = [15, 21, 22]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 514
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 27
			impure = [15, 28, 29, 30, 31]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 530
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsTwiceSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 37
			impure = [34, 35, 36, 37]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 537
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsTwiceSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 20
			impure = [34, 35, 38, 39]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 550
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsTwiceSideEffect)
				3:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 27
			impure = [34, 35, 40, 41, 42, 43]
		}
	]
}
term {
	name = with_flags_reg
	bindings = [
		0: ProducesFlags	argument(0)
		1: ConsumesFlags	argument(1)
		2: ValueRegs	constructor(with_flags, [0, 1], 1)
		3: usize	const_int(0, usize)
		4: Reg	constructor(value_regs_get, [2, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 568
			constraints = [
			]
			prio = 0
			result = 4
			impure = [2, 4]
		}
	]
}
term {
	name = flags_to_producesflags
	bindings = [
		0: Value	argument(0)
		1: Unit	constructor(mark_value_used, [0], 1)
		2: ProducesFlags	make_variant(ProducesFlags::AlreadyExistingFlags, [])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 575
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = with_flags_side_effect
	bindings = [
		0: ProducesFlags	argument(0)
		1: ConsumesFlags	argument(1)
		2: MInst	match_variant(1, ConsumesFlags::ConsumesFlagsSideEffect, inst)
		3: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [2])
		4: MInst	match_variant(1, ConsumesFlags::ConsumesFlagsSideEffect2, inst1)
		5: MInst	match_variant(1, ConsumesFlags::ConsumesFlagsSideEffect2, inst2)
		6: SideEffectNoResult	make_variant(SideEffectNoResult::Inst2, [4, 5])
		7: MInst	match_variant(0, ProducesFlags::ProducesFlagsSideEffect, inst)
		8: SideEffectNoResult	make_variant(SideEffectNoResult::Inst2, [7, 2])
		9: SideEffectNoResult	make_variant(SideEffectNoResult::Inst3, [7, 4, 5])
		10: MInst	match_variant(0, ProducesFlags::ProducesFlagsTwiceSideEffect, inst1)
		11: MInst	match_variant(0, ProducesFlags::ProducesFlagsTwiceSideEffect, inst2)
		12: SideEffectNoResult	make_variant(SideEffectNoResult::Inst3, [10, 11, 2])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 586
			constraints = [
				0:	variant(ProducesFlags::AlreadyExistingFlags)
				1:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 3
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 591
			constraints = [
				0:	variant(ProducesFlags::AlreadyExistingFlags)
				1:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 6
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 596
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				1:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 8
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 601
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				1:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 606
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsTwiceSideEffect)
				1:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 12
		}
	]
}
term {
	name = with_flags_chained
	bindings = [
		0: ProducesFlags	argument(0)
		1: MInst	match_variant(0, ProducesFlags::ProducesFlagsSideEffect, inst)
		2: ConsumesAndProducesFlags	argument(1)
		3: MInst	match_variant(2, ConsumesAndProducesFlags::SideEffect, inst)
		4: ConsumesFlags	argument(2)
		5: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsSideEffect, inst)
		6: Unit	constructor(emit, [1], 1)
		7: Unit	constructor(emit, [3], 2)
		8: Unit	constructor(emit, [5], 3)
		9: MultiReg	make_variant(MultiReg::Empty, [])
		10: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsSideEffect2, inst1)
		11: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsSideEffect2, inst2)
		12: Unit	constructor(emit, [10], 3)
		13: Unit	constructor(emit, [11], 4)
		14: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsReturnsReg, inst)
		15: Reg	match_variant(4, ConsumesFlags::ConsumesFlagsReturnsReg, result)
		16: Unit	constructor(emit, [14], 3)
		17: MultiReg	make_variant(MultiReg::One, [15])
		18: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, inst1)
		19: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, inst2)
		20: ValueRegs	match_variant(4, ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, result)
		21: Unit	constructor(emit, [18], 3)
		22: Unit	constructor(emit, [19], 4)
		23: usize	const_int(0, usize)
		24: Reg	constructor(value_regs_get, [20, 23], 5)
		25: usize	const_int(1, usize)
		26: Reg	constructor(value_regs_get, [20, 25], 6)
		27: MultiReg	make_variant(MultiReg::Two, [24, 26])
		28: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst1)
		29: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst2)
		30: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst3)
		31: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, inst4)
		32: ValueRegs	match_variant(4, ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, result)
		33: Unit	constructor(emit, [28], 3)
		34: Unit	constructor(emit, [29], 4)
		35: Unit	constructor(emit, [30], 5)
		36: Unit	constructor(emit, [31], 6)
		37: Reg	constructor(value_regs_get, [32, 23], 7)
		38: Reg	constructor(value_regs_get, [32, 25], 8)
		39: MultiReg	make_variant(MultiReg::Two, [37, 38])
		40: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, inst)
		41: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsReg, result)
		42: Unit	constructor(emit, [40], 1)
		43: MultiReg	make_variant(MultiReg::One, [41])
		44: MultiReg	make_variant(MultiReg::Two, [41, 15])
		45: MultiReg	make_variant(MultiReg::Three, [41, 24, 26])
		46: MultiReg	make_variant(MultiReg::Three, [41, 37, 38])
		47: MInst	match_variant(2, ConsumesAndProducesFlags::ReturnsReg, inst)
		48: Reg	match_variant(2, ConsumesAndProducesFlags::ReturnsReg, result)
		49: Unit	constructor(emit, [47], 2)
		50: MultiReg	make_variant(MultiReg::One, [48])
		51: MultiReg	make_variant(MultiReg::Two, [48, 15])
		52: MultiReg	make_variant(MultiReg::Three, [48, 24, 26])
		53: MultiReg	make_variant(MultiReg::Three, [48, 37, 38])
		54: MultiReg	make_variant(MultiReg::Two, [41, 48])
		55: MultiReg	make_variant(MultiReg::Three, [41, 48, 15])
		56: MultiReg	make_variant(MultiReg::Four, [41, 48, 24, 26])
		57: MultiReg	make_variant(MultiReg::Four, [41, 48, 37, 38])
		58: MInst	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, inst)
		59: Reg	match_variant(0, ProducesFlags::ProducesFlagsReturnsResultWithConsumer, result)
		60: Unit	constructor(emit, [58], 1)
		61: MultiReg	make_variant(MultiReg::Two, [59, 48])
		62: MultiReg	make_variant(MultiReg::Three, [59, 48, 15])
		63: MInst	match_variant(4, ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, inst)
		64: Reg	match_variant(4, ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, result)
		65: Unit	constructor(emit, [63], 3)
		66: MultiReg	make_variant(MultiReg::Three, [59, 48, 64])
		67: MultiReg	make_variant(MultiReg::Four, [59, 48, 24, 26])
		68: MultiReg	make_variant(MultiReg::Four, [59, 48, 37, 38])
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 615
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 9
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 623
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 9
			impure = [6, 7, 12, 13]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 632
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 17
			impure = [6, 7, 16]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 640
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 27
			impure = [6, 7, 21, 22, 24, 26]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 649
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 39
			impure = [6, 7, 33, 34, 35, 36, 37, 38]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 662
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 43
			impure = [42, 7, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 670
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 43
			impure = [42, 7, 12, 13]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 679
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 44
			impure = [42, 7, 16]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 687
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 45
			impure = [42, 7, 21, 22, 24, 26]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 696
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::SideEffect)
				4:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 46
			impure = [42, 7, 33, 34, 35, 36, 37, 38]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 709
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 50
			impure = [6, 49, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 717
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 50
			impure = [6, 49, 12, 13]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 726
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 51
			impure = [6, 49, 16]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 734
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 52
			impure = [6, 49, 21, 22, 24, 26]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 743
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsSideEffect)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 53
			impure = [6, 49, 33, 34, 35, 36, 37, 38]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 756
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 54
			impure = [42, 49, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 764
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 54
			impure = [42, 49, 12, 13]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 773
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 55
			impure = [42, 49, 16]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 781
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 56
			impure = [42, 49, 21, 22, 24, 26]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 790
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsReg)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 57
			impure = [42, 49, 33, 34, 35, 36, 37, 38]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 802
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect)
			]
			prio = 0
			result = 61
			impure = [60, 49, 8]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 810
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsSideEffect2)
			]
			prio = 0
			result = 61
			impure = [60, 49, 12, 13]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 819
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsReg)
			]
			prio = 0
			result = 62
			impure = [60, 49, 16]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 827
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsReturnsResultWithProducer)
			]
			prio = 0
			result = 66
			impure = [60, 49, 65]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 835
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs)
			]
			prio = 0
			result = 67
			impure = [60, 49, 21, 22, 24, 26]
		}
		{
			pos = ../../codegen/src/prelude_lower.isle line 844
			constraints = [
				0:	variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer)
				2:	variant(ConsumesAndProducesFlags::ReturnsReg)
				4:	variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs)
			]
			prio = 0
			result = 68
			impure = [60, 49, 33, 34, 35, 36, 37, 38]
		}
	]
}
term {
	name = lower_return
	bindings = [
		0: ValueSlice	argument(0)
		1: Unit	constructor(gen_return, [0], 1)
		2: InstOutput	constructor(output_none, [], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/prelude_lower.isle line 1044
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = operand_size_bits
	bindings = [
		0: OperandSize	argument(0)
		1: u16	const_int(8, u16)
		2: u16	const_int(16, u16)
		3: u16	const_int(32, u16)
		4: u16	const_int(64, u16)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 764
			constraints = [
				0:	variant(OperandSize::Size8)
			]
			prio = 0
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 765
			constraints = [
				0:	variant(OperandSize::Size16)
			]
			prio = 0
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 766
			constraints = [
				0:	variant(OperandSize::Size32)
			]
			prio = 0
			result = 3
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 767
			constraints = [
				0:	variant(OperandSize::Size64)
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = reg_mem_to_reg_mem_imm
	bindings = [
		0: RegMem	argument(0)
		1: Reg	match_variant(0, RegMem::Reg, reg)
		2: RegMemImm	make_variant(RegMemImm::Reg, [1])
		3: SyntheticAmode	match_variant(0, RegMem::Mem, addr)
		4: RegMemImm	make_variant(RegMemImm::Mem, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1018
			constraints = [
				0:	variant(RegMem::Reg)
			]
			prio = 0
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1020
			constraints = [
				0:	variant(RegMem::Mem)
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = to_amode
	bindings = [
		0: MemFlags	argument(0)
		1: Value	argument(1)
		2: Offset32	argument(2)
		3: Amode	constructor(amode_imm_reg, [0, 1, 2], 1)
		4: Option(Inst)	extractor(def_inst, 1)
		5: Inst	match_some(4)
		6: InstructionData	extractor(inst_data, 5)
		7: Opcode	match_variant(6, InstructionData::Binary, opcode)
		8: ValueArray2	match_variant(6, InstructionData::Binary, args)
		9: (Value, Value)	extractor(value_array_2, 8)
		10: Value	match_tuple(9, 0)
		11: Value	match_tuple(9, 1)
		12: Amode	constructor(to_amode_add, [0, 10, 11, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1104
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1106
			constraints = [
				4:	some
				6:	variant(InstructionData::Binary)
				7:	variant(Opcode::Iadd)
			]
			prio = 1
			result = 12
			impure = [12]
		}
	]
}
term {
	name = to_amode_add
	bindings = [
		0: MemFlags	argument(0)
		1: Value	argument(1)
		2: Value	argument(2)
		3: Offset32	argument(3)
		4: Amode	constructor(amode_imm_reg_reg_shift, [0, 1, 2, 3], 1)
		5: Option(Inst)	extractor(def_inst, 2)
		6: Inst	match_some(5)
		7: InstructionData	extractor(inst_data, 6)
		8: Opcode	match_variant(7, InstructionData::UnaryImm, opcode)
		9: Imm64	match_variant(7, InstructionData::UnaryImm, imm)
		10: Option(i32)	extractor(simm32, 9)
		11: i32	match_some(10)
		12: i32	constructor(offset32_to_i32, [3], 0)
		13: Option(i32)	constructor(s32_add_fallible, [12, 11], 0)
		14: i32	match_some(13)
		15: Offset32	constructor(i32_to_offset32, [14], 0)
		16: Amode	constructor(amode_imm_reg, [0, 1, 15], 1)
		17: Option(Inst)	extractor(def_inst, 1)
		18: Inst	match_some(17)
		19: InstructionData	extractor(inst_data, 18)
		20: Opcode	match_variant(19, InstructionData::UnaryImm, opcode)
		21: Imm64	match_variant(19, InstructionData::UnaryImm, imm)
		22: Option(i32)	extractor(simm32, 21)
		23: i32	match_some(22)
		24: Option(i32)	constructor(s32_add_fallible, [12, 23], 0)
		25: i32	match_some(24)
		26: Offset32	constructor(i32_to_offset32, [25], 0)
		27: Amode	constructor(amode_imm_reg, [0, 2, 26], 1)
		28: Opcode	match_variant(19, InstructionData::Binary, opcode)
		29: ValueArray2	match_variant(19, InstructionData::Binary, args)
		30: (Value, Value)	extractor(value_array_2, 29)
		31: Value	match_tuple(30, 0)
		32: Value	match_tuple(30, 1)
		33: Option(Inst)	extractor(def_inst, 32)
		34: Inst	match_some(33)
		35: InstructionData	extractor(inst_data, 34)
		36: Opcode	match_variant(35, InstructionData::UnaryImm, opcode)
		37: Imm64	match_variant(35, InstructionData::UnaryImm, imm)
		38: Option(i32)	extractor(simm32, 37)
		39: i32	match_some(38)
		40: Option(i32)	constructor(s32_add_fallible, [12, 39], 0)
		41: i32	match_some(40)
		42: Offset32	constructor(i32_to_offset32, [41], 0)
		43: Amode	constructor(amode_imm_reg_reg_shift, [0, 31, 2, 42], 1)
		44: Option(Inst)	extractor(def_inst, 31)
		45: Inst	match_some(44)
		46: InstructionData	extractor(inst_data, 45)
		47: Opcode	match_variant(46, InstructionData::UnaryImm, opcode)
		48: Imm64	match_variant(46, InstructionData::UnaryImm, imm)
		49: Option(i32)	extractor(simm32, 48)
		50: i32	match_some(49)
		51: Option(i32)	constructor(s32_add_fallible, [12, 50], 0)
		52: i32	match_some(51)
		53: Offset32	constructor(i32_to_offset32, [52], 0)
		54: Amode	constructor(amode_imm_reg_reg_shift, [0, 32, 2, 53], 1)
		55: Opcode	match_variant(7, InstructionData::Binary, opcode)
		56: ValueArray2	match_variant(7, InstructionData::Binary, args)
		57: (Value, Value)	extractor(value_array_2, 56)
		58: Value	match_tuple(57, 0)
		59: Value	match_tuple(57, 1)
		60: Option(Inst)	extractor(def_inst, 59)
		61: Inst	match_some(60)
		62: InstructionData	extractor(inst_data, 61)
		63: Opcode	match_variant(62, InstructionData::UnaryImm, opcode)
		64: Imm64	match_variant(62, InstructionData::UnaryImm, imm)
		65: Option(i32)	extractor(simm32, 64)
		66: i32	match_some(65)
		67: Option(i32)	constructor(s32_add_fallible, [12, 66], 0)
		68: i32	match_some(67)
		69: Offset32	constructor(i32_to_offset32, [68], 0)
		70: Amode	constructor(amode_imm_reg_reg_shift, [0, 1, 58, 69], 1)
		71: Option(Inst)	extractor(def_inst, 58)
		72: Inst	match_some(71)
		73: InstructionData	extractor(inst_data, 72)
		74: Opcode	match_variant(73, InstructionData::UnaryImm, opcode)
		75: Imm64	match_variant(73, InstructionData::UnaryImm, imm)
		76: Option(i32)	extractor(simm32, 75)
		77: i32	match_some(76)
		78: Option(i32)	constructor(s32_add_fallible, [12, 77], 0)
		79: i32	match_some(78)
		80: Offset32	constructor(i32_to_offset32, [79], 0)
		81: Amode	constructor(amode_imm_reg_reg_shift, [0, 1, 59, 80], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1122
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1124
			constraints = [
				5:	some
				7:	variant(InstructionData::UnaryImm)
				8:	variant(Opcode::Iconst)
				10:	some
				13:	some
			]
			prio = 1
			result = 16
			impure = [16]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1127
			constraints = [
				17:	some
				19:	variant(InstructionData::UnaryImm)
				20:	variant(Opcode::Iconst)
				22:	some
				24:	some
			]
			prio = 2
			result = 27
			impure = [27]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1130
			constraints = [
				17:	some
				19:	variant(InstructionData::Binary)
				28:	variant(Opcode::Iadd)
				33:	some
				35:	variant(InstructionData::UnaryImm)
				36:	variant(Opcode::Iconst)
				38:	some
				40:	some
			]
			prio = 3
			result = 43
			impure = [43]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1133
			constraints = [
				17:	some
				19:	variant(InstructionData::Binary)
				28:	variant(Opcode::Iadd)
				44:	some
				46:	variant(InstructionData::UnaryImm)
				47:	variant(Opcode::Iconst)
				49:	some
				51:	some
			]
			prio = 4
			result = 54
			impure = [54]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1136
			constraints = [
				5:	some
				7:	variant(InstructionData::Binary)
				55:	variant(Opcode::Iadd)
				60:	some
				62:	variant(InstructionData::UnaryImm)
				63:	variant(Opcode::Iconst)
				65:	some
				67:	some
			]
			prio = 5
			result = 70
			impure = [70]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1139
			constraints = [
				5:	some
				7:	variant(InstructionData::Binary)
				55:	variant(Opcode::Iadd)
				71:	some
				73:	variant(InstructionData::UnaryImm)
				74:	variant(Opcode::Iconst)
				76:	some
				78:	some
			]
			prio = 6
			result = 81
			impure = [81]
		}
	]
}
term {
	name = amode_imm_reg
	bindings = [
		0: MemFlags	argument(0)
		1: Value	argument(1)
		2: Offset32	argument(2)
		3: i32	constructor(offset32_to_i32, [2], 0)
		4: Reg	constructor(put_in_reg, [1], 1)
		5: Amode	make_variant(Amode::ImmReg, [3, 4, 0])
		6: Option(Inst)	extractor(def_inst, 1)
		7: Inst	match_some(6)
		8: InstructionData	extractor(inst_data, 7)
		9: Opcode	match_variant(8, InstructionData::Binary, opcode)
		10: ValueArray2	match_variant(8, InstructionData::Binary, args)
		11: (Value, Value)	extractor(value_array_2, 10)
		12: Value	match_tuple(11, 0)
		13: Value	match_tuple(11, 1)
		14: Amode	constructor(amode_imm_reg_reg_shift, [0, 12, 13, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1147
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1149
			constraints = [
				6:	some
				8:	variant(InstructionData::Binary)
				9:	variant(Opcode::Iadd)
			]
			prio = 1
			result = 14
			impure = [14]
		}
	]
}
term {
	name = amode_imm_reg_reg_shift
	bindings = [
		0: MemFlags	argument(0)
		1: Value	argument(1)
		2: Value	argument(2)
		3: Offset32	argument(3)
		4: i32	constructor(offset32_to_i32, [3], 0)
		5: Gpr	constructor(put_in_gpr, [1], 1)
		6: Gpr	constructor(put_in_gpr, [2], 2)
		7: u8	const_int(0, u8)
		8: Amode	make_variant(Amode::ImmRegRegShift, [4, 5, 6, 7, 0])
		9: Option(Inst)	extractor(def_inst, 2)
		10: Inst	match_some(9)
		11: InstructionData	extractor(inst_data, 10)
		12: Opcode	match_variant(11, InstructionData::Binary, opcode)
		13: ValueArray2	match_variant(11, InstructionData::Binary, args)
		14: (Value, Value)	extractor(value_array_2, 13)
		15: Value	match_tuple(14, 0)
		16: Value	match_tuple(14, 1)
		17: Option(Inst)	extractor(def_inst, 16)
		18: Inst	match_some(17)
		19: InstructionData	extractor(inst_data, 18)
		20: Opcode	match_variant(19, InstructionData::UnaryImm, opcode)
		21: Imm64	match_variant(19, InstructionData::UnaryImm, imm)
		22: Option(u8)	extractor(uimm8, 21)
		23: u8	match_some(22)
		24: u32	constructor(u8_as_u32, [23], 0)
		25: u32	const_int(3, u32)
		26: Option(Unit)	constructor(u32_lteq, [24, 25], 0)
		27: Unit	match_some(26)
		28: Gpr	constructor(put_in_gpr, [15], 2)
		29: Amode	make_variant(Amode::ImmRegRegShift, [4, 5, 28, 23, 0])
		30: Option(Inst)	extractor(def_inst, 1)
		31: Inst	match_some(30)
		32: InstructionData	extractor(inst_data, 31)
		33: Opcode	match_variant(32, InstructionData::Binary, opcode)
		34: ValueArray2	match_variant(32, InstructionData::Binary, args)
		35: (Value, Value)	extractor(value_array_2, 34)
		36: Value	match_tuple(35, 0)
		37: Value	match_tuple(35, 1)
		38: Option(Inst)	extractor(def_inst, 37)
		39: Inst	match_some(38)
		40: InstructionData	extractor(inst_data, 39)
		41: Opcode	match_variant(40, InstructionData::UnaryImm, opcode)
		42: Imm64	match_variant(40, InstructionData::UnaryImm, imm)
		43: Option(u8)	extractor(uimm8, 42)
		44: u8	match_some(43)
		45: u32	constructor(u8_as_u32, [44], 0)
		46: Option(Unit)	constructor(u32_lteq, [45, 25], 0)
		47: Unit	match_some(46)
		48: Gpr	constructor(put_in_gpr, [2], 1)
		49: Gpr	constructor(put_in_gpr, [36], 2)
		50: Amode	make_variant(Amode::ImmRegRegShift, [4, 48, 49, 44, 0])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1153
			constraints = [
			]
			prio = 0
			result = 8
			impure = [5, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1155
			constraints = [
				9:	some
				11:	variant(InstructionData::Binary)
				12:	variant(Opcode::Ishl)
				17:	some
				19:	variant(InstructionData::UnaryImm)
				20:	variant(Opcode::Iconst)
				22:	some
				26:	some
			]
			prio = 1
			result = 29
			impure = [5, 28]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1158
			constraints = [
				30:	some
				32:	variant(InstructionData::Binary)
				33:	variant(Opcode::Ishl)
				38:	some
				40:	variant(InstructionData::UnaryImm)
				41:	variant(Opcode::Iconst)
				43:	some
				46:	some
			]
			prio = 2
			result = 50
			impure = [48, 49]
		}
	]
}
term {
	name = put_masked_in_imm8_gpr
	bindings = [
		0: Value	argument(0)
		1: Option(Inst)	extractor(def_inst, 0)
		2: Inst	match_some(1)
		3: InstructionData	extractor(inst_data, 2)
		4: Opcode	match_variant(3, InstructionData::UnaryImm, opcode)
		5: Imm64	match_variant(3, InstructionData::UnaryImm, imm)
		6: u64	extractor(u64_from_imm64, 5)
		7: Type	argument(1)
		8: Imm8Gpr	constructor(const_to_type_masked_imm8, [6, 7], 1)
		9: Option(Type)	extractor(fits_in_16, 7)
		10: Type	match_some(9)
		11: Type	const_prim(I64)
		12: ValueRegs	constructor(put_in_regs, [0], 1)
		13: usize	const_int(0, usize)
		14: Gpr	constructor(value_regs_get_gpr, [12, 13], 2)
		15: u8	constructor(shift_mask, [10], 3)
		16: u32	constructor(u8_as_u32, [15], 0)
		17: RegMemImm	make_variant(RegMemImm::Imm, [16])
		18: GprMemImm	constructor(gpr_mem_imm_new, [17], 4)
		19: Gpr	constructor(x64_and, [11, 14, 18], 5)
		20: Imm8Gpr	constructor(gpr_to_imm8_gpr, [19], 6)
		21: Imm8Gpr	constructor(gpr_to_imm8_gpr, [14], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1194
			constraints = [
				1:	some
				3:	variant(InstructionData::UnaryImm)
				4:	variant(Opcode::Iconst)
			]
			prio = 2
			result = 8
			impure = [8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1196
			constraints = [
				9:	some
			]
			prio = 1
			result = 20
			impure = [12, 14, 15, 18, 19, 20]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1198
			constraints = [
			]
			prio = 0
			result = 21
			impure = [12, 14, 21]
		}
	]
}
term {
	name = reg_to_gpr_mem_imm
	bindings = [
		0: Reg	argument(0)
		1: Gpr	constructor(gpr_new, [0], 1)
		2: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1618
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = put_in_gpr
	bindings = [
		0: Value	argument(0)
		1: Reg	constructor(put_in_reg, [0], 1)
		2: Gpr	constructor(gpr_new, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1625
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = put_in_gpr_mem
	bindings = [
		0: Value	argument(0)
		1: RegMem	constructor(put_in_reg_mem, [0], 1)
		2: GprMem	constructor(reg_mem_to_gpr_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1632
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = put_in_gpr_mem_imm
	bindings = [
		0: Value	argument(0)
		1: RegMemImm	constructor(put_in_reg_mem_imm, [0], 1)
		2: GprMemImm	constructor(gpr_mem_imm_new, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1639
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = put_in_xmm
	bindings = [
		0: Value	argument(0)
		1: Reg	constructor(put_in_reg, [0], 1)
		2: Xmm	constructor(xmm_new, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1646
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = output_gpr
	bindings = [
		0: Gpr	argument(0)
		1: Reg	constructor(gpr_to_reg, [0], 1)
		2: InstOutput	constructor(output_reg, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1663
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = value_gprs
	bindings = [
		0: Gpr	argument(0)
		1: Gpr	argument(1)
		2: Reg	constructor(gpr_to_reg, [0], 1)
		3: Reg	constructor(gpr_to_reg, [1], 2)
		4: ValueRegs	constructor(value_regs, [2, 3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1668
			constraints = [
			]
			prio = 0
			result = 4
			impure = [2, 3, 4]
		}
	]
}
term {
	name = output_xmm
	bindings = [
		0: Xmm	argument(0)
		1: Reg	constructor(xmm_to_reg, [0], 1)
		2: InstOutput	constructor(output_reg, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1673
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = value_regs_get_gpr
	bindings = [
		0: ValueRegs	argument(0)
		1: usize	argument(1)
		2: Reg	constructor(value_regs_get, [0, 1], 1)
		3: Gpr	constructor(gpr_new, [2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1680
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
	]
}
term {
	name = lo_gpr
	bindings = [
		0: Value	argument(0)
		1: Reg	constructor(lo_reg, [0], 1)
		2: Gpr	constructor(gpr_new, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1693
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = sink_load_to_gpr_mem_imm
	bindings = [
		0: SinkableLoad	argument(0)
		1: RegMemImm	constructor(sink_load_to_reg_mem_imm, [0], 1)
		2: GprMemImm	constructor(gpr_mem_imm_new, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1824
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = sink_load_to_xmm_mem
	bindings = [
		0: SinkableLoad	argument(0)
		1: RegMem	constructor(sink_load_to_reg_mem, [0], 1)
		2: XmmMem	constructor(reg_mem_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1828
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = sink_load_to_reg_mem
	bindings = [
		0: SinkableLoad	argument(0)
		1: SyntheticAmode	constructor(sink_load, [0], 1)
		2: RegMem	make_variant(RegMem::Mem, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1832
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = sink_load_to_gpr_mem
	bindings = [
		0: SinkableLoad	argument(0)
		1: SyntheticAmode	constructor(sink_load, [0], 1)
		2: RegMem	make_variant(RegMem::Mem, [1])
		3: GprMem	constructor(reg_mem_to_gpr_mem, [2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1835
			constraints = [
			]
			prio = 0
			result = 3
			impure = [1, 3]
		}
	]
}
term {
	name = sink_load_to_reg_mem_imm
	bindings = [
		0: SinkableLoad	argument(0)
		1: SyntheticAmode	constructor(sink_load, [0], 1)
		2: RegMemImm	make_variant(RegMemImm::Mem, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1838
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = xmm_uninit_value
	bindings = [
		0: WritableXmm	constructor(temp_writable_xmm, [], 1)
		1: MInst	make_variant(MInst::XmmUninitializedValue, [0])
		2: Unit	constructor(emit, [1], 2)
		3: Xmm	constructor(writable_xmm_to_xmm, [0], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1850
			constraints = [
			]
			prio = 0
			result = 3
			impure = [0, 2, 3]
		}
	]
}
term {
	name = load_ext_name
	bindings = [
		0: ExternalName	argument(0)
		1: i64	argument(1)
		2: RelocDistance	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: WritableReg	constructor(writable_gpr_to_reg, [3], 2)
		5: BoxExternalName	constructor(box_external_name, [0], 3)
		6: MInst	make_variant(MInst::LoadExtName, [4, 5, 1, 2])
		7: Unit	constructor(emit, [6], 4)
		8: Reg	constructor(writable_gpr_to_r_reg, [3], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1857
			constraints = [
			]
			prio = 0
			result = 8
			impure = [3, 4, 5, 7, 8]
		}
	]
}
term {
	name = mov64_mr
	bindings = [
		0: SyntheticAmode	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::Mov64MR, [0, 1])
		3: Unit	constructor(emit, [2], 2)
		4: Reg	constructor(writable_gpr_to_r_reg, [1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1864
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3, 4]
		}
	]
}
term {
	name = alu_rmi_r
	bindings = [
		0: Type	argument(0)
		1: AluRmiROpcode	argument(1)
		2: Gpr	argument(2)
		3: GprMemImm	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		6: MInst	make_variant(MInst::AluRmiR, [5, 1, 2, 3, 4])
		7: Unit	constructor(emit, [6], 3)
		8: Gpr	constructor(writable_gpr_to_gpr, [4], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1871
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 5, 7, 8]
		}
	]
}
term {
	name = alu_rm_r_vex
	bindings = [
		0: Type	argument(0)
		1: AluRmROpcode	argument(1)
		2: Gpr	argument(2)
		3: GprMem	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		6: MInst	make_variant(MInst::AluRmRVex, [5, 1, 2, 3, 4])
		7: Unit	constructor(emit, [6], 3)
		8: Gpr	constructor(writable_gpr_to_gpr, [4], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1879
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 5, 7, 8]
		}
	]
}
term {
	name = xmm_rm_r
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMemAligned	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmRmR, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1887
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_rm_r_unaligned
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmRmRUnaligned, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1894
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_rm_r_blend
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMemAligned	argument(2)
		3: Xmm	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmRmRBlend, [0, 1, 2, 3, 4])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1901
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = xmm_rmr_blend_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmRmRBlendVex, [0, 1, 2, 3, 4])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1908
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = xmm_unary_rm_r_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: XmmMem	argument(1)
		2: WritableXmm	constructor(temp_writable_xmm, [], 1)
		3: MInst	make_variant(MInst::XmmUnaryRmRVex, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Xmm	constructor(writable_xmm_to_xmm, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1915
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = xmm_unary_rm_r_imm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmUnaryRmRImmVex, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1922
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_rm_r_imm
	bindings = [
		0: SseOpcode	argument(0)
		1: Reg	argument(1)
		2: RegMem	argument(2)
		3: u8	argument(3)
		4: OperandSize	argument(4)
		5: WritableXmm	constructor(temp_writable_xmm, [], 1)
		6: WritableReg	constructor(writable_xmm_to_reg, [5], 2)
		7: MInst	make_variant(MInst::XmmRmRImm, [0, 1, 2, 6, 3, 4])
		8: Unit	constructor(emit, [7], 3)
		9: Xmm	constructor(writable_xmm_to_xmm, [5], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1929
			constraints = [
			]
			prio = 0
			result = 9
			impure = [5, 6, 8, 9]
		}
	]
}
term {
	name = xmm_vex_pinsr
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: GprMem	argument(2)
		3: u8	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmVexPinsr, [0, 1, 2, 4, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1941
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = xmm_unary_rm_r_imm
	bindings = [
		0: SseOpcode	argument(0)
		1: XmmMemAligned	argument(1)
		2: u8	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmUnaryRmRImm, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1948
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_unary_rm_r
	bindings = [
		0: SseOpcode	argument(0)
		1: XmmMemAligned	argument(1)
		2: WritableXmm	constructor(temp_writable_xmm, [], 1)
		3: MInst	make_variant(MInst::XmmUnaryRmR, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Xmm	constructor(writable_xmm_to_xmm, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1955
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = xmm_unary_rm_r_unaligned
	bindings = [
		0: SseOpcode	argument(0)
		1: XmmMem	argument(1)
		2: WritableXmm	constructor(temp_writable_xmm, [], 1)
		3: MInst	make_variant(MInst::XmmUnaryRmRUnaligned, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Xmm	constructor(writable_xmm_to_xmm, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1962
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = xmm_unary_rm_r_evex
	bindings = [
		0: Avx512Opcode	argument(0)
		1: XmmMem	argument(1)
		2: WritableXmm	constructor(temp_writable_xmm, [], 1)
		3: MInst	make_variant(MInst::XmmUnaryRmREvex, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Xmm	constructor(writable_xmm_to_xmm, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1969
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = xmm_rm_r_evex
	bindings = [
		0: Avx512Opcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmRmREvex, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1976
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_unary_rm_r_imm_evex
	bindings = [
		0: Avx512Opcode	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmUnaryRmRImmEvex, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1986
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_rmi_xmm
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMemAlignedImm	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmRmiReg, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 1993
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_to_gpr_imm
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::XmmToGprImm, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2003
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_to_gpr_imm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::XmmToGprImmVex, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2010
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = gpr_to_xmm
	bindings = [
		0: SseOpcode	argument(0)
		1: GprMem	argument(1)
		2: OperandSize	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::GprToXmm, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2017
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = gpr_to_xmm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: GprMem	argument(1)
		2: OperandSize	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::GprToXmmVex, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2024
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_to_gpr
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: OperandSize	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::XmmToGpr, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2031
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_to_gpr_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: OperandSize	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::XmmToGprVex, [0, 1, 3, 2])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2038
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_min_max_seq
	bindings = [
		0: Type	argument(0)
		1: bool	argument(1)
		2: Xmm	argument(2)
		3: Xmm	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		6: MInst	make_variant(MInst::XmmMinMaxSeq, [5, 1, 2, 3, 4])
		7: Unit	constructor(emit, [6], 3)
		8: Xmm	constructor(writable_xmm_to_xmm, [4], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2045
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 5, 7, 8]
		}
	]
}
term {
	name = xmm_rmir_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMemImm	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: MInst	make_variant(MInst::XmmRmiRVex, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2053
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = xmm_rmr_imm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: u8	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmRmRImmVex, [0, 1, 2, 4, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2060
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = xmm_rmr_vex3
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: XmmMem	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmRmRVex3, [0, 1, 2, 3, 4])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2067
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = unary_rm_r
	bindings = [
		0: UnaryRmROpcode	argument(0)
		1: Gpr	argument(1)
		2: OperandSize	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: GprMem	constructor(gpr_to_gpr_mem, [1], 2)
		5: MInst	make_variant(MInst::UnaryRmR, [2, 0, 4, 3])
		6: Unit	constructor(emit, [5], 3)
		7: Gpr	constructor(writable_gpr_to_gpr, [3], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2074
			constraints = [
			]
			prio = 0
			result = 7
			impure = [3, 4, 6, 7]
		}
	]
}
term {
	name = unary_rm_r_vex
	bindings = [
		0: UnaryRmRVexOpcode	argument(0)
		1: GprMem	argument(1)
		2: OperandSize	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::UnaryRmRVex, [2, 0, 1, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2081
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = unary_rm_r_imm_vex
	bindings = [
		0: UnaryRmRImmVexOpcode	argument(0)
		1: GprMem	argument(1)
		2: OperandSize	argument(2)
		3: u8	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: MInst	make_variant(MInst::UnaryRmRImmVex, [2, 0, 1, 4, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Gpr	constructor(writable_gpr_to_gpr, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2088
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = cvt_int_to_float
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: GprMem	argument(2)
		3: OperandSize	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::CvtIntToFloat, [0, 1, 2, 4, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2094
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = cvt_int_to_float_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: GprMem	argument(2)
		3: OperandSize	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::CvtIntToFloatVex, [0, 1, 2, 4, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2100
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = cvt_u64_to_float_seq
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		3: WritableXmm	constructor(temp_writable_xmm, [], 2)
		4: WritableGpr	constructor(temp_writable_gpr, [], 3)
		5: WritableGpr	constructor(temp_writable_gpr, [], 4)
		6: MInst	make_variant(MInst::CvtUint64ToFloatSeq, [2, 1, 3, 4, 5])
		7: Unit	constructor(emit, [6], 5)
		8: Xmm	constructor(writable_xmm_to_xmm, [3], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2106
			constraints = [
			]
			prio = 0
			result = 8
			impure = [2, 3, 4, 5, 7, 8]
		}
	]
}
term {
	name = cvt_float_to_uint_seq
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Type	extractor(value_type, 1)
		3: bool	argument(2)
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		5: OperandSize	constructor(raw_operand_size_of_type, [2], 2)
		6: WritableGpr	constructor(temp_writable_gpr, [], 3)
		7: WritableXmm	constructor(temp_writable_xmm, [], 4)
		8: WritableXmm	constructor(temp_writable_xmm, [], 5)
		9: WritableGpr	constructor(temp_writable_gpr, [], 6)
		10: Xmm	constructor(put_in_xmm, [1], 7)
		11: MInst	make_variant(MInst::CvtFloatToUintSeq, [4, 5, 3, 10, 6, 9, 7, 8])
		12: Unit	constructor(emit, [11], 8)
		13: Gpr	constructor(writable_gpr_to_gpr, [6], 9)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2115
			constraints = [
			]
			prio = 0
			result = 13
			impure = [4, 5, 6, 7, 8, 9, 10, 12, 13]
		}
	]
}
term {
	name = cvt_float_to_sint_seq
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Type	extractor(value_type, 1)
		3: bool	argument(2)
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		5: OperandSize	constructor(raw_operand_size_of_type, [2], 2)
		6: WritableGpr	constructor(temp_writable_gpr, [], 3)
		7: WritableXmm	constructor(temp_writable_xmm, [], 4)
		8: WritableGpr	constructor(temp_writable_gpr, [], 5)
		9: Xmm	constructor(put_in_xmm, [1], 6)
		10: MInst	make_variant(MInst::CvtFloatToSintSeq, [4, 5, 3, 9, 6, 8, 7])
		11: Unit	constructor(emit, [10], 7)
		12: Gpr	constructor(writable_gpr_to_gpr, [6], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2127
			constraints = [
			]
			prio = 0
			result = 12
			impure = [4, 5, 6, 7, 8, 9, 11, 12]
		}
	]
}
term {
	name = mov_from_preg
	bindings = [
		0: PReg	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::MovFromPReg, [0, 1])
		3: Unit	constructor(emit, [2], 2)
		4: Reg	constructor(writable_gpr_to_r_reg, [1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2139
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3, 4]
		}
	]
}
term {
	name = extend_to_gpr
	bindings = [
		0: Value	argument(0)
		1: Type	extractor(value_type, 0)
		2: Type	argument(1)
		3: ExtendKind	argument(2)
		4: Gpr	constructor(put_in_gpr, [0], 1)
		5: bool	constructor(value32_zeros_upper32, [0], 0)
		6: Reg	constructor(put_in_reg, [0], 1)
		7: u16	const_int(64, u16)
		8: u64	const_int(0, u64)
		9: u64	const_int(4294967295, u64)
		10: Reg	constructor(add_range_fact, [6, 7, 8, 9], 2)
		11: Gpr	constructor(gpr_new, [10], 3)
		12: u16	constructor(ty_bits_u16, [1], 0)
		13: OperandSize	constructor(operand_size_of_type_32_64, [2], 1)
		14: u16	constructor(operand_size_bits, [13], 2)
		15: ExtMode	constructor(ext_mode, [12, 14], 3)
		16: GprMem	constructor(put_in_gpr_mem, [0], 4)
		17: Gpr	constructor(extend, [3, 2, 15, 16], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2163
			constraints = [
			]
			equals = [
				1 == 2
			]
			prio = 2
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2171
			constraints = [
				1:	const_prim(I32)
				2:	const_prim(I64)
				3:	variant(ExtendKind::Zero)
				5:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [6, 10, 11]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2175
			constraints = [
			]
			prio = 0
			result = 17
			impure = [13, 14, 15, 16, 17]
		}
	]
}
term {
	name = extend
	bindings = [
		0: ExtendKind	argument(0)
		1: Type	argument(1)
		2: ExtMode	argument(2)
		3: GprMem	argument(3)
		4: Gpr	constructor(x64_movzx, [2, 3], 1)
		5: Gpr	constructor(x64_movsx, [2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2191
			constraints = [
				0:	variant(ExtendKind::Zero)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2195
			constraints = [
				0:	variant(ExtendKind::Sign)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = value32_zeros_upper32
	bindings = [
		0: Value	argument(0)
		1: Option(Inst)	extractor(def_inst, 0)
		2: Inst	match_some(1)
		3: InstructionData	extractor(inst_data, 2)
		4: Opcode	match_variant(3, InstructionData::Binary, opcode)
		5: ValueArray2	match_variant(3, InstructionData::Binary, args)
		6: (Value, Value)	extractor(value_array_2, 5)
		7: Value	match_tuple(6, 0)
		8: Value	match_tuple(6, 1)
		9: bool	const_prim(true)
		10: Opcode	match_variant(3, InstructionData::Load, opcode)
		11: Value	match_variant(3, InstructionData::Load, arg)
		12: MemFlags	match_variant(3, InstructionData::Load, flags)
		13: Offset32	match_variant(3, InstructionData::Load, offset)
		14: bool	const_prim(false)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2202
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Iadd)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2203
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Isub)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2204
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Imul)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2205
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Band)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2206
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Bor)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2207
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Bxor)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2208
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2209
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2210
			constraints = [
				1:	some
				3:	variant(InstructionData::Load)
				10:	variant(Opcode::Uload32)
			]
			prio = 0
			result = 9
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2211
			constraints = [
			]
			prio = -1
			result = 14
		}
	]
}
term {
	name = vec_int_type
	bindings = [
		0: Type	argument(0)
		1: Option((u32, u32))	extractor(multi_lane, 0)
		2: (u32, u32)	match_some(1)
		3: u32	match_tuple(2, 0)
		4: u32	match_tuple(2, 1)
		5: Type	const_prim(I8X16)
		6: Type	const_prim(I16X8)
		7: Type	const_prim(I32X4)
		8: Type	const_prim(I64X2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2217
			constraints = [
				1:	some
				3:	const_int(8)
				4:	const_int(16)
			]
			prio = 0
			result = 5
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2218
			constraints = [
				1:	some
				3:	const_int(16)
				4:	const_int(8)
			]
			prio = 0
			result = 6
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2219
			constraints = [
				1:	some
				3:	const_int(32)
				4:	const_int(4)
			]
			prio = 0
			result = 7
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2220
			constraints = [
				1:	some
				3:	const_int(64)
				4:	const_int(2)
			]
			prio = 0
			result = 8
		}
	]
}
term {
	name = x64_xor_vector
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_xorps, [1, 2], 1)
		4: Xmm	constructor(x64_xorpd, [1, 2], 1)
		5: Option((u32, u32))	extractor(multi_lane, 0)
		6: (u32, u32)	match_some(5)
		7: u32	match_tuple(6, 0)
		8: u32	match_tuple(6, 1)
		9: Xmm	constructor(x64_pxor, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2224
			constraints = [
				0:	const_prim(F32)
			]
			prio = 1
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2225
			constraints = [
				0:	const_prim(F64)
			]
			prio = 1
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2226
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 1
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2227
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 1
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2228
			constraints = [
				5:	some
			]
			prio = 0
			result = 9
			impure = [9]
		}
	]
}
term {
	name = vector_all_ones
	bindings = [
		0: Xmm	constructor(xmm_uninit_value, [], 1)
		1: XmmMem	constructor(xmm_to_xmm_mem, [0], 2)
		2: Xmm	constructor(x64_pcmpeqd, [0, 1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2240
			constraints = [
			]
			prio = 0
			result = 2
			impure = [0, 1, 2]
		}
	]
}
term {
	name = mov_rmi_to_xmm
	bindings = [
		0: RegMemImm	argument(0)
		1: SyntheticAmode	match_variant(0, RegMemImm::Mem, addr)
		2: XmmMemImm	constructor(xmm_mem_imm_new, [0], 1)
		3: u32	match_variant(0, RegMemImm::Imm, simm32)
		4: Reg	match_variant(0, RegMemImm::Reg, reg)
		5: GprMem	constructor(reg_to_gpr_mem, [4], 1)
		6: Xmm	constructor(x64_movd_to_xmm, [5], 2)
		7: XmmMemImm	constructor(xmm_to_xmm_mem_imm, [6], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2246
			constraints = [
				0:	variant(RegMemImm::Mem)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2247
			constraints = [
				0:	variant(RegMemImm::Imm)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2248
			constraints = [
				0:	variant(RegMemImm::Reg)
			]
			prio = 0
			result = 7
			impure = [5, 6, 7]
		}
	]
}
term {
	name = x64_load
	bindings = [
		0: Type	argument(0)
		1: Option(Type)	extractor(fits_in_32, 0)
		2: Type	match_some(1)
		3: SyntheticAmode	argument(1)
		4: ExtKind	argument(2)
		5: u16	constructor(ty_bytes, [2], 0)
		6: u16	const_int(8, u16)
		7: ExtMode	constructor(ext_mode, [5, 6], 1)
		8: GprMem	constructor(synthetic_amode_to_gpr_mem, [3], 2)
		9: Gpr	constructor(x64_movsx, [7, 8], 3)
		10: Reg	constructor(gpr_to_reg, [9], 4)
		11: Reg	constructor(mov64_mr, [3], 1)
		12: Xmm	constructor(x64_movss_load, [3], 1)
		13: Reg	constructor(xmm_to_reg, [12], 2)
		14: Xmm	constructor(x64_movsd_load, [3], 1)
		15: Reg	constructor(xmm_to_reg, [14], 2)
		16: Xmm	constructor(x64_movups_load, [3], 1)
		17: Reg	constructor(xmm_to_reg, [16], 2)
		18: Xmm	constructor(x64_movupd_load, [3], 1)
		19: Reg	constructor(xmm_to_reg, [18], 2)
		20: Option((u32, u32))	extractor(multi_lane, 0)
		21: (u32, u32)	match_some(20)
		22: u32	match_tuple(21, 0)
		23: u32	match_tuple(21, 1)
		24: XmmMem	constructor(synthetic_amode_to_xmm_mem, [3], 1)
		25: Xmm	constructor(x64_movdqu_load, [24], 2)
		26: Reg	constructor(xmm_to_reg, [25], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2263
			constraints = [
				1:	some
				4:	variant(ExtKind::SignExtend)
			]
			prio = 1
			result = 10
			impure = [7, 8, 9, 10]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2267
			constraints = [
				0:	const_prim(I64)
			]
			prio = 2
			result = 11
			impure = [11]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2270
			constraints = [
				0:	const_prim(F32)
			]
			prio = 2
			result = 13
			impure = [12, 13]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2273
			constraints = [
				0:	const_prim(F64)
			]
			prio = 2
			result = 15
			impure = [14, 15]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2276
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 2
			result = 17
			impure = [16, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2279
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 2
			result = 19
			impure = [18, 19]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2282
			constraints = [
				20:	some
			]
			prio = 0
			result = 26
			impure = [24, 25, 26]
		}
	]
}
term {
	name = x64_mov
	bindings = [
		0: Amode	argument(0)
		1: SyntheticAmode	constructor(amode_to_synthetic_amode, [0], 1)
		2: Reg	constructor(mov64_mr, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2286
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = x64_movzx
	bindings = [
		0: ExtMode	argument(0)
		1: GprMem	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: MInst	make_variant(MInst::MovzxRmR, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Gpr	constructor(writable_gpr_to_gpr, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2290
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = x64_movsx
	bindings = [
		0: ExtMode	argument(0)
		1: GprMem	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: MInst	make_variant(MInst::MovsxRmR, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Gpr	constructor(writable_gpr_to_gpr, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2296
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = x64_movss_load
	bindings = [
		0: SyntheticAmode	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movss, [])
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovss, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2302
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2304
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [2, 6]
		}
	]
}
term {
	name = x64_movss_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movss, [])
		3: SideEffectNoResult	constructor(xmm_movrm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovss, [])
		6: SideEffectNoResult	constructor(xmm_movrm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2309
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2311
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movsd_load
	bindings = [
		0: SyntheticAmode	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movsd, [])
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovsd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2316
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2318
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [2, 6]
		}
	]
}
term {
	name = x64_movsd_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movsd, [])
		3: SideEffectNoResult	constructor(xmm_movrm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovsd, [])
		6: SideEffectNoResult	constructor(xmm_movrm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2323
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2325
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movups_load
	bindings = [
		0: SyntheticAmode	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movups, [])
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovups, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2330
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2332
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [2, 6]
		}
	]
}
term {
	name = x64_movups_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movups, [])
		3: SideEffectNoResult	constructor(xmm_movrm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovups, [])
		6: SideEffectNoResult	constructor(xmm_movrm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2337
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2339
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movupd_load
	bindings = [
		0: SyntheticAmode	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movupd, [])
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovupd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2344
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2346
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [2, 6]
		}
	]
}
term {
	name = x64_movupd_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movupd, [])
		3: SideEffectNoResult	constructor(xmm_movrm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovupd, [])
		6: SideEffectNoResult	constructor(xmm_movrm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2351
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2353
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movd_to_gpr
	bindings = [
		0: Xmm	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movd, [])
		2: OperandSize	make_variant(OperandSize::Size32, [])
		3: Gpr	constructor(xmm_to_gpr, [1, 0, 2], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovd, [])
		6: Gpr	constructor(xmm_to_gpr_vex, [5, 0, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2359
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2361
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movd_to_xmm
	bindings = [
		0: GprMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movd, [])
		2: OperandSize	make_variant(OperandSize::Size32, [])
		3: Xmm	constructor(gpr_to_xmm, [1, 0, 2], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovd, [])
		6: Xmm	constructor(gpr_to_xmm_vex, [5, 0, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2367
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2369
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movq_to_xmm
	bindings = [
		0: GprMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movq, [])
		2: OperandSize	make_variant(OperandSize::Size64, [])
		3: Xmm	constructor(gpr_to_xmm, [1, 0, 2], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovq, [])
		6: Xmm	constructor(gpr_to_xmm_vex, [5, 0, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2375
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2377
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movq_to_gpr
	bindings = [
		0: Xmm	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movq, [])
		2: OperandSize	make_variant(OperandSize::Size64, [])
		3: Gpr	constructor(xmm_to_gpr, [1, 0, 2], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovq, [])
		6: Gpr	constructor(xmm_to_gpr_vex, [5, 0, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2383
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2385
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movdqu_load
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movdqu, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vmovdqu, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2390
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2392
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_movdqu_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movdqu, [])
		3: SideEffectNoResult	constructor(xmm_movrm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovdqu, [])
		6: SideEffectNoResult	constructor(xmm_movrm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2397
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2399
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pmovsxbw
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovsxbw, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovsxbw, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2404
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2406
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmovzxbw
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovzxbw, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovzxbw, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2411
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2413
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmovsxwd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovsxwd, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovsxwd, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2418
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2420
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmovzxwd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovzxwd, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovzxwd, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2425
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2427
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmovsxdq
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovsxdq, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovsxdq, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2432
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2434
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmovzxdq
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pmovzxdq, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vpmovzxdq, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2439
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2441
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_movrm
	bindings = [
		0: Type	argument(0)
		1: SyntheticAmode	argument(1)
		2: Gpr	argument(2)
		3: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		4: MInst	make_variant(MInst::MovRM, [3, 2, 1])
		5: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2446
			constraints = [
			]
			prio = 0
			result = 5
			impure = [3]
		}
	]
}
term {
	name = x64_movimm_m
	bindings = [
		0: Type	argument(0)
		1: SyntheticAmode	argument(1)
		2: i32	argument(2)
		3: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		4: MInst	make_variant(MInst::MovImmM, [3, 2, 1])
		5: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2451
			constraints = [
			]
			prio = 0
			result = 5
			impure = [3]
		}
	]
}
term {
	name = xmm_movrm
	bindings = [
		0: SseOpcode	argument(0)
		1: SyntheticAmode	argument(1)
		2: Xmm	argument(2)
		3: MInst	make_variant(MInst::XmmMovRM, [0, 2, 1])
		4: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2456
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = xmm_movrm_imm
	bindings = [
		0: SseOpcode	argument(0)
		1: SyntheticAmode	argument(1)
		2: Xmm	argument(2)
		3: u8	argument(3)
		4: MInst	make_variant(MInst::XmmMovRMImm, [0, 2, 1, 3])
		5: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2460
			constraints = [
			]
			prio = 0
			result = 5
		}
	]
}
term {
	name = xmm_movrm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: SyntheticAmode	argument(1)
		2: Xmm	argument(2)
		3: MInst	make_variant(MInst::XmmMovRMVex, [0, 2, 1])
		4: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2464
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = xmm_movrm_imm_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: SyntheticAmode	argument(1)
		2: Xmm	argument(2)
		3: u8	argument(3)
		4: MInst	make_variant(MInst::XmmMovRMImmVex, [0, 2, 1, 3])
		5: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2468
			constraints = [
			]
			prio = 0
			result = 5
		}
	]
}
term {
	name = x64_xmm_load_const
	bindings = [
		0: Type	argument(0)
		1: VCodeConstant	argument(1)
		2: SyntheticAmode	constructor(const_to_synthetic_amode, [1], 1)
		3: ExtKind	make_variant(ExtKind::None, [])
		4: Reg	constructor(x64_load, [0, 2, 3], 2)
		5: Xmm	constructor(xmm_new, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2473
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = x64_add
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Add, [])
		4: Gpr	constructor(alu_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2484
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_add_with_flags_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		5: AluRmiROpcode	make_variant(AluRmiROpcode::Add, [])
		6: MInst	make_variant(MInst::AluRmiR, [4, 5, 1, 2, 3])
		7: Reg	constructor(writable_gpr_to_r_reg, [3], 3)
		8: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2492
			constraints = [
			]
			prio = 0
			result = 8
			impure = [3, 4, 7]
		}
	]
}
term {
	name = x64_alurmi_with_flags_paired
	bindings = [
		0: AluRmiROpcode	argument(0)
		1: Type	argument(1)
		2: Option(Type)	extractor(fits_in_64, 1)
		3: Type	match_some(2)
		4: Gpr	argument(2)
		5: GprMemImm	argument(3)
		6: WritableGpr	constructor(temp_writable_gpr, [], 1)
		7: OperandSize	constructor(raw_operand_size_of_type, [3], 2)
		8: MInst	make_variant(MInst::AluRmiR, [7, 0, 4, 5, 6])
		9: Reg	constructor(writable_gpr_to_r_reg, [6], 3)
		10: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [8, 9])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2503
			constraints = [
				2:	some
			]
			prio = 0
			result = 10
			impure = [6, 7, 9]
		}
	]
}
term {
	name = x64_alurmi_flags_side_effect
	bindings = [
		0: AluRmiROpcode	argument(0)
		1: Type	argument(1)
		2: Option(Type)	extractor(fits_in_64, 1)
		3: Type	match_some(2)
		4: Gpr	argument(2)
		5: GprMemImm	argument(3)
		6: OperandSize	constructor(raw_operand_size_of_type, [3], 1)
		7: WritableGpr	constructor(temp_writable_gpr, [], 2)
		8: MInst	make_variant(MInst::AluRmiR, [6, 0, 4, 5, 7])
		9: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [8])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2514
			constraints = [
				2:	some
			]
			prio = 0
			result = 9
			impure = [6, 7]
		}
	]
}
term {
	name = x64_alurmi_with_flags_chained
	bindings = [
		0: AluRmiROpcode	argument(0)
		1: Type	argument(1)
		2: Option(Type)	extractor(fits_in_64, 1)
		3: Type	match_some(2)
		4: Gpr	argument(2)
		5: GprMemImm	argument(3)
		6: WritableGpr	constructor(temp_writable_gpr, [], 1)
		7: OperandSize	constructor(raw_operand_size_of_type, [3], 2)
		8: MInst	make_variant(MInst::AluRmiR, [7, 0, 4, 5, 6])
		9: Reg	constructor(writable_gpr_to_r_reg, [6], 3)
		10: ConsumesAndProducesFlags	make_variant(ConsumesAndProducesFlags::ReturnsReg, [8, 9])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2524
			constraints = [
				2:	some
			]
			prio = 0
			result = 10
			impure = [6, 7, 9]
		}
	]
}
term {
	name = x64_adc_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		5: AluRmiROpcode	make_variant(AluRmiROpcode::Adc, [])
		6: MInst	make_variant(MInst::AluRmiR, [4, 5, 1, 2, 3])
		7: Reg	constructor(writable_gpr_to_r_reg, [3], 3)
		8: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2536
			constraints = [
			]
			prio = 0
			result = 8
			impure = [3, 4, 7]
		}
	]
}
term {
	name = x64_sub
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Sub, [])
		4: Gpr	constructor(alu_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2548
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_sub_with_flags_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		5: AluRmiROpcode	make_variant(AluRmiROpcode::Sub, [])
		6: MInst	make_variant(MInst::AluRmiR, [4, 5, 1, 2, 3])
		7: Reg	constructor(writable_gpr_to_r_reg, [3], 3)
		8: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2556
			constraints = [
			]
			prio = 0
			result = 8
			impure = [3, 4, 7]
		}
	]
}
term {
	name = x64_sbb_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		5: AluRmiROpcode	make_variant(AluRmiROpcode::Sbb, [])
		6: MInst	make_variant(MInst::AluRmiR, [4, 5, 1, 2, 3])
		7: Reg	constructor(writable_gpr_to_r_reg, [3], 3)
		8: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2568
			constraints = [
			]
			prio = 0
			result = 8
			impure = [3, 4, 7]
		}
	]
}
term {
	name = x64_mul
	bindings = [
		0: Type	argument(0)
		1: bool	argument(1)
		2: Gpr	argument(2)
		3: GprMem	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: WritableGpr	constructor(temp_writable_gpr, [], 2)
		6: OperandSize	constructor(raw_operand_size_of_type, [0], 3)
		7: MInst	make_variant(MInst::Mul, [6, 1, 2, 3, 4, 5])
		8: Unit	constructor(emit, [7], 4)
		9: Gpr	constructor(writable_gpr_to_gpr, [4], 5)
		10: Gpr	constructor(writable_gpr_to_gpr, [5], 6)
		11: ValueRegs	constructor(value_gprs, [9, 10], 7)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2581
			constraints = [
			]
			prio = 0
			result = 11
			impure = [4, 5, 6, 8, 9, 10, 11]
		}
	]
}
term {
	name = x64_mul8
	bindings = [
		0: bool	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::Mul8, [0, 1, 2, 3])
		5: Unit	constructor(emit, [4], 2)
		6: Gpr	constructor(writable_gpr_to_gpr, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2591
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5, 6]
		}
	]
}
term {
	name = x64_imul
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		5: MInst	make_variant(MInst::IMul, [4, 1, 2, 3])
		6: Unit	constructor(emit, [5], 3)
		7: Gpr	constructor(writable_gpr_to_gpr, [3], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2598
			constraints = [
			]
			prio = 0
			result = 7
			impure = [3, 4, 6, 7]
		}
	]
}
term {
	name = x64_imul_imm
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: i32	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		5: MInst	make_variant(MInst::IMulImm, [4, 1, 2, 3])
		6: Unit	constructor(emit, [5], 3)
		7: Gpr	constructor(writable_gpr_to_gpr, [3], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2606
			constraints = [
			]
			prio = 0
			result = 7
			impure = [3, 4, 6, 7]
		}
	]
}
term {
	name = x64_mul8_with_flags_paired
	bindings = [
		0: bool	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: MInst	make_variant(MInst::Mul8, [0, 1, 2, 3])
		5: Reg	constructor(writable_gpr_to_r_reg, [3], 2)
		6: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [4, 5])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2613
			constraints = [
			]
			prio = 0
			result = 6
			impure = [3, 5]
		}
	]
}
term {
	name = x64_mul_lo_with_flags_paired
	bindings = [
		0: Type	argument(0)
		1: bool	argument(1)
		2: Gpr	argument(2)
		3: GprMem	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: WritableGpr	constructor(temp_writable_gpr, [], 2)
		6: OperandSize	constructor(raw_operand_size_of_type, [0], 3)
		7: MInst	make_variant(MInst::Mul, [6, 1, 2, 3, 4, 5])
		8: Reg	constructor(writable_gpr_to_r_reg, [4], 4)
		9: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [7, 8])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2620
			constraints = [
			]
			prio = 0
			result = 9
			impure = [4, 5, 6, 8]
		}
	]
}
term {
	name = x64_and
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::And, [])
		4: Gpr	constructor(alu_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2630
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_and_with_flags_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: WritableGpr	constructor(temp_writable_gpr, [], 1)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		5: AluRmiROpcode	make_variant(AluRmiROpcode::And, [])
		6: MInst	make_variant(MInst::AluRmiR, [4, 5, 1, 2, 3])
		7: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [6])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2637
			constraints = [
			]
			prio = 0
			result = 7
			impure = [3, 4]
		}
	]
}
term {
	name = x64_or
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Or, [])
		4: Gpr	constructor(alu_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2648
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_xor
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Xor, [])
		4: Gpr	constructor(alu_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2656
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_andn
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: AluRmROpcode	make_variant(AluRmROpcode::Andn, [])
		4: Gpr	constructor(alu_rm_r_vex, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2663
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = imm_i64
	bindings = [
		0: Type	argument(0)
		1: i64	argument(1)
		2: u64	constructor(i64_as_u64, [1], 0)
		3: Reg	constructor(imm, [0, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2670
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
	]
}
term {
	name = imm
	bindings = [
		0: Type	argument(0)
		1: Option(Type)	extractor(fits_in_64, 0)
		2: Type	match_some(1)
		3: u64	argument(1)
		4: bool	extractor(u64_is_zero, 3)
		5: WritableGpr	constructor(temp_writable_gpr, [], 1)
		6: OperandSize	constructor(operand_size_of_type_32_64, [2], 2)
		7: MInst	make_variant(MInst::Imm, [6, 3, 5])
		8: Unit	constructor(emit, [7], 3)
		9: Reg	constructor(writable_gpr_to_r_reg, [5], 4)
		10: Type	const_prim(I32)
		11: Reg	constructor(imm, [10, 3], 1)
		12: GprMem	constructor(reg_to_gpr_mem, [11], 2)
		13: Xmm	constructor(x64_movd_to_xmm, [12], 3)
		14: Reg	constructor(xmm_to_reg, [13], 4)
		15: Type	const_prim(I64)
		16: Reg	constructor(imm, [15, 3], 1)
		17: GprMem	constructor(reg_to_gpr_mem, [16], 2)
		18: Xmm	constructor(x64_movq_to_xmm, [17], 3)
		19: Reg	constructor(xmm_to_reg, [18], 4)
		20: Option(u64)	extractor(nonzero_u64_fits_in_u32, 3)
		21: u64	match_some(20)
		22: OperandSize	make_variant(OperandSize::Size32, [])
		23: MInst	make_variant(MInst::Imm, [22, 21, 5])
		24: Unit	constructor(emit, [23], 2)
		25: Reg	constructor(writable_gpr_to_r_reg, [5], 3)
		26: AluRmiROpcode	make_variant(AluRmiROpcode::Xor, [])
		27: MInst	make_variant(MInst::AluConstOp, [26, 6, 5])
		28: Unit	constructor(emit, [27], 3)
		29: Gpr	constructor(writable_gpr_to_gpr, [5], 4)
		30: Reg	constructor(gpr_to_reg, [29], 5)
		31: Option((u32, u32))	extractor(multi_lane, 0)
		32: (u32, u32)	match_some(31)
		33: u32	match_tuple(32, 0)
		34: u32	match_tuple(32, 1)
		35: Xmm	constructor(xmm_zero, [0], 1)
		36: Reg	constructor(xmm_to_reg, [35], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2685
			constraints = [
				1:	some
				4:	const_prim(false)
			]
			prio = 1
			result = 9
			impure = [5, 6, 8, 9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2692
			constraints = [
				0:	const_prim(F32)
				4:	const_prim(false)
			]
			prio = 2
			result = 14
			impure = [11, 12, 13, 14]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2696
			constraints = [
				0:	const_prim(F64)
				4:	const_prim(false)
			]
			prio = 2
			result = 19
			impure = [16, 17, 18, 19]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2701
			constraints = [
				0:	const_prim(I64)
				20:	some
			]
			prio = 2
			result = 25
			impure = [5, 24, 25]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2707
			constraints = [
				1:	some
				4:	const_prim(true)
			]
			prio = 1
			result = 30
			impure = [5, 6, 28, 29, 30]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2715
			constraints = [
				3:	const_int(0)
				31:	some
			]
			prio = 0
			result = 36
			impure = [35, 36]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2719
			constraints = [
				0:	const_prim(F32)
				4:	const_prim(true)
			]
			prio = 2
			result = 36
			impure = [35, 36]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2724
			constraints = [
				0:	const_prim(F64)
				4:	const_prim(true)
			]
			prio = 2
			result = 36
			impure = [35, 36]
		}
	]
}
term {
	name = xmm_zero
	bindings = [
		0: Type	argument(0)
		1: Xmm	constructor(xmm_uninit_value, [], 1)
		2: XmmMem	constructor(xmm_to_xmm_mem, [1], 2)
		3: Xmm	constructor(x64_xor_vector, [0, 1, 2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2729
			constraints = [
			]
			prio = 0
			result = 3
			impure = [1, 2, 3]
		}
	]
}
term {
	name = shift_r
	bindings = [
		0: Type	argument(0)
		1: ShiftKind	argument(1)
		2: Gpr	argument(2)
		3: Imm8Gpr	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		6: MInst	make_variant(MInst::ShiftR, [5, 1, 2, 3, 4])
		7: Unit	constructor(emit, [6], 3)
		8: Gpr	constructor(writable_gpr_to_gpr, [4], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2735
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 5, 7, 8]
		}
	]
}
term {
	name = x64_rotl
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Imm8Gpr	argument(2)
		3: ShiftKind	make_variant(ShiftKind::RotateLeft, [])
		4: Gpr	constructor(shift_r, [0, 3, 1, 2], 1)
		5: Option(Type)	extractor(ty_32_or_64, 0)
		6: Type	match_some(5)
		7: Option(u8)	extractor(imm8_from_imm8_gpr, 2)
		8: u8	match_some(7)
		9: bool	constructor(use_bmi2, [], 0)
		10: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		11: u8	constructor(ty_bits, [6], 0)
		12: u8	constructor(u8_sub, [11, 8], 0)
		13: Gpr	constructor(x64_rorx, [6, 10, 12], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2745
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2747
			constraints = [
				5:	some
				7:	some
				9:	const_prim(true)
			]
			prio = 1
			result = 13
			impure = [10, 13]
		}
	]
}
term {
	name = x64_rotr
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Imm8Gpr	argument(2)
		3: ShiftKind	make_variant(ShiftKind::RotateRight, [])
		4: Gpr	constructor(shift_r, [0, 3, 1, 2], 1)
		5: Option(Type)	extractor(ty_32_or_64, 0)
		6: Type	match_some(5)
		7: Option(u8)	extractor(imm8_from_imm8_gpr, 2)
		8: u8	match_some(7)
		9: bool	constructor(use_bmi2, [], 0)
		10: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		11: Gpr	constructor(x64_rorx, [6, 10, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2753
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2755
			constraints = [
				5:	some
				7:	some
				9:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = x64_shl
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Imm8Gpr	argument(2)
		3: ShiftKind	make_variant(ShiftKind::ShiftLeft, [])
		4: Gpr	constructor(shift_r, [0, 3, 1, 2], 1)
		5: Option(Type)	extractor(ty_32_or_64, 0)
		6: Type	match_some(5)
		7: Option(Gpr)	extractor(gpr_from_imm8_gpr, 2)
		8: Gpr	match_some(7)
		9: bool	constructor(use_bmi2, [], 0)
		10: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		11: Gpr	constructor(x64_shlx, [6, 10, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2761
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2767
			constraints = [
				5:	some
				7:	some
				9:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = x64_shr
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Imm8Gpr	argument(2)
		3: ShiftKind	make_variant(ShiftKind::ShiftRightLogical, [])
		4: Gpr	constructor(shift_r, [0, 3, 1, 2], 1)
		5: Option(Type)	extractor(ty_32_or_64, 0)
		6: Type	match_some(5)
		7: Option(Gpr)	extractor(gpr_from_imm8_gpr, 2)
		8: Gpr	match_some(7)
		9: bool	constructor(use_bmi2, [], 0)
		10: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		11: Gpr	constructor(x64_shrx, [6, 10, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2773
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2776
			constraints = [
				5:	some
				7:	some
				9:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = x64_sar
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Imm8Gpr	argument(2)
		3: ShiftKind	make_variant(ShiftKind::ShiftRightArithmetic, [])
		4: Gpr	constructor(shift_r, [0, 3, 1, 2], 1)
		5: Option(Type)	extractor(ty_32_or_64, 0)
		6: Type	match_some(5)
		7: Option(Gpr)	extractor(gpr_from_imm8_gpr, 2)
		8: Gpr	match_some(7)
		9: bool	constructor(use_bmi2, [], 0)
		10: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		11: Gpr	constructor(x64_sarx, [6, 10, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2782
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2785
			constraints = [
				5:	some
				7:	some
				9:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = x64_bzhi
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: Gpr	argument(2)
		3: AluRmROpcode	make_variant(AluRmROpcode::Bzhi, [])
		4: Gpr	constructor(alu_rm_r_vex, [0, 3, 2, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2794
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_bswap
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: MInst	make_variant(MInst::Bswap, [3, 1, 2])
		5: Unit	constructor(emit, [4], 3)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2801
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
	]
}
term {
	name = cmp_rmi_r
	bindings = [
		0: OperandSize	argument(0)
		1: CmpOpcode	argument(1)
		2: Gpr	argument(2)
		3: GprMemImm	argument(3)
		4: MInst	make_variant(MInst::CmpRmiR, [0, 1, 2, 3])
		5: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2809
			constraints = [
			]
			prio = 0
			result = 5
		}
	]
}
term {
	name = x64_cmp
	bindings = [
		0: OperandSize	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: CmpOpcode	make_variant(CmpOpcode::Cmp, [])
		4: ProducesFlags	constructor(cmp_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2818
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_cmp_imm
	bindings = [
		0: OperandSize	argument(0)
		1: Gpr	argument(1)
		2: u32	argument(2)
		3: RegMemImm	make_variant(RegMemImm::Imm, [2])
		4: GprMemImm	constructor(gpr_mem_imm_new, [3], 1)
		5: ProducesFlags	constructor(x64_cmp, [0, 1, 4], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2823
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
	]
}
term {
	name = xmm_cmp_rm_r
	bindings = [
		0: SseOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [2], 1)
		4: MInst	make_variant(MInst::XmmCmpRmR, [0, 1, 3])
		5: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [4])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2828
			constraints = [
			]
			prio = 0
			result = 5
			impure = [3]
		}
	]
}
term {
	name = xmm_cmp_rm_r_vex
	bindings = [
		0: AvxOpcode	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: MInst	make_variant(MInst::XmmCmpRmRVex, [0, 1, 2])
		4: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsSideEffect, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2834
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = x64_ucomis
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Ucomiss, [])
		4: ProducesFlags	constructor(xmm_cmp_rm_r, [3, 1, 2], 1)
		5: SseOpcode	make_variant(SseOpcode::Ucomisd, [])
		6: ProducesFlags	constructor(xmm_cmp_rm_r, [5, 1, 2], 1)
		7: bool	constructor(use_avx, [], 0)
		8: AvxOpcode	make_variant(AvxOpcode::Vucomiss, [])
		9: ProducesFlags	constructor(xmm_cmp_rm_r_vex, [8, 1, 2], 1)
		10: AvxOpcode	make_variant(AvxOpcode::Vucomisd, [])
		11: ProducesFlags	constructor(xmm_cmp_rm_r_vex, [10, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2840
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2842
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 6
			impure = [6]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2844
			constraints = [
				0:	const_prim(F32)
				7:	const_prim(true)
			]
			prio = 1
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2847
			constraints = [
				0:	const_prim(F64)
				7:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [11]
		}
	]
}
term {
	name = x64_test
	bindings = [
		0: OperandSize	argument(0)
		1: Gpr	argument(1)
		2: GprMemImm	argument(2)
		3: CmpOpcode	make_variant(CmpOpcode::Test, [])
		4: ProducesFlags	constructor(cmp_rmi_r, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2853
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_ptest
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Ptest, [])
		3: ProducesFlags	constructor(xmm_cmp_rm_r, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vptest, [])
		6: ProducesFlags	constructor(xmm_cmp_rm_r_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2858
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2860
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = cmove
	bindings = [
		0: Type	argument(0)
		1: CC	argument(1)
		2: GprMem	argument(2)
		3: Gpr	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		6: MInst	make_variant(MInst::Cmove, [5, 1, 2, 3, 4])
		7: Reg	constructor(writable_gpr_to_r_reg, [4], 3)
		8: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsReg, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2868
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 5, 7]
		}
	]
}
term {
	name = cmove_xmm
	bindings = [
		0: Type	argument(0)
		1: CC	argument(1)
		2: Xmm	argument(2)
		3: Xmm	argument(3)
		4: WritableXmm	constructor(temp_writable_xmm, [], 1)
		5: MInst	make_variant(MInst::XmmCmove, [0, 1, 2, 3, 4])
		6: Reg	constructor(writable_xmm_to_r_reg, [4], 2)
		7: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsReg, [5, 6])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2876
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6]
		}
	]
}
term {
	name = cmove_from_values
	bindings = [
		0: Type	argument(0)
		1: Option(RegisterClass)	extractor(type_register_class, 0)
		2: RegisterClass	match_some(1)
		3: bool	match_variant(2, RegisterClass::Gpr, single_register)
		4: CC	argument(1)
		5: Value	argument(2)
		6: Value	argument(3)
		7: ValueRegs	constructor(put_in_regs, [5], 1)
		8: ValueRegs	constructor(put_in_regs, [6], 2)
		9: WritableGpr	constructor(temp_writable_gpr, [], 3)
		10: WritableGpr	constructor(temp_writable_gpr, [], 4)
		11: OperandSize	make_variant(OperandSize::Size64, [])
		12: usize	const_int(0, usize)
		13: Gpr	constructor(value_regs_get_gpr, [7, 12], 5)
		14: GprMem	constructor(gpr_to_gpr_mem, [13], 6)
		15: Gpr	constructor(value_regs_get_gpr, [8, 12], 7)
		16: MInst	make_variant(MInst::Cmove, [11, 4, 14, 15, 9])
		17: usize	const_int(1, usize)
		18: Gpr	constructor(value_regs_get_gpr, [7, 17], 8)
		19: GprMem	constructor(gpr_to_gpr_mem, [18], 9)
		20: Gpr	constructor(value_regs_get_gpr, [8, 17], 10)
		21: MInst	make_variant(MInst::Cmove, [11, 4, 19, 20, 10])
		22: Reg	constructor(writable_gpr_to_r_reg, [9], 11)
		23: Reg	constructor(writable_gpr_to_r_reg, [10], 12)
		24: ValueRegs	constructor(value_regs, [22, 23], 13)
		25: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, [16, 21, 24])
		26: GprMem	constructor(put_in_gpr_mem, [5], 1)
		27: Gpr	constructor(put_in_gpr, [6], 2)
		28: ConsumesFlags	constructor(cmove, [0, 4, 26, 27], 3)
		29: Xmm	constructor(put_in_xmm, [5], 1)
		30: Xmm	constructor(put_in_xmm, [6], 2)
		31: ConsumesFlags	constructor(cmove_xmm, [0, 4, 29, 30], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2886
			constraints = [
				0:	const_prim(I128)
				1:	some
				2:	variant(RegisterClass::Gpr)
				3:	const_prim(false)
			]
			prio = 0
			result = 25
			impure = [7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 22, 23, 24]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2907
			constraints = [
				1:	some
				2:	variant(RegisterClass::Gpr)
				3:	const_prim(true)
			]
			prio = 0
			result = 28
			impure = [26, 27, 28]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2910
			constraints = [
				1:	some
				2:	variant(RegisterClass::Xmm)
			]
			prio = 0
			result = 31
			impure = [29, 30, 31]
		}
	]
}
term {
	name = cmove_or
	bindings = [
		0: Type	argument(0)
		1: CC	argument(1)
		2: CC	argument(2)
		3: GprMem	argument(3)
		4: Gpr	argument(4)
		5: WritableGpr	constructor(temp_writable_gpr, [], 1)
		6: WritableGpr	constructor(temp_writable_gpr, [], 2)
		7: OperandSize	constructor(operand_size_of_type_32_64, [0], 3)
		8: MInst	make_variant(MInst::Cmove, [7, 1, 3, 4, 6])
		9: Gpr	constructor(writable_gpr_to_gpr, [6], 4)
		10: MInst	make_variant(MInst::Cmove, [7, 2, 3, 9, 5])
		11: ValueRegs	constructor(writable_gpr_to_value_regs, [5], 5)
		12: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, [8, 10, 11])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2917
			constraints = [
			]
			prio = 0
			result = 12
			impure = [5, 6, 7, 9, 11]
		}
	]
}
term {
	name = cmove_or_xmm
	bindings = [
		0: Type	argument(0)
		1: CC	argument(1)
		2: CC	argument(2)
		3: Xmm	argument(3)
		4: Xmm	argument(4)
		5: WritableXmm	constructor(temp_writable_xmm, [], 1)
		6: WritableXmm	constructor(temp_writable_xmm, [], 2)
		7: MInst	make_variant(MInst::XmmCmove, [0, 1, 3, 4, 6])
		8: Xmm	constructor(writable_xmm_to_xmm, [6], 3)
		9: MInst	make_variant(MInst::XmmCmove, [0, 2, 3, 8, 5])
		10: ValueRegs	constructor(writable_xmm_to_value_regs, [5], 4)
		11: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs, [7, 9, 10])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2929
			constraints = [
			]
			prio = 0
			result = 11
			impure = [5, 6, 8, 10]
		}
	]
}
term {
	name = cmove_or_from_values
	bindings = [
		0: Type	argument(0)
		1: Option(RegisterClass)	extractor(type_register_class, 0)
		2: RegisterClass	match_some(1)
		3: bool	match_variant(2, RegisterClass::Gpr, single_register)
		4: CC	argument(1)
		5: CC	argument(2)
		6: Value	argument(3)
		7: Value	argument(4)
		8: ValueRegs	constructor(put_in_regs, [6], 1)
		9: ValueRegs	constructor(put_in_regs, [7], 2)
		10: WritableGpr	constructor(temp_writable_gpr, [], 3)
		11: WritableGpr	constructor(temp_writable_gpr, [], 4)
		12: WritableGpr	constructor(temp_writable_gpr, [], 5)
		13: WritableGpr	constructor(temp_writable_gpr, [], 6)
		14: OperandSize	make_variant(OperandSize::Size64, [])
		15: usize	const_int(0, usize)
		16: Gpr	constructor(value_regs_get_gpr, [8, 15], 7)
		17: GprMem	constructor(gpr_to_gpr_mem, [16], 8)
		18: Gpr	constructor(value_regs_get_gpr, [9, 15], 9)
		19: MInst	make_variant(MInst::Cmove, [14, 4, 17, 18, 12])
		20: Gpr	constructor(value_regs_get_gpr, [8, 15], 10)
		21: GprMem	constructor(gpr_to_gpr_mem, [20], 11)
		22: Gpr	constructor(writable_gpr_to_gpr, [12], 12)
		23: MInst	make_variant(MInst::Cmove, [14, 5, 21, 22, 10])
		24: usize	const_int(1, usize)
		25: Gpr	constructor(value_regs_get_gpr, [8, 24], 13)
		26: GprMem	constructor(gpr_to_gpr_mem, [25], 14)
		27: Gpr	constructor(value_regs_get_gpr, [9, 24], 15)
		28: MInst	make_variant(MInst::Cmove, [14, 4, 26, 27, 13])
		29: Gpr	constructor(value_regs_get_gpr, [8, 24], 16)
		30: GprMem	constructor(gpr_to_gpr_mem, [29], 17)
		31: Gpr	constructor(writable_gpr_to_gpr, [13], 18)
		32: MInst	make_variant(MInst::Cmove, [14, 5, 30, 31, 11])
		33: Reg	constructor(writable_gpr_to_r_reg, [10], 19)
		34: Reg	constructor(writable_gpr_to_r_reg, [11], 20)
		35: ValueRegs	constructor(value_regs, [33, 34], 21)
		36: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs, [19, 23, 28, 32, 35])
		37: GprMem	constructor(put_in_gpr_mem, [6], 1)
		38: Gpr	constructor(put_in_gpr, [7], 2)
		39: ConsumesFlags	constructor(cmove_or, [0, 4, 5, 37, 38], 3)
		40: Xmm	constructor(put_in_xmm, [6], 1)
		41: Xmm	constructor(put_in_xmm, [7], 2)
		42: ConsumesFlags	constructor(cmove_or_xmm, [0, 4, 5, 40, 41], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2943
			constraints = [
				0:	const_prim(I128)
				1:	some
				2:	variant(RegisterClass::Gpr)
				3:	const_prim(false)
			]
			prio = 0
			result = 36
			impure = [8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2962
			constraints = [
				1:	some
				2:	variant(RegisterClass::Gpr)
				3:	const_prim(true)
			]
			prio = 0
			result = 39
			impure = [37, 38, 39]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2965
			constraints = [
				1:	some
				2:	variant(RegisterClass::Xmm)
			]
			prio = 0
			result = 42
			impure = [40, 41, 42]
		}
	]
}
term {
	name = x64_setcc
	bindings = [
		0: CC	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::Setcc, [0, 1])
		3: Reg	constructor(writable_gpr_to_r_reg, [1], 2)
		4: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsReg, [2, 3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2970
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3]
		}
	]
}
term {
	name = x64_setcc_paired
	bindings = [
		0: CC	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::Setcc, [0, 1])
		3: Reg	constructor(writable_gpr_to_r_reg, [1], 2)
		4: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsReturnsResultWithProducer, [2, 3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2979
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3]
		}
	]
}
term {
	name = x64_paddb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2987
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2989
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2995
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 2997
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3003
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3005
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3011
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3013
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddsb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddsb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddsb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3019
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3021
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3027
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3029
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_phaddw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Phaddw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vphaddw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3035
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3037
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_phaddd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Phaddd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vphaddd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3043
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3045
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddusb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddusb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddusb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3051
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3053
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_paddusw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Paddusw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpaddusw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3059
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3061
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3067
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3069
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3075
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3077
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3083
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3085
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3091
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3093
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubsb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubsb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubsb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3099
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3101
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3107
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3109
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubusb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubusb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubusb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3115
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3117
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_psubusw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psubusw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsubusw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3123
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3125
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pavgb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pavgb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpavgb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3131
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3133
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pavgw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pavgw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpavgw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3139
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3141
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pand
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pand, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpand, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3147
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3149
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_andps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Andps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vandps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3155
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3157
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_andpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Andpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vandpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3163
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3165
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_por
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Por, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpor, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3171
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3173
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_orps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Orps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vorps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3179
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3181
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_orpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Orpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vorpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3187
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3189
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pxor
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pxor, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpxor, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3195
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3197
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_xorps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Xorps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vxorps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3203
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3205
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_xorpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Xorpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vxorpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3211
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3213
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmullw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmullw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmullw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3219
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3221
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmulld
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmulld, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmulld, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3227
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3229
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmulhw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmulhw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmulhw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3235
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3237
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmulhrsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmulhrsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmulhrsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3243
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3245
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmulhuw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmulhuw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmulhuw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3251
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3253
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmuldq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmuldq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmuldq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3259
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3261
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmuludq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmuludq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmuludq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3267
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3269
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpckhwd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpckhwd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpckhwd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3275
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3277
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpcklwd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpcklwd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpcklwd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3283
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3285
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpckldq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpckldq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpckldq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3291
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3293
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpckhdq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpckhdq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpckhdq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3299
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3301
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpcklqdq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpcklqdq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpcklqdq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3307
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3309
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpckhqdq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpckhqdq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpckhqdq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3315
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3317
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_unpcklps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Unpcklps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vunpcklps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3323
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3325
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_unpcklpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Unpcklpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vunpcklpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3331
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3333
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_unpckhps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Unpckhps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vunpckhps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3339
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3341
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_andnps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Andnps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vandnps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3347
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3349
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_andnpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Andnpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vandnpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3355
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3357
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pandn
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pandn, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpandn, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3363
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3365
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_addss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Addss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vaddss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3371
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3373
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_addsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Addsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vaddsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3379
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3381
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_addps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Addps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vaddps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3387
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3389
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_addpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Addpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vaddpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3395
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3397
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_subss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Subss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsubss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3403
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3405
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_subsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Subsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsubsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3411
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3413
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_subps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Subps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vsubps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3419
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3421
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_subpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Subpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vsubpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3427
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3429
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_mulss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Mulss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmulss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3435
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3437
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_mulsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Mulsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmulsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3443
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3445
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_mulps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Mulps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmulps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3451
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3453
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_mulpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Mulpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmulpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3459
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3461
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_divss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Divss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vdivss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3467
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3469
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_divsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Divsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vdivsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3475
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3477
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_divps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Divps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vdivps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3483
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3485
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_divpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Divpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vdivpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3491
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3493
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_blendvpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: Xmm	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Blendvpd, [])
		4: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		5: Xmm	constructor(xmm_rm_r_blend, [3, 0, 4, 2], 2)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vblendvpd, [])
		8: Xmm	constructor(xmm_rmr_blend_vex, [7, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3499
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3501
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [8]
		}
	]
}
term {
	name = x64_blendvps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: Xmm	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Blendvps, [])
		4: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		5: Xmm	constructor(xmm_rm_r_blend, [3, 0, 4, 2], 2)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vblendvps, [])
		8: Xmm	constructor(xmm_rmr_blend_vex, [7, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3507
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3509
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [8]
		}
	]
}
term {
	name = x64_pblendvb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: Xmm	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pblendvb, [])
		4: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		5: Xmm	constructor(xmm_rm_r_blend, [3, 0, 4, 2], 2)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vpblendvb, [])
		8: Xmm	constructor(xmm_rmr_blend_vex, [7, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3515
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3517
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [8]
		}
	]
}
term {
	name = x64_pblendw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pblendw, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 2)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpblendw, [])
		10: Xmm	constructor(xmm_rmr_imm_vex, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3523
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3525
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_movsd_regmove
	bindings = [
		0: Xmm	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movsd, [])
		3: XmmMem	constructor(xmm_to_xmm_mem, [1], 1)
		4: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmovsd, [])
		7: XmmMemImm	constructor(xmm_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3538
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3540
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_movss_regmove
	bindings = [
		0: Xmm	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movss, [])
		3: XmmMem	constructor(xmm_to_xmm_mem, [1], 1)
		4: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmovss, [])
		7: XmmMemImm	constructor(xmm_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3545
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3547
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_movlhps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movlhps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmovlhps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3553
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3555
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxs
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pmaxsb, [1, 2], 1)
		4: Xmm	constructor(x64_pmaxsw, [1, 2], 1)
		5: Xmm	constructor(x64_pmaxsd, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3561
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3562
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3563
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmaxsb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxsb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxsb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3566
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3567
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3571
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3572
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxsd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxsd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3576
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3577
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmins
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pminsb, [1, 2], 1)
		4: Xmm	constructor(x64_pminsw, [1, 2], 1)
		5: Xmm	constructor(x64_pminsd, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3583
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3584
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3585
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pminsb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminsb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminsb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3588
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3589
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pminsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3593
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3594
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pminsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminsd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminsd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3598
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3599
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxu
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pmaxub, [1, 2], 1)
		4: Xmm	constructor(x64_pmaxuw, [1, 2], 1)
		5: Xmm	constructor(x64_pmaxud, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3605
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3606
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3607
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pmaxub
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxub, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxub, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3610
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3611
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxuw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxuw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxuw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3615
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3616
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaxud
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaxud, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaxud, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3620
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3621
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pminu
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pminub, [1, 2], 1)
		4: Xmm	constructor(x64_pminuw, [1, 2], 1)
		5: Xmm	constructor(x64_pminud, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3627
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3628
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3629
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_pminub
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminub, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminub, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3632
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3633
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pminuw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminuw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminuw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3637
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3638
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pminud
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pminud, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpminud, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3642
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3643
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpcklbw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpcklbw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpcklbw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3649
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3651
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_punpckhbw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Punpckhbw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpunpckhbw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3657
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3659
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_packsswb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Packsswb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpacksswb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3665
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3667
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_packssdw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Packssdw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpackssdw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3673
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3675
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_packuswb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Packuswb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpackuswb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3681
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3683
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_packusdw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Packusdw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpackusdw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3689
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3691
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_palignr
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Palignr, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 2)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpalignr, [])
		10: Xmm	constructor(xmm_rmr_imm_vex, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3697
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3703
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_cmpp
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: FcmpImm	argument(3)
		4: Xmm	constructor(x64_cmpps, [1, 2, 3], 1)
		5: Xmm	constructor(x64_cmppd, [1, 2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3709
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3710
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_cmpps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: FcmpImm	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Cmpps, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: u8	constructor(encode_fcmp_imm, [2], 2)
		7: OperandSize	make_variant(OperandSize::Size32, [])
		8: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 6, 7], 3)
		9: bool	constructor(use_avx, [], 0)
		10: AvxOpcode	make_variant(AvxOpcode::Vcmpps, [])
		11: u8	constructor(encode_fcmp_imm, [2], 1)
		12: Xmm	constructor(xmm_rmr_imm_vex, [10, 0, 1, 11], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3713
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 6, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3719
			constraints = [
				9:	const_prim(true)
			]
			prio = 1
			result = 12
			impure = [11, 12]
		}
	]
}
term {
	name = x64_cmppd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: FcmpImm	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Cmppd, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: u8	constructor(encode_fcmp_imm, [2], 2)
		7: OperandSize	make_variant(OperandSize::Size32, [])
		8: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 6, 7], 3)
		9: bool	constructor(use_avx, [], 0)
		10: AvxOpcode	make_variant(AvxOpcode::Vcmppd, [])
		11: u8	constructor(encode_fcmp_imm, [2], 1)
		12: Xmm	constructor(xmm_rmr_imm_vex, [10, 0, 1, 11], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3730
			constraints = [
			]
			prio = 0
			result = 8
			impure = [4, 6, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3736
			constraints = [
				9:	const_prim(true)
			]
			prio = 1
			result = 12
			impure = [11, 12]
		}
	]
}
term {
	name = x64_pinsrb
	bindings = [
		0: Xmm	argument(0)
		1: GprMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pinsrb, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(gpr_mem_to_reg_mem, [1], 2)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 3)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpinsrb, [])
		10: Xmm	constructor(xmm_vex_pinsr, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3745
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3751
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_pinsrw
	bindings = [
		0: Xmm	argument(0)
		1: GprMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pinsrw, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(gpr_mem_to_reg_mem, [1], 2)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 3)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpinsrw, [])
		10: Xmm	constructor(xmm_vex_pinsr, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3757
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3763
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_pinsrd
	bindings = [
		0: Xmm	argument(0)
		1: GprMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pinsrd, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(gpr_mem_to_reg_mem, [1], 2)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 3)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpinsrd, [])
		10: Xmm	constructor(xmm_vex_pinsr, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3769
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3775
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_pinsrq
	bindings = [
		0: Xmm	argument(0)
		1: GprMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pinsrd, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(gpr_mem_to_reg_mem, [1], 2)
		6: OperandSize	make_variant(OperandSize::Size64, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 3)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vpinsrq, [])
		10: Xmm	constructor(xmm_vex_pinsr, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3781
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3787
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_roundss
	bindings = [
		0: XmmMem	argument(0)
		1: RoundImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Roundss, [])
		3: Type	const_prim(F32)
		4: Xmm	constructor(put_xmm_mem_in_xmm, [3, 0], 1)
		5: XmmMemAligned	constructor(xmm_to_xmm_mem_aligned, [4], 2)
		6: u8	constructor(encode_round_imm, [1], 3)
		7: Xmm	constructor(xmm_unary_rm_r_imm, [2, 5, 6], 4)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vroundss, [])
		10: u8	constructor(encode_round_imm, [1], 1)
		11: Xmm	constructor(xmm_unary_rm_r_imm_vex, [9, 0, 10], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3810
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 6, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3812
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = x64_roundsd
	bindings = [
		0: XmmMem	argument(0)
		1: RoundImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Roundsd, [])
		3: Type	const_prim(F64)
		4: Xmm	constructor(put_xmm_mem_in_xmm, [3, 0], 1)
		5: XmmMemAligned	constructor(xmm_to_xmm_mem_aligned, [4], 2)
		6: u8	constructor(encode_round_imm, [1], 3)
		7: Xmm	constructor(xmm_unary_rm_r_imm, [2, 5, 6], 4)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vroundsd, [])
		10: u8	constructor(encode_round_imm, [1], 1)
		11: Xmm	constructor(xmm_unary_rm_r_imm_vex, [9, 0, 10], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3820
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 6, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3822
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 11
			impure = [10, 11]
		}
	]
}
term {
	name = put_xmm_mem_in_xmm
	bindings = [
		0: Type	argument(0)
		1: XmmMem	argument(1)
		2: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		3: Reg	match_variant(2, RegMem::Reg, reg)
		4: Xmm	constructor(xmm_new, [3], 1)
		5: SyntheticAmode	match_variant(2, RegMem::Mem, addr)
		6: ExtKind	make_variant(ExtKind::None, [])
		7: Reg	constructor(x64_load, [0, 5, 6], 1)
		8: Xmm	constructor(xmm_new, [7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3831
			constraints = [
				2:	variant(RegMem::Reg)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3834
			constraints = [
				2:	variant(RegMem::Mem)
			]
			prio = 0
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_roundps
	bindings = [
		0: XmmMem	argument(0)
		1: RoundImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Roundps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		4: u8	constructor(encode_round_imm, [1], 2)
		5: Xmm	constructor(xmm_unary_rm_r_imm, [2, 3, 4], 3)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vroundps, [])
		8: u8	constructor(encode_round_imm, [1], 1)
		9: Xmm	constructor(xmm_unary_rm_r_imm_vex, [7, 0, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3840
			constraints = [
			]
			prio = 0
			result = 5
			impure = [3, 4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3842
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 9
			impure = [8, 9]
		}
	]
}
term {
	name = x64_roundpd
	bindings = [
		0: XmmMem	argument(0)
		1: RoundImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Roundpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		4: u8	constructor(encode_round_imm, [1], 2)
		5: Xmm	constructor(xmm_unary_rm_r_imm, [2, 3, 4], 3)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vroundpd, [])
		8: u8	constructor(encode_round_imm, [1], 1)
		9: Xmm	constructor(xmm_unary_rm_r_imm_vex, [7, 0, 8], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3848
			constraints = [
			]
			prio = 0
			result = 5
			impure = [3, 4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3850
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 9
			impure = [8, 9]
		}
	]
}
term {
	name = x64_pmaddwd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaddwd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaddwd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3856
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3858
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pmaddubsw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmaddubsw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpmaddubsw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3863
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3865
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_insertps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Insertps, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 2)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vinsertps, [])
		10: Xmm	constructor(xmm_rmr_imm_vex, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3871
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3877
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_pshufd
	bindings = [
		0: XmmMem	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pshufd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		4: Xmm	constructor(xmm_unary_rm_r_imm, [2, 3, 1], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpshufd, [])
		7: Xmm	constructor(xmm_unary_rm_r_imm_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3883
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3885
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pshufb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pshufb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpshufb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3891
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3893
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pshuflw
	bindings = [
		0: XmmMem	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pshuflw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		4: Xmm	constructor(xmm_unary_rm_r_imm, [2, 3, 1], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpshuflw, [])
		7: Xmm	constructor(xmm_unary_rm_r_imm_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3899
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3901
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pshufhw
	bindings = [
		0: XmmMem	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pshufhw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		4: Xmm	constructor(xmm_unary_rm_r_imm, [2, 3, 1], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpshufhw, [])
		7: Xmm	constructor(xmm_unary_rm_r_imm_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3907
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3909
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_shufps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Shufps, [])
		4: Reg	constructor(xmm_to_reg, [0], 1)
		5: RegMem	constructor(xmm_mem_to_reg_mem, [1], 0)
		6: OperandSize	make_variant(OperandSize::Size32, [])
		7: Xmm	constructor(xmm_rm_r_imm, [3, 4, 5, 2, 6], 2)
		8: bool	constructor(use_avx, [], 0)
		9: AvxOpcode	make_variant(AvxOpcode::Vshufps, [])
		10: Xmm	constructor(xmm_rmr_imm_vex, [9, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3915
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3921
			constraints = [
				8:	const_prim(true)
			]
			prio = 1
			result = 10
			impure = [10]
		}
	]
}
term {
	name = x64_pabsb
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pabsb, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpabsb, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3927
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3929
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pabsw
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pabsw, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpabsw, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3935
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3937
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pabsd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Pabsd, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpabsd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3943
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3945
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_vcvtudq2ps
	bindings = [
		0: XmmMem	argument(0)
		1: Avx512Opcode	make_variant(Avx512Opcode::Vcvtudq2ps, [])
		2: Xmm	constructor(xmm_unary_rm_r_evex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3951
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vpabsq
	bindings = [
		0: XmmMem	argument(0)
		1: Avx512Opcode	make_variant(Avx512Opcode::Vpabsq, [])
		2: Xmm	constructor(xmm_unary_rm_r_evex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3956
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vpopcntb
	bindings = [
		0: XmmMem	argument(0)
		1: Avx512Opcode	make_variant(Avx512Opcode::Vpopcntb, [])
		2: Xmm	constructor(xmm_unary_rm_r_evex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3961
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vpmullq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: Avx512Opcode	make_variant(Avx512Opcode::Vpmullq, [])
		3: Xmm	constructor(xmm_rm_r_evex, [2, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3968
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
	]
}
term {
	name = x64_vpermi2b
	bindings = [
		0: Xmm	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: WritableXmm	constructor(temp_writable_xmm, [], 1)
		4: Avx512Opcode	make_variant(Avx512Opcode::Vpermi2b, [])
		5: MInst	make_variant(MInst::XmmRmREvex3, [4, 0, 1, 2, 3])
		6: Unit	constructor(emit, [5], 2)
		7: Xmm	constructor(writable_xmm_to_xmm, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3977
			constraints = [
			]
			prio = 0
			result = 7
			impure = [3, 6, 7]
		}
	]
}
term {
	name = x64_psllw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psllw, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsllw, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3988
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3990
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pslld
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pslld, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpslld, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3996
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 3998
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psllq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psllq, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsllq, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4004
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4006
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psrlw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psrlw, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsrlw, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4012
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4014
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psrld
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psrld, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsrld, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4020
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4022
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psrlq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psrlq, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsrlq, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4028
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4030
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psraw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psraw, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsraw, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4036
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4038
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_psrad
	bindings = [
		0: Xmm	argument(0)
		1: XmmMemImm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Psrad, [])
		3: XmmMemAlignedImm	constructor(xmm_mem_imm_to_xmm_mem_aligned_imm, [1], 1)
		4: Xmm	constructor(xmm_rmi_xmm, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpsrad, [])
		7: Xmm	constructor(xmm_rmir_vex, [6, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4044
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4046
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_vpsraq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: Avx512Opcode	make_variant(Avx512Opcode::Vpsraq, [])
		3: Xmm	constructor(xmm_rm_r_evex, [2, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4052
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
	]
}
term {
	name = x64_vpsraq_imm
	bindings = [
		0: XmmMem	argument(0)
		1: u8	argument(1)
		2: Avx512Opcode	make_variant(Avx512Opcode::VpsraqImm, [])
		3: Xmm	constructor(xmm_unary_rm_r_imm_evex, [2, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4057
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
	]
}
term {
	name = x64_pextrb
	bindings = [
		0: Xmm	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pextrb, [])
		3: Gpr	constructor(xmm_to_gpr_imm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpextrb, [])
		6: Gpr	constructor(xmm_to_gpr_imm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4062
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4064
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pextrb_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pextrb, [])
		4: SideEffectNoResult	constructor(xmm_movrm_imm, [3, 0, 1, 2], 1)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpextrb, [])
		7: SideEffectNoResult	constructor(xmm_movrm_imm_vex, [6, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4069
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4071
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pextrw
	bindings = [
		0: Xmm	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pextrw, [])
		3: Gpr	constructor(xmm_to_gpr_imm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpextrw, [])
		6: Gpr	constructor(xmm_to_gpr_imm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4077
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4079
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pextrw_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pextrw, [])
		4: SideEffectNoResult	constructor(xmm_movrm_imm, [3, 0, 1, 2], 1)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpextrw, [])
		7: SideEffectNoResult	constructor(xmm_movrm_imm_vex, [6, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4084
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4086
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pextrd
	bindings = [
		0: Xmm	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pextrd, [])
		3: Gpr	constructor(xmm_to_gpr_imm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpextrd, [])
		6: Gpr	constructor(xmm_to_gpr_imm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4092
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4094
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pextrd_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pextrd, [])
		4: SideEffectNoResult	constructor(xmm_movrm_imm, [3, 0, 1, 2], 1)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpextrd, [])
		7: SideEffectNoResult	constructor(xmm_movrm_imm_vex, [6, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4099
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4101
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pextrq
	bindings = [
		0: Xmm	argument(0)
		1: u8	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pextrq, [])
		3: Gpr	constructor(xmm_to_gpr_imm, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpextrq, [])
		6: Gpr	constructor(xmm_to_gpr_imm_vex, [5, 0, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4107
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4109
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pextrq_store
	bindings = [
		0: SyntheticAmode	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Pextrq, [])
		4: SideEffectNoResult	constructor(xmm_movrm_imm, [3, 0, 1, 2], 1)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpextrq, [])
		7: SideEffectNoResult	constructor(xmm_movrm_imm_vex, [6, 0, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4114
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4116
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
	]
}
term {
	name = x64_pmovmskb
	bindings = [
		0: OperandSize	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pmovmskb, [])
		3: Gpr	constructor(xmm_to_gpr, [2, 1, 0], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vpmovmskb, [])
		6: Gpr	constructor(xmm_to_gpr_vex, [5, 1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4122
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4124
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movmskps
	bindings = [
		0: OperandSize	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movmskps, [])
		3: Gpr	constructor(xmm_to_gpr, [2, 1, 0], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovmskps, [])
		6: Gpr	constructor(xmm_to_gpr_vex, [5, 1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4130
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4132
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_movmskpd
	bindings = [
		0: OperandSize	argument(0)
		1: Xmm	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Movmskpd, [])
		3: Gpr	constructor(xmm_to_gpr, [2, 1, 0], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmovmskpd, [])
		6: Gpr	constructor(xmm_to_gpr_vex, [5, 1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4138
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4140
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_not
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: MInst	make_variant(MInst::Not, [3, 1, 2])
		5: Unit	constructor(emit, [4], 3)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4146
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
	]
}
term {
	name = x64_neg
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		4: MInst	make_variant(MInst::Neg, [3, 1, 2])
		5: Unit	constructor(emit, [4], 3)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4154
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
	]
}
term {
	name = x64_neg_paired
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		4: MInst	make_variant(MInst::Neg, [3, 1, 2])
		5: Reg	constructor(writable_gpr_to_r_reg, [2], 3)
		6: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsResultWithConsumer, [4, 5])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4162
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5]
		}
	]
}
term {
	name = x64_lea
	bindings = [
		0: Type	argument(0)
		1: SyntheticAmode	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: MInst	make_variant(MInst::LoadEffectiveAddress, [1, 2, 3])
		5: Unit	constructor(emit, [4], 3)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4169
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
	]
}
term {
	name = x64_ud2
	bindings = [
		0: TrapCode	argument(0)
		1: MInst	make_variant(MInst::Ud2, [0])
		2: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4176
			constraints = [
			]
			prio = 0
			result = 2
		}
	]
}
term {
	name = x64_hlt
	bindings = [
		0: MInst	make_variant(MInst::Hlt, [])
		1: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [0])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4181
			constraints = [
			]
			prio = 0
			result = 1
		}
	]
}
term {
	name = x64_lzcnt
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: UnaryRmROpcode	make_variant(UnaryRmROpcode::Lzcnt, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4186
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_tzcnt
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: UnaryRmROpcode	make_variant(UnaryRmROpcode::Tzcnt, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4191
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_bsr
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: UnaryRmROpcode	make_variant(UnaryRmROpcode::Bsr, [])
		5: GprMem	constructor(gpr_to_gpr_mem, [1], 3)
		6: MInst	make_variant(MInst::UnaryRmR, [3, 4, 5, 2])
		7: Reg	constructor(writable_gpr_to_r_reg, [2], 4)
		8: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsReg, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4196
			constraints = [
			]
			prio = 0
			result = 8
			impure = [2, 3, 5, 7]
		}
	]
}
term {
	name = bsr_or_else
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	argument(2)
		3: ProducesFlags	constructor(x64_bsr, [0, 1], 1)
		4: Reg	constructor(produces_flags_get_reg, [3], 2)
		5: Gpr	constructor(gpr_new, [4], 3)
		6: CC	make_variant(CC::Z, [])
		7: GprMem	constructor(gpr_to_gpr_mem, [2], 4)
		8: ConsumesFlags	constructor(cmove, [0, 6, 7, 5], 5)
		9: ProducesFlags	constructor(produces_flags_ignore, [3], 6)
		10: Reg	constructor(with_flags_reg, [9, 8], 7)
		11: Gpr	constructor(gpr_new, [10], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4205
			constraints = [
			]
			prio = 0
			result = 11
			impure = [3, 4, 5, 7, 8, 9, 10, 11]
		}
	]
}
term {
	name = x64_bsf
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: UnaryRmROpcode	make_variant(UnaryRmROpcode::Bsf, [])
		5: GprMem	constructor(gpr_to_gpr_mem, [1], 3)
		6: MInst	make_variant(MInst::UnaryRmR, [3, 4, 5, 2])
		7: Reg	constructor(writable_gpr_to_r_reg, [2], 4)
		8: ProducesFlags	make_variant(ProducesFlags::ProducesFlagsReturnsReg, [6, 7])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4216
			constraints = [
			]
			prio = 0
			result = 8
			impure = [2, 3, 5, 7]
		}
	]
}
term {
	name = bsf_or_else
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	argument(2)
		3: ProducesFlags	constructor(x64_bsf, [0, 1], 1)
		4: Reg	constructor(produces_flags_get_reg, [3], 2)
		5: Gpr	constructor(gpr_new, [4], 3)
		6: CC	make_variant(CC::Z, [])
		7: GprMem	constructor(gpr_to_gpr_mem, [2], 4)
		8: ConsumesFlags	constructor(cmove, [0, 6, 7, 5], 5)
		9: ProducesFlags	constructor(produces_flags_ignore, [3], 6)
		10: Reg	constructor(with_flags_reg, [9, 8], 7)
		11: Gpr	constructor(gpr_new, [10], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4225
			constraints = [
			]
			prio = 0
			result = 11
			impure = [3, 4, 5, 7, 8, 9, 10, 11]
		}
	]
}
term {
	name = x64_blsi
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: UnaryRmRVexOpcode	make_variant(UnaryRmRVexOpcode::Blsi, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r_vex, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4236
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_blsmsk
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: UnaryRmRVexOpcode	make_variant(UnaryRmRVexOpcode::Blsmsk, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r_vex, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4241
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_blsr
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: UnaryRmRVexOpcode	make_variant(UnaryRmRVexOpcode::Blsr, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r_vex, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4246
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_sarx
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: Gpr	argument(2)
		3: AluRmROpcode	make_variant(AluRmROpcode::Sarx, [])
		4: Gpr	constructor(alu_rm_r_vex, [0, 3, 2, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4251
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_shrx
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: Gpr	argument(2)
		3: AluRmROpcode	make_variant(AluRmROpcode::Shrx, [])
		4: Gpr	constructor(alu_rm_r_vex, [0, 3, 2, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4256
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_shlx
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: Gpr	argument(2)
		3: AluRmROpcode	make_variant(AluRmROpcode::Shlx, [])
		4: Gpr	constructor(alu_rm_r_vex, [0, 3, 2, 1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4261
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_rorx
	bindings = [
		0: Type	argument(0)
		1: GprMem	argument(1)
		2: u8	argument(2)
		3: UnaryRmRImmVexOpcode	make_variant(UnaryRmRImmVexOpcode::Rorx, [])
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		5: Gpr	constructor(unary_rm_r_imm_vex, [3, 1, 4, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4266
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
	]
}
term {
	name = x64_popcnt
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: UnaryRmROpcode	make_variant(UnaryRmROpcode::Popcnt, [])
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		4: Gpr	constructor(unary_rm_r, [2, 1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4274
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = x64_minss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Minss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vminss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4279
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4281
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_minsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Minsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vminsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4287
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4289
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_minps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Minps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vminps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4295
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4297
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_minpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Minpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vminpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4303
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4305
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_maxss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Maxss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmaxss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4311
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4313
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_maxsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Maxsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vmaxsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4319
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4321
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_maxps
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Maxps, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmaxps, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4327
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4329
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_maxpd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Maxpd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vmaxpd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4335
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4337
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_vfmadd213
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: XmmMem	argument(3)
		4: AvxOpcode	make_variant(AvxOpcode::Vfmadd213ss, [])
		5: Xmm	constructor(xmm_rmr_vex3, [4, 1, 2, 3], 1)
		6: AvxOpcode	make_variant(AvxOpcode::Vfmadd213sd, [])
		7: Xmm	constructor(xmm_rmr_vex3, [6, 1, 2, 3], 1)
		8: AvxOpcode	make_variant(AvxOpcode::Vfmadd213ps, [])
		9: Xmm	constructor(xmm_rmr_vex3, [8, 1, 2, 3], 1)
		10: AvxOpcode	make_variant(AvxOpcode::Vfmadd213pd, [])
		11: Xmm	constructor(xmm_rmr_vex3, [10, 1, 2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4343
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4344
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4345
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4346
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 11
			impure = [11]
		}
	]
}
term {
	name = x64_vfmadd132
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: XmmMem	argument(3)
		4: AvxOpcode	make_variant(AvxOpcode::Vfmadd132ss, [])
		5: Xmm	constructor(xmm_rmr_vex3, [4, 1, 2, 3], 1)
		6: AvxOpcode	make_variant(AvxOpcode::Vfmadd132sd, [])
		7: Xmm	constructor(xmm_rmr_vex3, [6, 1, 2, 3], 1)
		8: AvxOpcode	make_variant(AvxOpcode::Vfmadd132ps, [])
		9: Xmm	constructor(xmm_rmr_vex3, [8, 1, 2, 3], 1)
		10: AvxOpcode	make_variant(AvxOpcode::Vfmadd132pd, [])
		11: Xmm	constructor(xmm_rmr_vex3, [10, 1, 2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4350
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4351
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4352
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4353
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 11
			impure = [11]
		}
	]
}
term {
	name = x64_vfnmadd213
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: XmmMem	argument(3)
		4: AvxOpcode	make_variant(AvxOpcode::Vfnmadd213ss, [])
		5: Xmm	constructor(xmm_rmr_vex3, [4, 1, 2, 3], 1)
		6: AvxOpcode	make_variant(AvxOpcode::Vfnmadd213sd, [])
		7: Xmm	constructor(xmm_rmr_vex3, [6, 1, 2, 3], 1)
		8: AvxOpcode	make_variant(AvxOpcode::Vfnmadd213ps, [])
		9: Xmm	constructor(xmm_rmr_vex3, [8, 1, 2, 3], 1)
		10: AvxOpcode	make_variant(AvxOpcode::Vfnmadd213pd, [])
		11: Xmm	constructor(xmm_rmr_vex3, [10, 1, 2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4357
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4358
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4359
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4360
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 11
			impure = [11]
		}
	]
}
term {
	name = x64_vfnmadd132
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: XmmMem	argument(3)
		4: AvxOpcode	make_variant(AvxOpcode::Vfnmadd132ss, [])
		5: Xmm	constructor(xmm_rmr_vex3, [4, 1, 2, 3], 1)
		6: AvxOpcode	make_variant(AvxOpcode::Vfnmadd132sd, [])
		7: Xmm	constructor(xmm_rmr_vex3, [6, 1, 2, 3], 1)
		8: AvxOpcode	make_variant(AvxOpcode::Vfnmadd132ps, [])
		9: Xmm	constructor(xmm_rmr_vex3, [8, 1, 2, 3], 1)
		10: AvxOpcode	make_variant(AvxOpcode::Vfnmadd132pd, [])
		11: Xmm	constructor(xmm_rmr_vex3, [10, 1, 2, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4364
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4365
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4366
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4367
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 11
			impure = [11]
		}
	]
}
term {
	name = x64_sqrtss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Sqrtss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsqrtss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4378
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4379
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_sqrtsd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Sqrtsd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsqrtsd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4387
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4388
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_sqrtps
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Sqrtps, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsqrtps, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4394
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4395
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_sqrtpd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Sqrtpd, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vsqrtpd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4401
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4402
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvtss2sd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Cvtss2sd, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtss2sd, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4410
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4411
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_cvtsd2ss
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Cvtsd2ss, [])
		3: Xmm	constructor(xmm_rm_r_unaligned, [2, 0, 1], 1)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtsd2ss, [])
		6: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		7: Xmm	constructor(xmm_rmir_vex, [5, 0, 6], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4419
			constraints = [
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4420
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [6, 7]
		}
	]
}
term {
	name = x64_cvtdq2ps
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvtdq2ps, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtdq2ps, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4426
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4427
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvtps2pd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvtps2pd, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtps2pd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4433
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4434
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvtpd2ps
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvtpd2ps, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtpd2ps, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4440
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4441
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvtdq2pd
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvtdq2pd, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvtdq2pd, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4447
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4448
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvtsi2ss
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: GprMem	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Cvtsi2ss, [])
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		5: Xmm	constructor(cvt_int_to_float, [3, 1, 2, 4], 2)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vcvtsi2ss, [])
		8: Xmm	constructor(cvt_int_to_float_vex, [7, 1, 2, 4], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4454
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4456
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [4, 8]
		}
	]
}
term {
	name = x64_cvtsi2sd
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: GprMem	argument(2)
		3: SseOpcode	make_variant(SseOpcode::Cvtsi2sd, [])
		4: OperandSize	constructor(raw_operand_size_of_type, [0], 1)
		5: Xmm	constructor(cvt_int_to_float, [3, 1, 2, 4], 2)
		6: bool	constructor(use_avx, [], 0)
		7: AvxOpcode	make_variant(AvxOpcode::Vcvtsi2sd, [])
		8: Xmm	constructor(cvt_int_to_float_vex, [7, 1, 2, 4], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4462
			constraints = [
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4464
			constraints = [
				6:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [4, 8]
		}
	]
}
term {
	name = x64_cvttps2dq
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvttps2dq, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvttps2dq, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4470
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4472
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_cvttpd2dq
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Cvttpd2dq, [])
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [0], 1)
		3: Xmm	constructor(xmm_unary_rm_r, [1, 2], 2)
		4: bool	constructor(use_avx, [], 0)
		5: AvxOpcode	make_variant(AvxOpcode::Vcvttpd2dq, [])
		6: Xmm	constructor(xmm_unary_rm_r_vex, [5, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4478
			constraints = [
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4480
			constraints = [
				4:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [6]
		}
	]
}
term {
	name = x64_pcmpeq
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pcmpeqb, [1, 2], 1)
		4: Xmm	constructor(x64_pcmpeqw, [1, 2], 1)
		5: Xmm	constructor(x64_pcmpeqd, [1, 2], 1)
		6: bool	constructor(use_sse41, [], 0)
		7: Xmm	constructor(x64_pcmpeqq, [1, 2], 1)
		8: XmmMem	constructor(xmm_to_xmm_mem, [5], 2)
		9: u8	const_int(177, u8)
		10: Xmm	constructor(x64_pshufd, [8, 9], 3)
		11: XmmMem	constructor(xmm_to_xmm_mem, [10], 4)
		12: Xmm	constructor(x64_pand, [5, 11], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4486
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4487
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4488
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4489
			constraints = [
				0:	const_prim(I64X2)
				6:	const_prim(true)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4498
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = -1
			result = 12
			impure = [5, 8, 10, 11, 12]
		}
	]
}
term {
	name = x64_pcmpeqb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpeqb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpeqb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4504
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4505
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpeqw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpeqw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpeqw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4509
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4510
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpeqd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpeqd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpeqd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4514
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4515
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpeqq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpeqq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpeqq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4519
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4520
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpgt
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_pcmpgtb, [1, 2], 1)
		4: Xmm	constructor(x64_pcmpgtw, [1, 2], 1)
		5: Xmm	constructor(x64_pcmpgtd, [1, 2], 1)
		6: bool	constructor(use_sse42, [], 0)
		7: Xmm	constructor(x64_pcmpgtq, [1, 2], 1)
		8: u128	const_int(39614081257132168798919458816, u128)
		9: VCodeConstant	constructor(emit_u128_le_const, [8], 1)
		10: XmmMem	constructor(const_to_xmm_mem, [9], 2)
		11: Xmm	constructor(x64_movdqu_load, [10], 3)
		12: XmmMem	constructor(xmm_to_xmm_mem, [1], 4)
		13: Xmm	constructor(x64_pxor, [11, 12], 5)
		14: Xmm	constructor(x64_pxor, [11, 2], 6)
		15: XmmMem	constructor(xmm_to_xmm_mem, [14], 7)
		16: Xmm	constructor(x64_pcmpgtd, [13, 15], 8)
		17: XmmMem	constructor(xmm_to_xmm_mem, [16], 9)
		18: u8	const_int(160, u8)
		19: Xmm	constructor(x64_pshufd, [17, 18], 10)
		20: XmmMem	constructor(xmm_to_xmm_mem, [16], 11)
		21: u8	const_int(245, u8)
		22: Xmm	constructor(x64_pshufd, [20, 21], 12)
		23: XmmMem	constructor(xmm_to_xmm_mem, [14], 13)
		24: Xmm	constructor(x64_pcmpeqd, [13, 23], 14)
		25: XmmMem	constructor(xmm_to_xmm_mem, [24], 15)
		26: Xmm	constructor(x64_pshufd, [25, 21], 16)
		27: XmmMem	constructor(xmm_to_xmm_mem, [26], 17)
		28: Xmm	constructor(x64_pand, [19, 27], 18)
		29: XmmMem	constructor(xmm_to_xmm_mem, [22], 19)
		30: Xmm	constructor(x64_por, [28, 29], 20)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4526
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4527
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4528
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 5
			impure = [5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4532
			constraints = [
				0:	const_prim(I64X2)
				6:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4561
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 0
			result = 30
			impure = [9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30]
		}
	]
}
term {
	name = x64_pcmpgtb
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpgtb, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpgtb, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4576
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4577
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpgtw
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpgtw, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpgtw, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4581
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4582
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpgtd
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpgtd, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpgtd, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4586
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4587
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = x64_pcmpgtq
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	argument(1)
		2: SseOpcode	make_variant(SseOpcode::Pcmpgtq, [])
		3: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 1)
		4: Xmm	constructor(xmm_rm_r, [2, 0, 3], 2)
		5: bool	constructor(use_avx, [], 0)
		6: AvxOpcode	make_variant(AvxOpcode::Vpcmpgtq, [])
		7: XmmMemImm	constructor(xmm_mem_to_xmm_mem_imm, [1], 1)
		8: Xmm	constructor(xmm_rmir_vex, [6, 0, 7], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4591
			constraints = [
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4592
			constraints = [
				5:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [7, 8]
		}
	]
}
term {
	name = alu_rm
	bindings = [
		0: Type	argument(0)
		1: AluRmiROpcode	argument(1)
		2: Amode	argument(2)
		3: Gpr	argument(3)
		4: OperandSize	constructor(operand_size_of_type_32_64, [0], 1)
		5: SyntheticAmode	constructor(amode_to_synthetic_amode, [2], 2)
		6: MInst	make_variant(MInst::AluRM, [4, 1, 5, 3])
		7: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [6])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4598
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5]
		}
	]
}
term {
	name = x64_add_mem
	bindings = [
		0: Type	argument(0)
		1: Amode	argument(1)
		2: Gpr	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Add, [])
		4: SideEffectNoResult	constructor(alu_rm, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4603
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_sub_mem
	bindings = [
		0: Type	argument(0)
		1: Amode	argument(1)
		2: Gpr	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Sub, [])
		4: SideEffectNoResult	constructor(alu_rm, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4607
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_and_mem
	bindings = [
		0: Type	argument(0)
		1: Amode	argument(1)
		2: Gpr	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::And, [])
		4: SideEffectNoResult	constructor(alu_rm, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4611
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_or_mem
	bindings = [
		0: Type	argument(0)
		1: Amode	argument(1)
		2: Gpr	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Or, [])
		4: SideEffectNoResult	constructor(alu_rm, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4615
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = x64_xor_mem
	bindings = [
		0: Type	argument(0)
		1: Amode	argument(1)
		2: Gpr	argument(2)
		3: AluRmiROpcode	make_variant(AluRmiROpcode::Xor, [])
		4: SideEffectNoResult	constructor(alu_rm, [0, 3, 1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4619
			constraints = [
			]
			prio = 0
			result = 4
			impure = [4]
		}
	]
}
term {
	name = trap_if
	bindings = [
		0: CC	argument(0)
		1: TrapCode	argument(1)
		2: MInst	make_variant(MInst::TrapIf, [0, 1])
		3: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect, [2])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4624
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = trap_if_and
	bindings = [
		0: CC	argument(0)
		1: CC	argument(1)
		2: TrapCode	argument(2)
		3: MInst	make_variant(MInst::TrapIfAnd, [0, 1, 2])
		4: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4629
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = trap_if_or
	bindings = [
		0: CC	argument(0)
		1: CC	argument(1)
		2: TrapCode	argument(2)
		3: MInst	make_variant(MInst::TrapIfOr, [0, 1, 2])
		4: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4634
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = trap_if_icmp
	bindings = [
		0: IcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, IcmpCondResult::Condition, producer)
		2: CC	match_variant(0, IcmpCondResult::Condition, cc)
		3: TrapCode	argument(1)
		4: ConsumesFlags	constructor(trap_if, [2, 3], 1)
		5: SideEffectNoResult	constructor(with_flags_side_effect, [1, 4], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4638
			constraints = [
				0:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
	]
}
term {
	name = trap_if_fcmp
	bindings = [
		0: FcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, FcmpCondResult::Condition, producer)
		2: CC	match_variant(0, FcmpCondResult::Condition, cc)
		3: TrapCode	argument(1)
		4: ConsumesFlags	constructor(trap_if, [2, 3], 1)
		5: SideEffectNoResult	constructor(with_flags_side_effect, [1, 4], 2)
		6: ProducesFlags	match_variant(0, FcmpCondResult::AndCondition, producer)
		7: CC	match_variant(0, FcmpCondResult::AndCondition, cc1)
		8: CC	match_variant(0, FcmpCondResult::AndCondition, cc2)
		9: ConsumesFlags	constructor(trap_if_and, [7, 8, 3], 1)
		10: SideEffectNoResult	constructor(with_flags_side_effect, [6, 9], 2)
		11: ProducesFlags	match_variant(0, FcmpCondResult::OrCondition, producer)
		12: CC	match_variant(0, FcmpCondResult::OrCondition, cc1)
		13: CC	match_variant(0, FcmpCondResult::OrCondition, cc2)
		14: ConsumesFlags	constructor(trap_if_or, [12, 13, 3], 1)
		15: SideEffectNoResult	constructor(with_flags_side_effect, [11, 14], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4642
			constraints = [
				0:	variant(FcmpCondResult::Condition)
			]
			prio = 0
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4644
			constraints = [
				0:	variant(FcmpCondResult::AndCondition)
			]
			prio = 0
			result = 10
			impure = [9, 10]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4646
			constraints = [
				0:	variant(FcmpCondResult::OrCondition)
			]
			prio = 0
			result = 15
			impure = [14, 15]
		}
	]
}
term {
	name = x64_movddup
	bindings = [
		0: XmmMem	argument(0)
		1: SseOpcode	make_variant(SseOpcode::Movddup, [])
		2: Xmm	constructor(xmm_unary_rm_r_unaligned, [1, 0], 1)
		3: bool	constructor(use_avx, [], 0)
		4: AvxOpcode	make_variant(AvxOpcode::Vmovddup, [])
		5: Xmm	constructor(xmm_unary_rm_r_vex, [4, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4651
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4653
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [5]
		}
	]
}
term {
	name = x64_vpbroadcastb
	bindings = [
		0: XmmMem	argument(0)
		1: AvxOpcode	make_variant(AvxOpcode::Vpbroadcastb, [])
		2: Xmm	constructor(xmm_unary_rm_r_vex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4659
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vpbroadcastw
	bindings = [
		0: XmmMem	argument(0)
		1: AvxOpcode	make_variant(AvxOpcode::Vpbroadcastw, [])
		2: Xmm	constructor(xmm_unary_rm_r_vex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4664
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vpbroadcastd
	bindings = [
		0: XmmMem	argument(0)
		1: AvxOpcode	make_variant(AvxOpcode::Vpbroadcastd, [])
		2: Xmm	constructor(xmm_unary_rm_r_vex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4669
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = x64_vbroadcastss
	bindings = [
		0: XmmMem	argument(0)
		1: AvxOpcode	make_variant(AvxOpcode::Vbroadcastss, [])
		2: Xmm	constructor(xmm_unary_rm_r_vex, [1, 0], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4674
			constraints = [
			]
			prio = 0
			result = 2
			impure = [2]
		}
	]
}
term {
	name = jmp_known
	bindings = [
		0: MachLabel	argument(0)
		1: MInst	make_variant(MInst::JmpKnown, [0])
		2: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4681
			constraints = [
			]
			prio = 0
			result = 2
		}
	]
}
term {
	name = jmp_if
	bindings = [
		0: CC	argument(0)
		1: MachLabel	argument(1)
		2: MInst	make_variant(MInst::JmpIf, [0, 1])
		3: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect, [2])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4685
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = jmp_cond
	bindings = [
		0: CC	argument(0)
		1: MachLabel	argument(1)
		2: MachLabel	argument(2)
		3: MInst	make_variant(MInst::JmpCond, [0, 1, 2])
		4: ConsumesFlags	make_variant(ConsumesFlags::ConsumesFlagsSideEffect, [3])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4690
			constraints = [
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = jmp_cond_icmp
	bindings = [
		0: IcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, IcmpCondResult::Condition, producer)
		2: CC	match_variant(0, IcmpCondResult::Condition, cc)
		3: MachLabel	argument(1)
		4: MachLabel	argument(2)
		5: ConsumesFlags	constructor(jmp_cond, [2, 3, 4], 1)
		6: SideEffectNoResult	constructor(with_flags_side_effect, [1, 5], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4695
			constraints = [
				0:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 6
			impure = [5, 6]
		}
	]
}
term {
	name = jmp_cond_fcmp
	bindings = [
		0: FcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, FcmpCondResult::Condition, producer)
		2: CC	match_variant(0, FcmpCondResult::Condition, cc)
		3: MachLabel	argument(1)
		4: MachLabel	argument(2)
		5: ConsumesFlags	constructor(jmp_cond, [2, 3, 4], 1)
		6: SideEffectNoResult	constructor(with_flags_side_effect, [1, 5], 2)
		7: ProducesFlags	match_variant(0, FcmpCondResult::AndCondition, producer)
		8: CC	match_variant(0, FcmpCondResult::AndCondition, cc1)
		9: CC	match_variant(0, FcmpCondResult::AndCondition, cc2)
		10: CC	constructor(cc_invert, [8], 1)
		11: ConsumesFlags	constructor(jmp_if, [10, 4], 2)
		12: CC	constructor(cc_invert, [9], 3)
		13: ConsumesFlags	constructor(jmp_cond, [12, 4, 3], 4)
		14: ConsumesFlags	constructor(consumes_flags_concat, [11, 13], 5)
		15: SideEffectNoResult	constructor(with_flags_side_effect, [7, 14], 6)
		16: ProducesFlags	match_variant(0, FcmpCondResult::OrCondition, producer)
		17: CC	match_variant(0, FcmpCondResult::OrCondition, cc1)
		18: CC	match_variant(0, FcmpCondResult::OrCondition, cc2)
		19: ConsumesFlags	constructor(jmp_if, [17, 3], 1)
		20: ConsumesFlags	constructor(jmp_cond, [18, 3, 4], 2)
		21: ConsumesFlags	constructor(consumes_flags_concat, [19, 20], 3)
		22: SideEffectNoResult	constructor(with_flags_side_effect, [16, 21], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4700
			constraints = [
				0:	variant(FcmpCondResult::Condition)
			]
			prio = 0
			result = 6
			impure = [5, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4702
			constraints = [
				0:	variant(FcmpCondResult::AndCondition)
			]
			prio = 0
			result = 15
			impure = [10, 11, 12, 13, 14, 15]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4707
			constraints = [
				0:	variant(FcmpCondResult::OrCondition)
			]
			prio = 0
			result = 22
			impure = [19, 20, 21, 22]
		}
	]
}
term {
	name = jmp_table_seq
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: MachLabel	argument(2)
		3: BoxVecMachLabel	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: WritableGpr	constructor(temp_writable_gpr, [], 2)
		6: Reg	constructor(gpr_to_reg, [1], 3)
		7: WritableReg	constructor(writable_gpr_to_reg, [4], 4)
		8: WritableReg	constructor(writable_gpr_to_reg, [5], 5)
		9: MInst	make_variant(MInst::JmpTableSeq, [6, 7, 8, 2, 3])
		10: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [9])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4727
			constraints = [
			]
			prio = 0
			result = 10
			impure = [4, 5, 6, 7, 8]
		}
	]
}
term {
	name = icmp_cond_result
	bindings = [
		0: ProducesFlags	argument(0)
		1: CC	argument(1)
		2: IcmpCondResult	make_variant(IcmpCondResult::Condition, [0, 1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4746
			constraints = [
			]
			prio = 0
			result = 2
		}
	]
}
term {
	name = invert_icmp_cond_result
	bindings = [
		0: IcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, IcmpCondResult::Condition, producer)
		2: CC	match_variant(0, IcmpCondResult::Condition, cc)
		3: CC	constructor(cc_invert, [2], 1)
		4: IcmpCondResult	constructor(icmp_cond_result, [1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4749
			constraints = [
				0:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = lower_icmp_bool
	bindings = [
		0: IcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, IcmpCondResult::Condition, producer)
		2: CC	match_variant(0, IcmpCondResult::Condition, cc)
		3: ConsumesFlags	constructor(x64_setcc, [2], 1)
		4: ValueRegs	constructor(with_flags, [1, 3], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4754
			constraints = [
				0:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
	]
}
term {
	name = select_icmp
	bindings = [
		0: IcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, IcmpCondResult::Condition, producer)
		2: CC	match_variant(0, IcmpCondResult::Condition, cc)
		3: Value	argument(1)
		4: Type	extractor(value_type, 3)
		5: Option(RegisterClass)	extractor(type_register_class, 4)
		6: RegisterClass	match_some(5)
		7: bool	match_variant(6, RegisterClass::Gpr, single_register)
		8: Value	argument(2)
		9: Gpr	constructor(put_in_gpr, [3], 1)
		10: GprMem	constructor(gpr_to_gpr_mem, [9], 2)
		11: Gpr	constructor(put_in_gpr, [8], 3)
		12: ConsumesFlags	constructor(cmove, [4, 2, 10, 11], 4)
		13: ValueRegs	constructor(with_flags, [1, 12], 5)
		14: ConsumesFlags	constructor(cmove_from_values, [4, 2, 3, 8], 1)
		15: ValueRegs	constructor(with_flags, [1, 14], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4763
			constraints = [
				0:	variant(IcmpCondResult::Condition)
				5:	some
				6:	variant(RegisterClass::Gpr)
				7:	const_prim(true)
			]
			prio = 1
			result = 13
			impure = [9, 10, 11, 12, 13]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4767
			constraints = [
				0:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 15
			impure = [14, 15]
		}
	]
}
term {
	name = emit_cmp
	bindings = [
		0: IntCC	argument(0)
		1: Value	argument(1)
		2: Type	extractor(value_type, 1)
		3: Value	argument(2)
		4: OperandSize	constructor(raw_operand_size_of_type, [2], 1)
		5: Gpr	constructor(put_in_gpr, [1], 2)
		6: GprMemImm	constructor(put_in_gpr_mem_imm, [3], 3)
		7: ProducesFlags	constructor(x64_cmp, [4, 5, 6], 4)
		8: CC	constructor(intcc_to_cc, [0], 5)
		9: IcmpCondResult	constructor(icmp_cond_result, [7, 8], 6)
		10: Option(GprMemImm)	extractor(simm32_from_value, 1)
		11: GprMemImm	match_some(10)
		12: Gpr	constructor(put_in_gpr, [3], 2)
		13: ProducesFlags	constructor(x64_cmp, [4, 12, 11], 3)
		14: IntCC	constructor(intcc_swap_args, [0], 4)
		15: CC	constructor(intcc_to_cc, [14], 5)
		16: IcmpCondResult	constructor(icmp_cond_result, [13, 15], 6)
		17: Option(Inst)	extractor(def_inst, 3)
		18: Inst	match_some(17)
		19: InstructionData	extractor(inst_data, 18)
		20: Opcode	match_variant(19, InstructionData::UnaryImm, opcode)
		21: Imm64	match_variant(19, InstructionData::UnaryImm, imm)
		22: u64	extractor(u64_from_imm64, 21)
		23: Reg	constructor(put_in_reg, [1], 2)
		24: Gpr	constructor(gpr_new, [23], 3)
		25: GprMemImm	constructor(gpr_to_gpr_mem_imm, [24], 4)
		26: ProducesFlags	constructor(x64_test, [4, 24, 25], 5)
		27: CC	constructor(intcc_to_cc, [0], 6)
		28: IcmpCondResult	constructor(icmp_cond_result, [26, 27], 7)
		29: Option(Inst)	extractor(def_inst, 1)
		30: Inst	match_some(29)
		31: InstructionData	extractor(inst_data, 30)
		32: Opcode	match_variant(31, InstructionData::UnaryImm, opcode)
		33: Imm64	match_variant(31, InstructionData::UnaryImm, imm)
		34: u64	extractor(u64_from_imm64, 33)
		35: Type	extractor(value_type, 3)
		36: OperandSize	constructor(raw_operand_size_of_type, [35], 1)
		37: Reg	constructor(put_in_reg, [3], 2)
		38: Gpr	constructor(gpr_new, [37], 3)
		39: GprMemImm	constructor(gpr_to_gpr_mem_imm, [38], 4)
		40: ProducesFlags	constructor(x64_test, [36, 38, 39], 5)
		41: IntCC	constructor(intcc_swap_args, [0], 6)
		42: CC	constructor(intcc_to_cc, [41], 7)
		43: IcmpCondResult	constructor(icmp_cond_result, [40, 42], 8)
		44: ValueRegs	constructor(put_in_regs, [1], 1)
		45: usize	const_int(0, usize)
		46: Gpr	constructor(value_regs_get_gpr, [44, 45], 2)
		47: ValueRegs	constructor(put_in_regs, [1], 3)
		48: usize	const_int(1, usize)
		49: Gpr	constructor(value_regs_get_gpr, [47, 48], 4)
		50: ValueRegs	constructor(put_in_regs, [3], 5)
		51: Gpr	constructor(value_regs_get_gpr, [50, 45], 6)
		52: ValueRegs	constructor(put_in_regs, [3], 7)
		53: Gpr	constructor(value_regs_get_gpr, [52, 48], 8)
		54: CC	constructor(intcc_to_cc, [0], 9)
		55: IcmpCondResult	constructor(emit_cmp_i128, [54, 49, 46, 53, 51], 10)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4774
			constraints = [
			]
			prio = 0
			result = 9
			impure = [4, 5, 6, 7, 8, 9]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4781
			constraints = [
				10:	some
			]
			prio = 1
			result = 16
			impure = [4, 12, 13, 14, 15, 16]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4786
			constraints = [
				17:	some
				19:	variant(InstructionData::UnaryImm)
				20:	variant(Opcode::Iconst)
				22:	const_int(0)
			]
			prio = 2
			result = 28
			impure = [4, 23, 24, 25, 26, 27, 28]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4791
			constraints = [
				29:	some
				31:	variant(InstructionData::UnaryImm)
				32:	variant(Opcode::Iconst)
				34:	const_int(0)
			]
			prio = 3
			result = 43
			impure = [36, 37, 38, 39, 40, 41, 42, 43]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4798
			constraints = [
				2:	const_prim(I128)
			]
			prio = 4
			result = 55
			impure = [44, 46, 47, 49, 50, 51, 52, 53, 54, 55]
		}
	]
}
term {
	name = emit_cmp_i128
	bindings = [
		0: CC	argument(0)
		1: Gpr	argument(1)
		2: Gpr	argument(2)
		3: Gpr	argument(3)
		4: Gpr	argument(4)
		5: CC	make_variant(CC::L, [])
		6: IcmpCondResult	constructor(emit_cmp_i128, [5, 3, 4, 1, 2], 1)
		7: CC	make_variant(CC::NL, [])
		8: IcmpCondResult	constructor(emit_cmp_i128, [7, 3, 4, 1, 2], 1)
		9: CC	make_variant(CC::B, [])
		10: IcmpCondResult	constructor(emit_cmp_i128, [9, 3, 4, 1, 2], 1)
		11: CC	make_variant(CC::NB, [])
		12: IcmpCondResult	constructor(emit_cmp_i128, [11, 3, 4, 1, 2], 1)
		13: Option(CC)	extractor(cc_nz_or_z, 0)
		14: CC	match_some(13)
		15: Type	const_prim(I64)
		16: GprMemImm	constructor(gpr_to_gpr_mem_imm, [4], 1)
		17: Gpr	constructor(x64_xor, [15, 2, 16], 2)
		18: Reg	constructor(gpr_to_reg, [17], 3)
		19: GprMemImm	constructor(gpr_to_gpr_mem_imm, [3], 4)
		20: Gpr	constructor(x64_xor, [15, 1, 19], 5)
		21: Reg	constructor(gpr_to_reg, [20], 6)
		22: AluRmiROpcode	make_variant(AluRmiROpcode::Or, [])
		23: Gpr	constructor(gpr_new, [18], 7)
		24: GprMemImm	constructor(reg_to_gpr_mem_imm, [21], 8)
		25: ProducesFlags	constructor(x64_alurmi_flags_side_effect, [22, 15, 23, 24], 9)
		26: IcmpCondResult	constructor(icmp_cond_result, [25, 14], 10)
		27: OperandSize	make_variant(OperandSize::Size64, [])
		28: ProducesFlags	constructor(x64_cmp, [27, 2, 16], 2)
		29: AluRmiROpcode	make_variant(AluRmiROpcode::Sbb, [])
		30: GprMemImm	constructor(gpr_to_gpr_mem_imm, [3], 3)
		31: ProducesFlags	constructor(x64_alurmi_flags_side_effect, [29, 15, 1, 30], 4)
		32: ProducesFlags	constructor(produces_flags_concat, [28, 31], 5)
		33: IcmpCondResult	constructor(icmp_cond_result, [32, 0], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4807
			constraints = [
				0:	variant(CC::NLE)
			]
			prio = 2
			result = 6
			impure = [6]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4809
			constraints = [
				0:	variant(CC::LE)
			]
			prio = 2
			result = 8
			impure = [8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4811
			constraints = [
				0:	variant(CC::NBE)
			]
			prio = 2
			result = 10
			impure = [10]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4813
			constraints = [
				0:	variant(CC::BE)
			]
			prio = 2
			result = 12
			impure = [12]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4818
			constraints = [
				13:	some
			]
			prio = 1
			result = 26
			impure = [16, 17, 18, 19, 20, 21, 23, 24, 25, 26]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4828
			constraints = [
			]
			prio = 0
			result = 33
			impure = [16, 28, 30, 31, 32, 33]
		}
	]
}
term {
	name = lower_fcmp_bool
	bindings = [
		0: FcmpCondResult	argument(0)
		1: ProducesFlags	match_variant(0, FcmpCondResult::Condition, producer)
		2: CC	match_variant(0, FcmpCondResult::Condition, cc)
		3: ConsumesFlags	constructor(x64_setcc, [2], 1)
		4: ValueRegs	constructor(with_flags, [1, 3], 2)
		5: ProducesFlags	match_variant(0, FcmpCondResult::AndCondition, producer)
		6: CC	match_variant(0, FcmpCondResult::AndCondition, cc1)
		7: CC	match_variant(0, FcmpCondResult::AndCondition, cc2)
		8: ConsumesFlags	constructor(x64_setcc, [6], 1)
		9: ConsumesFlags	constructor(x64_setcc, [7], 2)
		10: ConsumesFlags	constructor(consumes_flags_concat, [8, 9], 3)
		11: ValueRegs	constructor(with_flags, [5, 10], 4)
		12: usize	const_int(0, usize)
		13: Gpr	constructor(value_regs_get_gpr, [11, 12], 5)
		14: usize	const_int(1, usize)
		15: Gpr	constructor(value_regs_get_gpr, [11, 14], 6)
		16: Type	const_prim(I8)
		17: GprMemImm	constructor(gpr_to_gpr_mem_imm, [15], 7)
		18: Gpr	constructor(x64_and, [16, 13, 17], 8)
		19: Reg	constructor(gpr_to_reg, [18], 9)
		20: ValueRegs	constructor(value_reg, [19], 10)
		21: ProducesFlags	match_variant(0, FcmpCondResult::OrCondition, producer)
		22: CC	match_variant(0, FcmpCondResult::OrCondition, cc1)
		23: CC	match_variant(0, FcmpCondResult::OrCondition, cc2)
		24: ConsumesFlags	constructor(x64_setcc, [22], 1)
		25: ConsumesFlags	constructor(x64_setcc, [23], 2)
		26: ConsumesFlags	constructor(consumes_flags_concat, [24, 25], 3)
		27: ValueRegs	constructor(with_flags, [21, 26], 4)
		28: Gpr	constructor(value_regs_get_gpr, [27, 12], 5)
		29: Gpr	constructor(value_regs_get_gpr, [27, 14], 6)
		30: GprMemImm	constructor(gpr_to_gpr_mem_imm, [29], 7)
		31: Gpr	constructor(x64_or, [16, 28, 30], 8)
		32: Reg	constructor(gpr_to_reg, [31], 9)
		33: ValueRegs	constructor(value_reg, [32], 10)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4849
			constraints = [
				0:	variant(FcmpCondResult::Condition)
			]
			prio = 0
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4852
			constraints = [
				0:	variant(FcmpCondResult::AndCondition)
			]
			prio = 0
			result = 20
			impure = [8, 9, 10, 11, 13, 15, 17, 18, 19, 20]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4861
			constraints = [
				0:	variant(FcmpCondResult::OrCondition)
			]
			prio = 0
			result = 33
			impure = [24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
		}
	]
}
term {
	name = emit_fcmp
	bindings = [
		0: FloatCC	argument(0)
		1: Value	argument(1)
		2: Type	extractor(value_type, 1)
		3: Option(Type)	extractor(ty_scalar_float, 2)
		4: Type	match_some(3)
		5: Value	argument(2)
		6: Xmm	constructor(put_in_xmm, [1], 1)
		7: XmmMem	constructor(put_in_xmm_mem, [5], 2)
		8: ProducesFlags	constructor(x64_ucomis, [4, 6, 7], 3)
		9: CC	make_variant(CC::NP, [])
		10: CC	make_variant(CC::Z, [])
		11: FcmpCondResult	make_variant(FcmpCondResult::AndCondition, [8, 9, 10])
		12: CC	make_variant(CC::P, [])
		13: CC	make_variant(CC::NZ, [])
		14: FcmpCondResult	make_variant(FcmpCondResult::OrCondition, [8, 12, 13])
		15: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 9])
		16: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 12])
		17: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 13])
		18: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 10])
		19: CC	make_variant(CC::NBE, [])
		20: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 19])
		21: CC	make_variant(CC::NB, [])
		22: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 21])
		23: CC	make_variant(CC::B, [])
		24: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 23])
		25: CC	make_variant(CC::BE, [])
		26: FcmpCondResult	make_variant(FcmpCondResult::Condition, [8, 25])
		27: Xmm	constructor(put_in_xmm, [5], 1)
		28: XmmMem	constructor(put_in_xmm_mem, [1], 2)
		29: ProducesFlags	constructor(x64_ucomis, [4, 27, 28], 3)
		30: FcmpCondResult	make_variant(FcmpCondResult::Condition, [29, 19])
		31: FcmpCondResult	make_variant(FcmpCondResult::Condition, [29, 21])
		32: FcmpCondResult	make_variant(FcmpCondResult::Condition, [29, 23])
		33: FcmpCondResult	make_variant(FcmpCondResult::Condition, [29, 25])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4888
			constraints = [
				0:	variant(FloatCC::Equal)
				3:	some
			]
			prio = 0
			result = 11
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4891
			constraints = [
				0:	variant(FloatCC::NotEqual)
				3:	some
			]
			prio = 0
			result = 14
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4896
			constraints = [
				0:	variant(FloatCC::Ordered)
				3:	some
			]
			prio = 0
			result = 15
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4898
			constraints = [
				0:	variant(FloatCC::Unordered)
				3:	some
			]
			prio = 0
			result = 16
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4900
			constraints = [
				0:	variant(FloatCC::OrderedNotEqual)
				3:	some
			]
			prio = 0
			result = 17
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4902
			constraints = [
				0:	variant(FloatCC::UnorderedOrEqual)
				3:	some
			]
			prio = 0
			result = 18
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4904
			constraints = [
				0:	variant(FloatCC::GreaterThan)
				3:	some
			]
			prio = 0
			result = 20
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4906
			constraints = [
				0:	variant(FloatCC::GreaterThanOrEqual)
				3:	some
			]
			prio = 0
			result = 22
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4908
			constraints = [
				0:	variant(FloatCC::UnorderedOrLessThan)
				3:	some
			]
			prio = 0
			result = 24
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4910
			constraints = [
				0:	variant(FloatCC::UnorderedOrLessThanOrEqual)
				3:	some
			]
			prio = 0
			result = 26
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4916
			constraints = [
				0:	variant(FloatCC::LessThan)
				3:	some
			]
			prio = 0
			result = 30
			impure = [27, 28, 29]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4919
			constraints = [
				0:	variant(FloatCC::LessThanOrEqual)
				3:	some
			]
			prio = 0
			result = 31
			impure = [27, 28, 29]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4922
			constraints = [
				0:	variant(FloatCC::UnorderedOrGreaterThan)
				3:	some
			]
			prio = 0
			result = 32
			impure = [27, 28, 29]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4925
			constraints = [
				0:	variant(FloatCC::UnorderedOrGreaterThanOrEqual)
				3:	some
			]
			prio = 0
			result = 33
			impure = [27, 28, 29]
		}
	]
}
term {
	name = x64_mfence
	bindings = [
		0: FenceKind	make_variant(FenceKind::MFence, [])
		1: MInst	make_variant(MInst::Fence, [0])
		2: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4938
			constraints = [
			]
			prio = 0
			result = 2
		}
	]
}
term {
	name = x64_cmpxchg
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	argument(2)
		3: SyntheticAmode	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: Reg	constructor(gpr_to_reg, [2], 2)
		6: Reg	constructor(gpr_to_reg, [1], 3)
		7: WritableReg	constructor(writable_gpr_to_reg, [4], 4)
		8: MInst	make_variant(MInst::LockCmpxchg, [0, 5, 6, 3, 7])
		9: Unit	constructor(emit, [8], 5)
		10: Gpr	constructor(writable_gpr_to_gpr, [4], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4942
			constraints = [
			]
			prio = 0
			result = 10
			impure = [4, 5, 6, 7, 9, 10]
		}
	]
}
term {
	name = x64_atomic_rmw_seq
	bindings = [
		0: Type	argument(0)
		1: MachAtomicRmwOp	argument(1)
		2: SyntheticAmode	argument(2)
		3: Gpr	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: WritableGpr	constructor(temp_writable_gpr, [], 2)
		6: Reg	constructor(gpr_to_reg, [3], 3)
		7: WritableReg	constructor(writable_gpr_to_reg, [5], 4)
		8: WritableReg	constructor(writable_gpr_to_reg, [4], 5)
		9: MInst	make_variant(MInst::AtomicRmwSeq, [0, 1, 2, 6, 7, 8])
		10: Unit	constructor(emit, [9], 6)
		11: Gpr	constructor(writable_gpr_to_gpr, [4], 7)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4948
			constraints = [
			]
			prio = 0
			result = 11
			impure = [4, 5, 6, 7, 8, 10, 11]
		}
	]
}
term {
	name = bitcast_xmm_to_gpr
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Gpr	constructor(x64_movd_to_gpr, [1], 1)
		3: Gpr	constructor(x64_movq_to_gpr, [1], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4963
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4965
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 3
			impure = [3]
		}
	]
}
term {
	name = bitcast_gpr_to_xmm
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		3: Xmm	constructor(x64_movd_to_xmm, [2], 2)
		4: Xmm	constructor(x64_movq_to_xmm, [2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4969
			constraints = [
				0:	const_prim(I32)
			]
			prio = 0
			result = 3
			impure = [2, 3]
		}
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4971
			constraints = [
				0:	const_prim(I64)
			]
			prio = 0
			result = 4
			impure = [2, 4]
		}
	]
}
term {
	name = stack_addr_impl
	bindings = [
		0: StackSlot	argument(0)
		1: Offset32	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: WritableReg	constructor(writable_gpr_to_reg, [2], 2)
		4: MInst	constructor(abi_stackslot_addr, [3, 0, 1], 3)
		5: Unit	constructor(emit, [4], 4)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4977
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 4, 5, 6]
		}
	]
}
term {
	name = x64_checked_srem_seq
	bindings = [
		0: OperandSize	argument(0)
		1: Gpr	argument(1)
		2: Gpr	argument(2)
		3: Gpr	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: WritableGpr	constructor(temp_writable_gpr, [], 2)
		6: MInst	make_variant(MInst::CheckedSRemSeq, [0, 1, 2, 3, 4, 5])
		7: Unit	constructor(emit, [6], 3)
		8: Reg	constructor(writable_gpr_to_r_reg, [4], 4)
		9: Reg	constructor(writable_gpr_to_r_reg, [5], 5)
		10: ValueRegs	constructor(value_regs, [8, 9], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4986
			constraints = [
			]
			prio = 0
			result = 10
			impure = [4, 5, 7, 8, 9, 10]
		}
	]
}
term {
	name = x64_checked_srem_seq8
	bindings = [
		0: Gpr	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: MInst	make_variant(MInst::CheckedSRemSeq8, [0, 1, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Gpr	constructor(writable_gpr_to_gpr, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 4993
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = x64_div8
	bindings = [
		0: Gpr	argument(0)
		1: GprMem	argument(1)
		2: DivSignedness	argument(2)
		3: TrapCode	argument(3)
		4: WritableGpr	constructor(temp_writable_gpr, [], 1)
		5: MInst	make_variant(MInst::Div8, [2, 3, 1, 0, 4])
		6: Unit	constructor(emit, [5], 2)
		7: Gpr	constructor(writable_gpr_to_gpr, [4], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5000
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 6, 7]
		}
	]
}
term {
	name = x64_div
	bindings = [
		0: Gpr	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: OperandSize	argument(3)
		4: DivSignedness	argument(4)
		5: TrapCode	argument(5)
		6: WritableGpr	constructor(temp_writable_gpr, [], 1)
		7: WritableGpr	constructor(temp_writable_gpr, [], 2)
		8: MInst	make_variant(MInst::Div, [3, 4, 5, 2, 0, 1, 6, 7])
		9: Unit	constructor(emit, [8], 3)
		10: Reg	constructor(writable_gpr_to_r_reg, [6], 4)
		11: Reg	constructor(writable_gpr_to_r_reg, [7], 5)
		12: ValueRegs	constructor(value_regs, [10, 11], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5010
			constraints = [
			]
			prio = 0
			result = 12
			impure = [6, 7, 9, 10, 11, 12]
		}
	]
}
term {
	name = x64_div_quotient
	bindings = [
		0: Gpr	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: OperandSize	argument(3)
		4: DivSignedness	argument(4)
		5: TrapCode	argument(5)
		6: ValueRegs	constructor(x64_div, [0, 1, 2, 3, 4, 5], 1)
		7: usize	const_int(0, usize)
		8: Reg	constructor(value_regs_get, [6, 7], 2)
		9: ValueRegs	constructor(value_reg, [8], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5018
			constraints = [
			]
			prio = 0
			result = 9
			impure = [6, 8, 9]
		}
	]
}
term {
	name = x64_div_remainder
	bindings = [
		0: Gpr	argument(0)
		1: Gpr	argument(1)
		2: GprMem	argument(2)
		3: OperandSize	argument(3)
		4: DivSignedness	argument(4)
		5: TrapCode	argument(5)
		6: ValueRegs	constructor(x64_div, [0, 1, 2, 3, 4, 5], 1)
		7: usize	const_int(1, usize)
		8: Reg	constructor(value_regs_get, [6, 7], 2)
		9: ValueRegs	constructor(value_reg, [8], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5023
			constraints = [
			]
			prio = 0
			result = 9
			impure = [6, 8, 9]
		}
	]
}
term {
	name = x64_sign_extend_data
	bindings = [
		0: Gpr	argument(0)
		1: OperandSize	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: MInst	make_variant(MInst::SignExtendData, [1, 0, 2])
		4: Unit	constructor(emit, [3], 2)
		5: Gpr	constructor(writable_gpr_to_gpr, [2], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5028
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 4, 5]
		}
	]
}
term {
	name = read_pinned_gpr
	bindings = [
		0: PReg	constructor(preg_pinned, [], 1)
		1: Reg	constructor(mov_from_preg, [0], 2)
		2: Gpr	constructor(gpr_new, [1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5036
			constraints = [
			]
			prio = 0
			result = 2
			impure = [0, 1, 2]
		}
	]
}
term {
	name = write_pinned_gpr
	bindings = [
		0: Gpr	argument(0)
		1: PReg	constructor(preg_pinned, [], 1)
		2: SideEffectNoResult	constructor(mov_to_preg, [1, 0], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5040
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = elf_tls_get_addr
	bindings = [
		0: ExternalName	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::ElfTlsGetAddr, [0, 1])
		3: Unit	constructor(emit, [2], 2)
		4: Gpr	constructor(writable_gpr_to_gpr, [1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5082
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3, 4]
		}
	]
}
term {
	name = macho_tls_get_addr
	bindings = [
		0: ExternalName	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: MInst	make_variant(MInst::MachOTlsGetAddr, [0, 1])
		3: Unit	constructor(emit, [2], 2)
		4: Gpr	constructor(writable_gpr_to_gpr, [1], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5089
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 3, 4]
		}
	]
}
term {
	name = coff_tls_get_addr
	bindings = [
		0: ExternalName	argument(0)
		1: WritableGpr	constructor(temp_writable_gpr, [], 1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 2)
		3: MInst	make_variant(MInst::CoffTlsGetAddr, [0, 1, 2])
		4: Unit	constructor(emit, [3], 3)
		5: Gpr	constructor(writable_gpr_to_gpr, [1], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5096
			constraints = [
			]
			prio = 0
			result = 5
			impure = [1, 2, 4, 5]
		}
	]
}
term {
	name = reg_to_xmm_mem
	bindings = [
		0: Reg	argument(0)
		1: Xmm	constructor(xmm_new, [0], 1)
		2: XmmMem	constructor(xmm_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5183
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = xmm_to_reg_mem
	bindings = [
		0: Reg	argument(0)
		1: Xmm	constructor(xmm_new, [0], 1)
		2: Reg	constructor(xmm_to_reg, [1], 2)
		3: RegMem	make_variant(RegMem::Reg, [2])
		4: XmmMem	constructor(reg_mem_to_xmm_mem, [3], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5186
			constraints = [
			]
			prio = 0
			result = 4
			impure = [1, 2, 4]
		}
	]
}
term {
	name = writable_gpr_to_r_reg
	bindings = [
		0: WritableGpr	argument(0)
		1: WritableReg	constructor(writable_gpr_to_reg, [0], 1)
		2: Reg	constructor(writable_reg_to_reg, [1], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5190
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = writable_gpr_to_gpr_mem
	bindings = [
		0: WritableGpr	argument(0)
		1: Gpr	constructor(writable_gpr_to_gpr, [0], 1)
		2: GprMem	constructor(gpr_to_gpr_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5193
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = writable_gpr_to_value_regs
	bindings = [
		0: WritableGpr	argument(0)
		1: Reg	constructor(writable_gpr_to_r_reg, [0], 1)
		2: ValueRegs	constructor(value_reg, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5196
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = writable_xmm_to_r_reg
	bindings = [
		0: WritableXmm	argument(0)
		1: WritableReg	constructor(writable_xmm_to_reg, [0], 1)
		2: Reg	constructor(writable_reg_to_reg, [1], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5199
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = writable_xmm_to_xmm_mem
	bindings = [
		0: WritableXmm	argument(0)
		1: Xmm	constructor(writable_xmm_to_xmm, [0], 1)
		2: XmmMem	constructor(xmm_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5202
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = writable_xmm_to_value_regs
	bindings = [
		0: WritableXmm	argument(0)
		1: Reg	constructor(writable_xmm_to_r_reg, [0], 1)
		2: ValueRegs	constructor(value_reg, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5205
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = synthetic_amode_to_gpr_mem
	bindings = [
		0: SyntheticAmode	argument(0)
		1: RegMem	constructor(synthetic_amode_to_reg_mem, [0], 1)
		2: GprMem	constructor(reg_mem_to_gpr_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5212
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = amode_to_gpr_mem
	bindings = [
		0: Amode	argument(0)
		1: SyntheticAmode	constructor(amode_to_synthetic_amode, [0], 1)
		2: GprMem	constructor(synthetic_amode_to_gpr_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5210
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = amode_to_xmm_mem
	bindings = [
		0: Amode	argument(0)
		1: SyntheticAmode	constructor(amode_to_synthetic_amode, [0], 1)
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5215
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = synthetic_amode_to_xmm_mem
	bindings = [
		0: SyntheticAmode	argument(0)
		1: RegMem	constructor(synthetic_amode_to_reg_mem, [0], 1)
		2: XmmMem	constructor(reg_mem_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5218
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = const_to_xmm_mem
	bindings = [
		0: VCodeConstant	argument(0)
		1: SyntheticAmode	constructor(const_to_synthetic_amode, [0], 1)
		2: XmmMem	constructor(synthetic_amode_to_xmm_mem, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5223
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = const_to_reg_mem
	bindings = [
		0: VCodeConstant	argument(0)
		1: SyntheticAmode	constructor(const_to_synthetic_amode, [0], 1)
		2: RegMem	make_variant(RegMem::Mem, [1])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5225
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1]
		}
	]
}
term {
	name = xmm_to_xmm_mem_aligned
	bindings = [
		0: Xmm	argument(0)
		1: XmmMem	constructor(xmm_to_xmm_mem, [0], 1)
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5228
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = amode_to_xmm_mem_aligned
	bindings = [
		0: Amode	argument(0)
		1: XmmMem	constructor(amode_to_xmm_mem, [0], 1)
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5230
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = synthetic_amode_to_xmm_mem_aligned
	bindings = [
		0: SyntheticAmode	argument(0)
		1: XmmMem	constructor(synthetic_amode_to_xmm_mem, [0], 1)
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5232
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = put_in_xmm_mem_aligned
	bindings = [
		0: Value	argument(0)
		1: XmmMem	constructor(put_in_xmm_mem, [0], 1)
		2: XmmMemAligned	constructor(xmm_mem_to_xmm_mem_aligned, [1], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5234
			constraints = [
			]
			prio = 0
			result = 2
			impure = [1, 2]
		}
	]
}
term {
	name = copy_gpr
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: WritableGpr	constructor(temp_writable_gpr, [], 1)
		3: OperandSize	constructor(operand_size_of_type_32_64, [0], 2)
		4: MInst	make_variant(MInst::MovRR, [3, 1, 2])
		5: Unit	constructor(emit, [4], 3)
		6: Gpr	constructor(writable_gpr_to_gpr, [2], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5243
			constraints = [
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
	]
}
term {
	name = mov_to_preg
	bindings = [
		0: PReg	argument(0)
		1: Gpr	argument(1)
		2: MInst	make_variant(MInst::MovToPReg, [1, 0])
		3: SideEffectNoResult	make_variant(SideEffectNoResult::Inst, [2])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5251
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = x64_rbp
	bindings = [
		0: PReg	constructor(preg_rbp, [], 1)
		1: Reg	constructor(mov_from_preg, [0], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5264
			constraints = [
			]
			prio = 0
			result = 1
			impure = [0, 1]
		}
	]
}
term {
	name = x64_rsp
	bindings = [
		0: PReg	constructor(preg_rsp, [], 1)
		1: Reg	constructor(mov_from_preg, [0], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/inst.isle line 5268
			constraints = [
			]
			prio = 0
			result = 1
			impure = [0, 1]
		}
	]
}
term {
	name = lower
	bindings = [
		0: Inst	argument(0)
		1: Option(Value)	extractor(first_result, 0)
		2: Value	match_some(1)
		3: Type	extractor(value_type, 2)
		4: Option(Type)	extractor(fits_in_64, 3)
		5: Type	match_some(4)
		6: InstructionData	extractor(inst_data, 0)
		7: Opcode	match_variant(6, InstructionData::UnaryImm, opcode)
		8: Imm64	match_variant(6, InstructionData::UnaryImm, imm)
		9: u64	extractor(u64_from_imm64, 8)
		10: Reg	constructor(imm, [5, 9], 1)
		11: InstOutput	constructor(output_reg, [10], 2)
		12: Type	const_prim(I64)
		13: Reg	constructor(imm, [12, 9], 1)
		14: u64	const_int(0, u64)
		15: Reg	constructor(imm, [12, 14], 2)
		16: ValueRegs	constructor(value_regs, [13, 15], 3)
		17: InstOutput	constructor(output, [16], 4)
		18: Opcode	match_variant(6, InstructionData::UnaryIeee32, opcode)
		19: Ieee32	match_variant(6, InstructionData::UnaryIeee32, imm)
		20: u32	extractor(u32_from_ieee32, 19)
		21: Type	const_prim(F32)
		22: u64	constructor(u32_as_u64, [20], 0)
		23: Reg	constructor(imm, [21, 22], 1)
		24: InstOutput	constructor(output_reg, [23], 2)
		25: Opcode	match_variant(6, InstructionData::UnaryIeee64, opcode)
		26: Ieee64	match_variant(6, InstructionData::UnaryIeee64, imm)
		27: u64	extractor(u64_from_ieee64, 26)
		28: Type	const_prim(F64)
		29: Reg	constructor(imm, [28, 27], 1)
		30: InstOutput	constructor(output_reg, [29], 2)
		31: Opcode	match_variant(6, InstructionData::NullAry, opcode)
		32: Reg	constructor(imm, [3, 14], 1)
		33: InstOutput	constructor(output_reg, [32], 2)
		34: Option(Type)	extractor(fits_in_16, 3)
		35: Type	match_some(34)
		36: Opcode	match_variant(6, InstructionData::Binary, opcode)
		37: ValueArray2	match_variant(6, InstructionData::Binary, args)
		38: (Value, Value)	extractor(value_array_2, 37)
		39: Value	match_tuple(38, 0)
		40: Value	match_tuple(38, 1)
		41: Gpr	constructor(put_in_gpr, [39], 1)
		42: GprMemImm	constructor(put_in_gpr_mem_imm, [40], 2)
		43: Gpr	constructor(x64_add, [35, 41, 42], 3)
		44: InstOutput	constructor(output_gpr, [43], 4)
		45: Option(Type)	extractor(ty_32_or_64, 3)
		46: Type	match_some(45)
		47: MemFlags	constructor(mem_flags_trusted, [], 0)
		48: Offset32	constructor(zero_offset, [], 1)
		49: Amode	constructor(to_amode_add, [47, 39, 40, 48], 2)
		50: SyntheticAmode	constructor(amode_to_synthetic_amode, [49], 3)
		51: Gpr	constructor(x64_lea, [46, 50], 4)
		52: InstOutput	constructor(output_gpr, [51], 5)
		53: Option(SinkableLoad)	extractor(sinkable_load, 40)
		54: SinkableLoad	match_some(53)
		55: GprMemImm	constructor(sink_load_to_gpr_mem_imm, [54], 2)
		56: Gpr	constructor(x64_add, [5, 41, 55], 3)
		57: InstOutput	constructor(output_gpr, [56], 4)
		58: Option(SinkableLoad)	extractor(sinkable_load, 39)
		59: SinkableLoad	match_some(58)
		60: Gpr	constructor(put_in_gpr, [40], 1)
		61: GprMemImm	constructor(sink_load_to_gpr_mem_imm, [59], 2)
		62: Gpr	constructor(x64_add, [5, 60, 61], 3)
		63: InstOutput	constructor(output_gpr, [62], 4)
		64: Option((u32, u32))	extractor(multi_lane, 3)
		65: (u32, u32)	match_some(64)
		66: u32	match_tuple(65, 0)
		67: u32	match_tuple(65, 1)
		68: Xmm	constructor(put_in_xmm, [39], 1)
		69: XmmMem	constructor(put_in_xmm_mem, [40], 2)
		70: Xmm	constructor(x64_paddb, [68, 69], 3)
		71: InstOutput	constructor(output_xmm, [70], 4)
		72: Xmm	constructor(x64_paddw, [68, 69], 3)
		73: InstOutput	constructor(output_xmm, [72], 4)
		74: Xmm	constructor(x64_paddd, [68, 69], 3)
		75: InstOutput	constructor(output_xmm, [74], 4)
		76: Xmm	constructor(x64_paddq, [68, 69], 3)
		77: InstOutput	constructor(output_xmm, [76], 4)
		78: ValueRegs	constructor(put_in_regs, [39], 1)
		79: usize	const_int(0, usize)
		80: Gpr	constructor(value_regs_get_gpr, [78, 79], 2)
		81: usize	const_int(1, usize)
		82: Gpr	constructor(value_regs_get_gpr, [78, 81], 3)
		83: ValueRegs	constructor(put_in_regs, [40], 4)
		84: Gpr	constructor(value_regs_get_gpr, [83, 79], 5)
		85: Gpr	constructor(value_regs_get_gpr, [83, 81], 6)
		86: GprMemImm	constructor(gpr_to_gpr_mem_imm, [84], 7)
		87: ProducesFlags	constructor(x64_add_with_flags_paired, [12, 80, 86], 8)
		88: GprMemImm	constructor(gpr_to_gpr_mem_imm, [85], 9)
		89: ConsumesFlags	constructor(x64_adc_paired, [12, 82, 88], 10)
		90: ValueRegs	constructor(with_flags, [87, 89], 11)
		91: InstOutput	constructor(output, [90], 12)
		92: Type	extractor(value_type, 40)
		93: Option(Type)	extractor(fits_in_64, 92)
		94: Type	match_some(93)
		95: CC	make_variant(CC::B, [])
		96: AluRmiROpcode	make_variant(AluRmiROpcode::Add, [])
		97: InstOutput	constructor(construct_overflow_op_alu, [94, 95, 96, 41, 42], 3)
		98: AluRmiROpcode	make_variant(AluRmiROpcode::Adc, [])
		99: InstOutput	constructor(construct_overflow_op_alu_128, [95, 96, 98, 39, 40], 1)
		100: CC	make_variant(CC::O, [])
		101: InstOutput	constructor(construct_overflow_op_alu, [94, 100, 96, 41, 42], 3)
		102: InstOutput	constructor(construct_overflow_op_alu_128, [100, 96, 98, 39, 40], 1)
		103: AluRmiROpcode	make_variant(AluRmiROpcode::Sub, [])
		104: InstOutput	constructor(construct_overflow_op_alu, [94, 95, 103, 41, 42], 3)
		105: AluRmiROpcode	make_variant(AluRmiROpcode::Sbb, [])
		106: InstOutput	constructor(construct_overflow_op_alu_128, [95, 103, 105, 39, 40], 1)
		107: InstOutput	constructor(construct_overflow_op_alu, [94, 100, 103, 41, 42], 3)
		108: InstOutput	constructor(construct_overflow_op_alu_128, [100, 103, 105, 39, 40], 1)
		109: bool	const_prim(false)
		110: GprMem	constructor(put_in_gpr_mem, [40], 2)
		111: ProducesFlags	constructor(x64_mul8_with_flags_paired, [109, 41, 110], 3)
		112: InstOutput	constructor(construct_overflow_op, [100, 111], 4)
		113: Option(Type)	extractor(ty_int_ref_16_to_64, 92)
		114: Type	match_some(113)
		115: ProducesFlags	constructor(x64_mul_lo_with_flags_paired, [114, 109, 41, 110], 3)
		116: InstOutput	constructor(construct_overflow_op, [100, 115], 4)
		117: bool	const_prim(true)
		118: ProducesFlags	constructor(x64_mul8_with_flags_paired, [117, 41, 110], 3)
		119: InstOutput	constructor(construct_overflow_op, [100, 118], 4)
		120: ProducesFlags	constructor(x64_mul_lo_with_flags_paired, [114, 117, 41, 110], 3)
		121: InstOutput	constructor(construct_overflow_op, [100, 120], 4)
		122: Xmm	constructor(x64_paddsb, [68, 69], 3)
		123: InstOutput	constructor(output_xmm, [122], 4)
		124: Xmm	constructor(x64_paddsw, [68, 69], 3)
		125: InstOutput	constructor(output_xmm, [124], 4)
		126: Xmm	constructor(x64_paddusb, [68, 69], 3)
		127: InstOutput	constructor(output_xmm, [126], 4)
		128: Xmm	constructor(x64_paddusw, [68, 69], 3)
		129: InstOutput	constructor(output_xmm, [128], 4)
		130: Gpr	constructor(x64_sub, [5, 41, 42], 3)
		131: InstOutput	constructor(output_gpr, [130], 4)
		132: Xmm	constructor(x64_psubb, [68, 69], 3)
		133: InstOutput	constructor(output_xmm, [132], 4)
		134: Xmm	constructor(x64_psubw, [68, 69], 3)
		135: InstOutput	constructor(output_xmm, [134], 4)
		136: Xmm	constructor(x64_psubd, [68, 69], 3)
		137: InstOutput	constructor(output_xmm, [136], 4)
		138: Xmm	constructor(x64_psubq, [68, 69], 3)
		139: InstOutput	constructor(output_xmm, [138], 4)
		140: ProducesFlags	constructor(x64_sub_with_flags_paired, [12, 80, 86], 8)
		141: ConsumesFlags	constructor(x64_sbb_paired, [12, 82, 88], 10)
		142: ValueRegs	constructor(with_flags, [140, 141], 11)
		143: InstOutput	constructor(output, [142], 12)
		144: Xmm	constructor(x64_psubsb, [68, 69], 3)
		145: InstOutput	constructor(output_xmm, [144], 4)
		146: Xmm	constructor(x64_psubsw, [68, 69], 3)
		147: InstOutput	constructor(output_xmm, [146], 4)
		148: Xmm	constructor(x64_psubusb, [68, 69], 3)
		149: InstOutput	constructor(output_xmm, [148], 4)
		150: Xmm	constructor(x64_psubusw, [68, 69], 3)
		151: InstOutput	constructor(output_xmm, [150], 4)
		152: Option(Type)	constructor(ty_int_ref_scalar_64, [3], 0)
		153: Type	match_some(152)
		154: Gpr	constructor(x64_and, [3, 41, 42], 3)
		155: InstOutput	constructor(output_gpr, [154], 4)
		156: Gpr	constructor(x64_and, [3, 60, 61], 3)
		157: InstOutput	constructor(output_gpr, [156], 4)
		158: Option(GprMemImm)	extractor(simm32_from_value, 39)
		159: GprMemImm	match_some(158)
		160: Gpr	constructor(x64_and, [3, 60, 159], 2)
		161: InstOutput	constructor(output_gpr, [160], 3)
		162: Option(Type)	extractor(ty_scalar_float, 3)
		163: Type	match_some(162)
		164: Xmm	constructor(sse_and, [163, 68, 69], 3)
		165: InstOutput	constructor(output_xmm, [164], 4)
		166: Xmm	constructor(sse_and, [3, 68, 69], 3)
		167: InstOutput	constructor(output_xmm, [166], 4)
		168: ValueRegs	constructor(put_in_regs, [40], 2)
		169: ValueRegs	constructor(and_i128, [78, 168], 3)
		170: InstOutput	constructor(output, [169], 4)
		171: Option(Inst)	extractor(def_inst, 40)
		172: Inst	match_some(171)
		173: InstructionData	extractor(inst_data, 172)
		174: Opcode	match_variant(173, InstructionData::Unary, opcode)
		175: Value	match_variant(173, InstructionData::Unary, arg)
		176: Xmm	constructor(put_in_xmm, [175], 1)
		177: XmmMem	constructor(put_in_xmm_mem, [39], 2)
		178: Xmm	constructor(sse_and_not, [3, 176, 177], 3)
		179: InstOutput	constructor(output_xmm, [178], 4)
		180: Option(Inst)	extractor(def_inst, 39)
		181: Inst	match_some(180)
		182: InstructionData	extractor(inst_data, 181)
		183: Opcode	match_variant(182, InstructionData::Unary, opcode)
		184: Value	match_variant(182, InstructionData::Unary, arg)
		185: Xmm	constructor(put_in_xmm, [184], 1)
		186: Xmm	constructor(sse_and_not, [3, 185, 69], 3)
		187: InstOutput	constructor(output_xmm, [186], 4)
		188: bool	constructor(use_bmi1, [], 0)
		189: Gpr	constructor(put_in_gpr, [175], 1)
		190: GprMem	constructor(put_in_gpr_mem, [39], 2)
		191: Gpr	constructor(x64_andn, [3, 189, 190], 3)
		192: InstOutput	constructor(output_gpr, [191], 4)
		193: Gpr	constructor(put_in_gpr, [184], 1)
		194: Gpr	constructor(x64_andn, [3, 193, 110], 3)
		195: InstOutput	constructor(output_gpr, [194], 4)
		196: Option(Value)	constructor(val_minus_one, [40], 0)
		197: Value	match_some(196)
		198: GprMem	constructor(put_in_gpr_mem, [39], 1)
		199: Gpr	constructor(x64_blsr, [46, 198], 2)
		200: InstOutput	constructor(output_gpr, [199], 3)
		201: Option(Value)	constructor(val_minus_one, [39], 0)
		202: Value	match_some(201)
		203: GprMem	constructor(put_in_gpr_mem, [40], 1)
		204: Gpr	constructor(x64_blsr, [46, 203], 2)
		205: InstOutput	constructor(output_gpr, [204], 3)
		206: GprMem	constructor(put_in_gpr_mem, [184], 1)
		207: Gpr	constructor(x64_blsi, [46, 206], 2)
		208: InstOutput	constructor(output_gpr, [207], 3)
		209: Gpr	constructor(x64_blsi, [46, 198], 2)
		210: InstOutput	constructor(output_gpr, [209], 3)
		211: bool	constructor(use_bmi2, [], 0)
		212: Option(Inst)	extractor(def_inst, 197)
		213: Inst	match_some(212)
		214: InstructionData	extractor(inst_data, 213)
		215: Opcode	match_variant(214, InstructionData::Binary, opcode)
		216: ValueArray2	match_variant(214, InstructionData::Binary, args)
		217: (Value, Value)	extractor(value_array_2, 216)
		218: Value	match_tuple(217, 0)
		219: Value	match_tuple(217, 1)
		220: Option(Inst)	extractor(def_inst, 218)
		221: Inst	match_some(220)
		222: InstructionData	extractor(inst_data, 221)
		223: Opcode	match_variant(222, InstructionData::UnaryImm, opcode)
		224: Imm64	match_variant(222, InstructionData::UnaryImm, imm)
		225: u64	extractor(u64_from_imm64, 224)
		226: Gpr	constructor(put_in_gpr, [219], 2)
		227: u8	constructor(ty_bits, [46], 0)
		228: u32	constructor(u8_as_u32, [227], 0)
		229: u32	const_int(1, u32)
		230: u32	constructor(u32_sub, [228, 229], 0)
		231: RegMemImm	make_variant(RegMemImm::Imm, [230])
		232: GprMemImm	constructor(gpr_mem_imm_new, [231], 3)
		233: Gpr	constructor(x64_and, [46, 226, 232], 4)
		234: Gpr	constructor(x64_bzhi, [46, 198, 233], 5)
		235: InstOutput	constructor(output_gpr, [234], 6)
		236: Gpr	constructor(x64_or, [3, 41, 42], 3)
		237: InstOutput	constructor(output_gpr, [236], 4)
		238: Gpr	constructor(x64_or, [3, 60, 61], 3)
		239: InstOutput	constructor(output_gpr, [238], 4)
		240: Gpr	constructor(x64_or, [3, 60, 159], 2)
		241: InstOutput	constructor(output_gpr, [240], 3)
		242: Xmm	constructor(sse_or, [163, 68, 69], 3)
		243: InstOutput	constructor(output_xmm, [242], 4)
		244: Xmm	constructor(sse_or, [3, 68, 69], 3)
		245: InstOutput	constructor(output_xmm, [244], 4)
		246: ValueRegs	constructor(or_i128, [78, 168], 3)
		247: InstOutput	constructor(output, [246], 4)
		248: Gpr	constructor(x64_xor, [3, 41, 42], 3)
		249: InstOutput	constructor(output_gpr, [248], 4)
		250: Gpr	constructor(x64_xor, [3, 60, 61], 3)
		251: InstOutput	constructor(output_gpr, [250], 4)
		252: Gpr	constructor(x64_xor, [3, 60, 159], 2)
		253: InstOutput	constructor(output_gpr, [252], 3)
		254: Xmm	constructor(x64_xor_vector, [163, 68, 69], 3)
		255: InstOutput	constructor(output_xmm, [254], 4)
		256: Xmm	constructor(x64_xor_vector, [3, 68, 69], 3)
		257: InstOutput	constructor(output_xmm, [256], 4)
		258: Gpr	constructor(x64_xor, [12, 80, 86], 8)
		259: Gpr	constructor(x64_xor, [12, 82, 88], 10)
		260: ValueRegs	constructor(value_gprs, [258, 259], 11)
		261: InstOutput	constructor(output, [260], 12)
		262: Gpr	constructor(x64_blsmsk, [46, 198], 2)
		263: InstOutput	constructor(output_gpr, [262], 3)
		264: Gpr	constructor(x64_blsmsk, [46, 203], 2)
		265: InstOutput	constructor(output_gpr, [264], 3)
		266: Imm8Gpr	constructor(put_masked_in_imm8_gpr, [40, 5], 2)
		267: Gpr	constructor(x64_shl, [5, 41, 266], 3)
		268: InstOutput	constructor(output_gpr, [267], 4)
		269: Gpr	constructor(lo_gpr, [40], 1)
		270: ValueRegs	constructor(put_in_regs, [39], 2)
		271: ValueRegs	constructor(shl_i128, [270, 269], 3)
		272: InstOutput	constructor(output, [271], 4)
		273: RegMemImm	constructor(mask_xmm_shift, [3, 40], 1)
		274: Xmm	constructor(put_in_xmm, [39], 2)
		275: XmmMemImm	constructor(mov_rmi_to_xmm, [273], 3)
		276: Xmm	constructor(x64_psllw, [274, 275], 4)
		277: SyntheticAmode	constructor(ishl_i8x16_mask, [273], 5)
		278: Type	const_prim(I8X16)
		279: ExtKind	make_variant(ExtKind::None, [])
		280: Reg	constructor(x64_load, [278, 277, 279], 6)
		281: RegMem	make_variant(RegMem::Reg, [280])
		282: XmmMem	constructor(reg_mem_to_xmm_mem, [281], 7)
		283: Xmm	constructor(sse_and, [278, 276, 282], 8)
		284: InstOutput	constructor(output_xmm, [283], 9)
		285: RegMemImm	constructor(mask_xmm_shift, [3, 40], 2)
		286: XmmMemImm	constructor(mov_rmi_to_xmm, [285], 3)
		287: Xmm	constructor(x64_psllw, [68, 286], 4)
		288: InstOutput	constructor(output_xmm, [287], 5)
		289: Xmm	constructor(x64_pslld, [68, 286], 4)
		290: InstOutput	constructor(output_xmm, [289], 5)
		291: Xmm	constructor(x64_psllq, [68, 286], 4)
		292: InstOutput	constructor(output_xmm, [291], 5)
		293: ExtendKind	make_variant(ExtendKind::Zero, [])
		294: Gpr	constructor(extend_to_gpr, [39, 5, 293], 1)
		295: Gpr	constructor(x64_shr, [5, 294, 266], 3)
		296: InstOutput	constructor(output_gpr, [295], 4)
		297: ValueRegs	constructor(shr_i128, [270, 269], 3)
		298: InstOutput	constructor(output, [297], 4)
		299: Xmm	constructor(x64_psrlw, [274, 275], 4)
		300: SyntheticAmode	constructor(ushr_i8x16_mask, [273], 5)
		301: XmmMem	constructor(synthetic_amode_to_xmm_mem, [300], 6)
		302: Xmm	constructor(sse_and, [278, 299, 301], 7)
		303: InstOutput	constructor(output_xmm, [302], 8)
		304: Xmm	constructor(x64_psrlw, [68, 286], 4)
		305: InstOutput	constructor(output_xmm, [304], 5)
		306: Xmm	constructor(x64_psrld, [68, 286], 4)
		307: InstOutput	constructor(output_xmm, [306], 5)
		308: Xmm	constructor(x64_psrlq, [68, 286], 4)
		309: InstOutput	constructor(output_xmm, [308], 5)
		310: ExtendKind	make_variant(ExtendKind::Sign, [])
		311: Gpr	constructor(extend_to_gpr, [39, 5, 310], 1)
		312: Gpr	constructor(x64_sar, [5, 311, 266], 3)
		313: InstOutput	constructor(output_gpr, [312], 4)
		314: ValueRegs	constructor(sar_i128, [270, 269], 3)
		315: InstOutput	constructor(output, [314], 4)
		316: XmmMem	constructor(xmm_to_xmm_mem, [68], 3)
		317: Xmm	constructor(x64_punpcklbw, [68, 316], 4)
		318: XmmMem	constructor(xmm_to_xmm_mem, [68], 5)
		319: Xmm	constructor(x64_punpckhbw, [68, 318], 6)
		320: XmmMemImm	constructor(sshr_i8x16_bigger_shift, [92, 285], 7)
		321: Xmm	constructor(x64_psraw, [317, 320], 8)
		322: Xmm	constructor(x64_psraw, [319, 320], 9)
		323: XmmMem	constructor(xmm_to_xmm_mem, [322], 10)
		324: Xmm	constructor(x64_packsswb, [321, 323], 11)
		325: InstOutput	constructor(output_xmm, [324], 12)
		326: Xmm	constructor(x64_psraw, [68, 286], 4)
		327: InstOutput	constructor(output_xmm, [326], 5)
		328: Xmm	constructor(x64_psrad, [68, 286], 4)
		329: InstOutput	constructor(output_xmm, [328], 5)
		330: Opcode	match_variant(173, InstructionData::UnaryImm, opcode)
		331: Imm64	match_variant(173, InstructionData::UnaryImm, imm)
		332: bool	constructor(use_avx512vl, [], 0)
		333: bool	constructor(use_avx512f, [], 0)
		334: XmmMem	constructor(put_in_xmm_mem, [39], 1)
		335: u8	constructor(shift_amount_masked, [3, 331], 2)
		336: Xmm	constructor(x64_vpsraq_imm, [334, 335], 3)
		337: InstOutput	constructor(output_xmm, [336], 4)
		338: u8	constructor(shift_mask, [3], 2)
		339: u32	constructor(u8_as_u32, [338], 0)
		340: RegMemImm	make_variant(RegMemImm::Imm, [339])
		341: GprMemImm	constructor(gpr_mem_imm_new, [340], 3)
		342: Gpr	constructor(x64_and, [12, 60, 341], 4)
		343: Xmm	constructor(put_in_xmm, [39], 5)
		344: GprMem	constructor(gpr_to_gpr_mem, [342], 6)
		345: Xmm	constructor(x64_movd_to_xmm, [344], 7)
		346: XmmMem	constructor(xmm_to_xmm_mem, [345], 8)
		347: Xmm	constructor(x64_vpsraq, [343, 346], 9)
		348: InstOutput	constructor(output_xmm, [347], 10)
		349: u64	extractor(u64_from_imm64, 331)
		350: Option(u32)	extractor(u64_as_u32, 349)
		351: u32	match_some(350)
		352: u32	const_int(63, u32)
		353: u32	constructor(u32_and, [351, 352], 0)
		354: Xmm	constructor(lower_i64x2_sshr_imm, [68, 353], 2)
		355: InstOutput	constructor(output_xmm, [354], 3)
		356: Gpr	constructor(put_in_gpr, [40], 2)
		357: RegMemImm	make_variant(RegMemImm::Imm, [352])
		358: GprMemImm	constructor(gpr_mem_imm_new, [357], 3)
		359: Gpr	constructor(x64_and, [12, 356, 358], 4)
		360: Xmm	constructor(lower_i64x2_sshr_gpr, [68, 359], 5)
		361: InstOutput	constructor(output_xmm, [360], 6)
		362: Gpr	constructor(x64_rotl, [5, 41, 266], 3)
		363: InstOutput	constructor(output_gpr, [362], 4)
		364: Gpr	constructor(lo_gpr, [40], 2)
		365: ValueRegs	constructor(shl_i128, [78, 364], 3)
		366: u64	const_int(128, u64)
		367: Reg	constructor(imm, [12, 366], 4)
		368: Gpr	constructor(gpr_new, [367], 5)
		369: GprMemImm	constructor(gpr_to_gpr_mem_imm, [364], 6)
		370: Gpr	constructor(x64_sub, [12, 368, 369], 7)
		371: ValueRegs	constructor(shr_i128, [78, 370], 8)
		372: ValueRegs	constructor(or_i128, [365, 371], 9)
		373: InstOutput	constructor(output, [372], 10)
		374: Gpr	constructor(x64_rotr, [5, 41, 266], 3)
		375: InstOutput	constructor(output_gpr, [374], 4)
		376: ValueRegs	constructor(shr_i128, [78, 364], 3)
		377: ValueRegs	constructor(shl_i128, [78, 370], 8)
		378: ValueRegs	constructor(or_i128, [376, 377], 9)
		379: InstOutput	constructor(output, [378], 10)
		380: Opcode	match_variant(6, InstructionData::Unary, opcode)
		381: Value	match_variant(6, InstructionData::Unary, arg)
		382: Gpr	constructor(put_in_gpr, [381], 1)
		383: Gpr	constructor(x64_neg, [5, 382], 2)
		384: InstOutput	constructor(output_gpr, [383], 3)
		385: ValueRegs	constructor(put_in_regs, [381], 1)
		386: Gpr	constructor(value_regs_get_gpr, [385, 79], 2)
		387: Gpr	constructor(value_regs_get_gpr, [385, 81], 3)
		388: ProducesFlags	constructor(x64_neg_paired, [12, 386], 4)
		389: Reg	constructor(imm, [12, 14], 5)
		390: Gpr	constructor(gpr_new, [389], 6)
		391: GprMemImm	constructor(gpr_to_gpr_mem_imm, [387], 7)
		392: ConsumesFlags	constructor(x64_sbb_paired, [12, 390, 391], 8)
		393: ValueRegs	constructor(with_flags, [388, 392], 9)
		394: InstOutput	constructor(output, [393], 10)
		395: Reg	constructor(imm, [278, 14], 1)
		396: Xmm	constructor(xmm_new, [395], 2)
		397: XmmMem	constructor(put_in_xmm_mem, [381], 3)
		398: Xmm	constructor(x64_psubb, [396, 397], 4)
		399: InstOutput	constructor(output_xmm, [398], 5)
		400: Type	const_prim(I16X8)
		401: Reg	constructor(imm, [400, 14], 1)
		402: Xmm	constructor(xmm_new, [401], 2)
		403: Xmm	constructor(x64_psubw, [402, 397], 4)
		404: InstOutput	constructor(output_xmm, [403], 5)
		405: Type	const_prim(I32X4)
		406: Reg	constructor(imm, [405, 14], 1)
		407: Xmm	constructor(xmm_new, [406], 2)
		408: Xmm	constructor(x64_psubd, [407, 397], 4)
		409: InstOutput	constructor(output_xmm, [408], 5)
		410: Type	const_prim(I64X2)
		411: Reg	constructor(imm, [410, 14], 1)
		412: Xmm	constructor(xmm_new, [411], 2)
		413: Xmm	constructor(x64_psubq, [412, 397], 4)
		414: InstOutput	constructor(output_xmm, [413], 5)
		415: Xmm	constructor(x64_pavgb, [68, 69], 3)
		416: InstOutput	constructor(output_xmm, [415], 4)
		417: Xmm	constructor(x64_pavgw, [68, 69], 3)
		418: InstOutput	constructor(output_xmm, [417], 4)
		419: Gpr	constructor(x64_mul8, [109, 41, 110], 3)
		420: InstOutput	constructor(output_gpr, [419], 4)
		421: GprMem	constructor(sink_load_to_gpr_mem, [59], 2)
		422: Gpr	constructor(x64_mul8, [109, 60, 421], 3)
		423: InstOutput	constructor(output_gpr, [422], 4)
		424: Option(Type)	extractor(ty_int_ref_16_to_64, 3)
		425: Type	match_some(424)
		426: Gpr	constructor(x64_imul, [425, 41, 110], 3)
		427: InstOutput	constructor(output_gpr, [426], 4)
		428: Gpr	constructor(x64_imul, [425, 60, 421], 3)
		429: InstOutput	constructor(output_gpr, [428], 4)
		430: Option(i32)	extractor(simm32, 331)
		431: i32	match_some(430)
		432: Gpr	constructor(x64_imul_imm, [425, 198, 431], 2)
		433: InstOutput	constructor(output_gpr, [432], 3)
		434: Opcode	match_variant(182, InstructionData::UnaryImm, opcode)
		435: Imm64	match_variant(182, InstructionData::UnaryImm, imm)
		436: Option(i32)	extractor(simm32, 435)
		437: i32	match_some(436)
		438: Gpr	constructor(x64_imul_imm, [425, 203, 437], 2)
		439: InstOutput	constructor(output_gpr, [438], 3)
		440: GprMem	constructor(gpr_to_gpr_mem, [85], 7)
		441: Gpr	constructor(x64_imul, [12, 80, 440], 8)
		442: GprMem	constructor(gpr_to_gpr_mem, [84], 9)
		443: Gpr	constructor(x64_imul, [12, 82, 442], 10)
		444: GprMemImm	constructor(gpr_to_gpr_mem_imm, [443], 11)
		445: Gpr	constructor(x64_add, [12, 441, 444], 12)
		446: GprMem	constructor(gpr_to_gpr_mem, [84], 13)
		447: ValueRegs	constructor(x64_mul, [12, 109, 80, 446], 14)
		448: Gpr	constructor(value_regs_get_gpr, [447, 79], 15)
		449: Gpr	constructor(value_regs_get_gpr, [447, 81], 16)
		450: GprMemImm	constructor(gpr_to_gpr_mem_imm, [449], 17)
		451: Gpr	constructor(x64_add, [12, 445, 450], 18)
		452: ValueRegs	constructor(value_gprs, [448, 451], 19)
		453: InstOutput	constructor(output, [452], 20)
		454: Xmm	constructor(x64_pmullw, [68, 69], 3)
		455: InstOutput	constructor(output_xmm, [454], 4)
		456: bool	constructor(use_sse41, [], 0)
		457: Xmm	constructor(x64_pmulld, [68, 69], 3)
		458: InstOutput	constructor(output_xmm, [457], 4)
		459: Xmm	constructor(put_in_xmm, [40], 2)
		460: u8	const_int(49, u8)
		461: Xmm	constructor(x64_pshufd, [316, 460], 4)
		462: XmmMem	constructor(xmm_to_xmm_mem, [459], 5)
		463: Xmm	constructor(x64_pshufd, [462, 460], 6)
		464: XmmMem	constructor(xmm_to_xmm_mem, [459], 7)
		465: Xmm	constructor(x64_pmuludq, [68, 464], 8)
		466: XmmMem	constructor(xmm_to_xmm_mem, [465], 9)
		467: u8	const_int(8, u8)
		468: Xmm	constructor(x64_pshufd, [466, 467], 10)
		469: XmmMem	constructor(xmm_to_xmm_mem, [463], 11)
		470: Xmm	constructor(x64_pmuludq, [461, 469], 12)
		471: XmmMem	constructor(xmm_to_xmm_mem, [470], 13)
		472: Xmm	constructor(x64_pshufd, [471, 467], 14)
		473: XmmMem	constructor(xmm_to_xmm_mem, [472], 15)
		474: Xmm	constructor(x64_punpckldq, [468, 473], 16)
		475: InstOutput	constructor(output_xmm, [474], 17)
		476: bool	constructor(use_avx512dq, [], 0)
		477: Xmm	constructor(x64_vpmullq, [68, 69], 3)
		478: InstOutput	constructor(output_xmm, [477], 4)
		479: u32	const_int(32, u32)
		480: XmmMemImm	constructor(xmi_imm, [479], 3)
		481: Xmm	constructor(x64_psrlq, [68, 480], 4)
		482: Xmm	constructor(x64_pmuludq, [481, 462], 6)
		483: XmmMemImm	constructor(xmi_imm, [479], 7)
		484: Xmm	constructor(x64_psrlq, [459, 483], 8)
		485: XmmMem	constructor(xmm_to_xmm_mem, [484], 9)
		486: Xmm	constructor(x64_pmuludq, [68, 485], 10)
		487: XmmMem	constructor(xmm_to_xmm_mem, [486], 11)
		488: Xmm	constructor(x64_paddq, [482, 487], 12)
		489: XmmMemImm	constructor(xmi_imm, [479], 13)
		490: Xmm	constructor(x64_psllq, [488, 489], 14)
		491: XmmMem	constructor(xmm_to_xmm_mem, [459], 15)
		492: Xmm	constructor(x64_pmuludq, [68, 491], 16)
		493: XmmMem	constructor(xmm_to_xmm_mem, [490], 17)
		494: Xmm	constructor(x64_paddq, [492, 493], 18)
		495: InstOutput	constructor(output_xmm, [494], 19)
		496: Type	extractor(value_type, 184)
		497: Option((u32, u32))	extractor(multi_lane, 496)
		498: (u32, u32)	match_some(497)
		499: u32	match_tuple(498, 0)
		500: u32	match_tuple(498, 1)
		501: Type	extractor(value_type, 175)
		502: Option((u32, u32))	extractor(multi_lane, 501)
		503: (u32, u32)	match_some(502)
		504: u32	match_tuple(503, 0)
		505: u32	match_tuple(503, 1)
		506: Xmm	constructor(put_in_xmm, [175], 2)
		507: XmmMem	constructor(xmm_to_xmm_mem, [506], 3)
		508: Xmm	constructor(x64_pmullw, [185, 507], 4)
		509: XmmMem	constructor(xmm_to_xmm_mem, [506], 5)
		510: Xmm	constructor(x64_pmulhw, [185, 509], 6)
		511: XmmMem	constructor(xmm_to_xmm_mem, [510], 7)
		512: Xmm	constructor(x64_punpckhwd, [508, 511], 8)
		513: InstOutput	constructor(output_xmm, [512], 9)
		514: XmmMem	constructor(put_in_xmm_mem, [184], 1)
		515: u8	const_int(250, u8)
		516: Xmm	constructor(x64_pshufd, [514, 515], 2)
		517: XmmMem	constructor(put_in_xmm_mem, [175], 3)
		518: Xmm	constructor(x64_pshufd, [517, 515], 4)
		519: XmmMem	constructor(xmm_to_xmm_mem, [518], 5)
		520: Xmm	constructor(x64_pmuldq, [516, 519], 6)
		521: InstOutput	constructor(output_xmm, [520], 7)
		522: Xmm	constructor(x64_punpcklwd, [508, 511], 8)
		523: InstOutput	constructor(output_xmm, [522], 9)
		524: u8	const_int(80, u8)
		525: Xmm	constructor(x64_pshufd, [514, 524], 2)
		526: Xmm	constructor(x64_pshufd, [517, 524], 4)
		527: XmmMem	constructor(xmm_to_xmm_mem, [526], 5)
		528: Xmm	constructor(x64_pmuldq, [525, 527], 6)
		529: InstOutput	constructor(output_xmm, [528], 7)
		530: Xmm	constructor(x64_pmulhuw, [185, 509], 6)
		531: XmmMem	constructor(xmm_to_xmm_mem, [530], 7)
		532: Xmm	constructor(x64_punpckhwd, [508, 531], 8)
		533: InstOutput	constructor(output_xmm, [532], 9)
		534: Xmm	constructor(x64_pmuludq, [516, 519], 6)
		535: InstOutput	constructor(output_xmm, [534], 7)
		536: Xmm	constructor(x64_punpcklwd, [508, 531], 8)
		537: InstOutput	constructor(output_xmm, [536], 9)
		538: Xmm	constructor(x64_pmuludq, [525, 527], 6)
		539: InstOutput	constructor(output_xmm, [538], 7)
		540: bool	constructor(use_ssse3, [], 0)
		541: XmmMem	constructor(put_in_xmm_mem, [381], 1)
		542: Xmm	constructor(x64_pabsb, [541], 2)
		543: InstOutput	constructor(output_xmm, [542], 3)
		544: Xmm	constructor(put_in_xmm, [381], 1)
		545: Xmm	constructor(xmm_zero, [278], 2)
		546: XmmMem	constructor(xmm_to_xmm_mem, [544], 3)
		547: Xmm	constructor(x64_psubb, [545, 546], 4)
		548: XmmMem	constructor(xmm_to_xmm_mem, [547], 5)
		549: Xmm	constructor(x64_pminub, [544, 548], 6)
		550: InstOutput	constructor(output_xmm, [549], 7)
		551: Xmm	constructor(x64_pabsw, [541], 2)
		552: InstOutput	constructor(output_xmm, [551], 3)
		553: Xmm	constructor(xmm_zero, [400], 2)
		554: Xmm	constructor(x64_psubw, [553, 546], 4)
		555: XmmMem	constructor(xmm_to_xmm_mem, [554], 5)
		556: Xmm	constructor(x64_pmaxsw, [544, 555], 6)
		557: InstOutput	constructor(output_xmm, [556], 7)
		558: Xmm	constructor(x64_pabsd, [541], 2)
		559: InstOutput	constructor(output_xmm, [558], 3)
		560: u32	const_int(31, u32)
		561: XmmMemImm	constructor(xmi_imm, [560], 2)
		562: Xmm	constructor(x64_psrad, [544, 561], 3)
		563: XmmMem	constructor(xmm_to_xmm_mem, [562], 4)
		564: Xmm	constructor(x64_pxor, [544, 563], 5)
		565: XmmMem	constructor(xmm_to_xmm_mem, [562], 6)
		566: Xmm	constructor(x64_psubd, [564, 565], 7)
		567: InstOutput	constructor(output_xmm, [566], 8)
		568: Xmm	constructor(x64_vpabsq, [541], 2)
		569: InstOutput	constructor(output_xmm, [568], 3)
		570: Reg	constructor(imm, [410, 14], 2)
		571: Xmm	constructor(xmm_new, [570], 3)
		572: XmmMem	constructor(xmm_to_xmm_mem, [544], 4)
		573: Xmm	constructor(x64_psubq, [571, 572], 5)
		574: XmmMem	constructor(xmm_to_xmm_mem, [544], 6)
		575: Xmm	constructor(x64_blendvpd, [573, 574, 573], 7)
		576: InstOutput	constructor(output_xmm, [575], 8)
		577: RegMemImm	make_variant(RegMemImm::Imm, [560])
		578: XmmMemImm	constructor(xmm_mem_imm_new, [577], 2)
		579: Xmm	constructor(x64_psrad, [544, 578], 3)
		580: XmmMem	constructor(xmm_to_xmm_mem, [579], 4)
		581: u8	const_int(245, u8)
		582: Xmm	constructor(x64_pshufd, [580, 581], 5)
		583: XmmMem	constructor(xmm_to_xmm_mem, [582], 6)
		584: Xmm	constructor(x64_pxor, [544, 583], 7)
		585: XmmMem	constructor(xmm_to_xmm_mem, [582], 8)
		586: Xmm	constructor(x64_psubq, [584, 585], 9)
		587: InstOutput	constructor(output_xmm, [586], 10)
		588: ProducesFlags	constructor(x64_neg_paired, [5, 382], 2)
		589: Reg	constructor(produces_flags_get_reg, [588], 3)
		590: Gpr	constructor(gpr_new, [589], 4)
		591: CC	make_variant(CC::S, [])
		592: GprMem	constructor(gpr_to_gpr_mem, [382], 5)
		593: ConsumesFlags	constructor(cmove, [5, 591, 592, 590], 6)
		594: ProducesFlags	constructor(produces_flags_ignore, [588], 7)
		595: Reg	constructor(with_flags_reg, [594, 593], 8)
		596: InstOutput	constructor(output_reg, [595], 9)
		597: GprMemImm	constructor(reg_to_gpr_mem_imm, [389], 6)
		598: ConsumesFlags	constructor(x64_adc_paired, [12, 387, 597], 7)
		599: ValueRegs	constructor(with_flags, [388, 598], 8)
		600: Reg	constructor(value_regs_get, [599, 81], 9)
		601: Gpr	constructor(gpr_new, [600], 10)
		602: ProducesFlags	constructor(x64_neg_paired, [12, 601], 11)
		603: ProducesFlags	constructor(produces_flags_ignore, [602], 12)
		604: GprMem	constructor(gpr_to_gpr_mem, [386], 13)
		605: Reg	constructor(value_regs_get, [599, 79], 14)
		606: Gpr	constructor(gpr_new, [605], 15)
		607: ConsumesFlags	constructor(cmove, [12, 591, 604, 606], 16)
		608: GprMem	constructor(gpr_to_gpr_mem, [387], 17)
		609: Reg	constructor(produces_flags_get_reg, [602], 18)
		610: Gpr	constructor(gpr_new, [609], 19)
		611: ConsumesFlags	constructor(cmove, [12, 591, 608, 610], 20)
		612: ConsumesFlags	constructor(consumes_flags_concat, [607, 611], 21)
		613: ValueRegs	constructor(with_flags, [603, 612], 22)
		614: InstOutput	constructor(output, [613], 23)
		615: u64	const_int(2147483647, u64)
		616: Reg	constructor(imm, [21, 615], 2)
		617: XmmMem	constructor(reg_to_xmm_mem, [616], 3)
		618: Xmm	constructor(x64_andps, [544, 617], 4)
		619: InstOutput	constructor(output_xmm, [618], 5)
		620: u64	const_int(9223372036854775807, u64)
		621: Reg	constructor(imm, [28, 620], 2)
		622: XmmMem	constructor(reg_to_xmm_mem, [621], 3)
		623: Xmm	constructor(x64_andpd, [544, 622], 4)
		624: InstOutput	constructor(output_xmm, [623], 5)
		625: Xmm	constructor(vector_all_ones, [], 2)
		626: XmmMemImm	constructor(xmi_imm, [229], 3)
		627: Xmm	constructor(x64_psrld, [625, 626], 4)
		628: XmmMem	constructor(xmm_to_xmm_mem, [627], 5)
		629: Xmm	constructor(x64_andps, [544, 628], 6)
		630: InstOutput	constructor(output_xmm, [629], 7)
		631: Xmm	constructor(x64_psrlq, [625, 626], 4)
		632: XmmMem	constructor(xmm_to_xmm_mem, [631], 5)
		633: Xmm	constructor(x64_andpd, [544, 632], 6)
		634: InstOutput	constructor(output_xmm, [633], 7)
		635: u64	const_int(2147483648, u64)
		636: Reg	constructor(imm, [21, 635], 2)
		637: XmmMem	constructor(reg_to_xmm_mem, [636], 3)
		638: Xmm	constructor(x64_xorps, [544, 637], 4)
		639: InstOutput	constructor(output_xmm, [638], 5)
		640: u64	const_int(9223372036854775808, u64)
		641: Reg	constructor(imm, [28, 640], 2)
		642: XmmMem	constructor(reg_to_xmm_mem, [641], 3)
		643: Xmm	constructor(x64_xorpd, [544, 642], 4)
		644: InstOutput	constructor(output_xmm, [643], 5)
		645: XmmMemImm	constructor(xmi_imm, [560], 3)
		646: Xmm	constructor(x64_pslld, [625, 645], 4)
		647: XmmMem	constructor(xmm_to_xmm_mem, [646], 5)
		648: Xmm	constructor(x64_xorps, [544, 647], 6)
		649: InstOutput	constructor(output_xmm, [648], 7)
		650: XmmMemImm	constructor(xmi_imm, [352], 3)
		651: Xmm	constructor(x64_psllq, [625, 650], 4)
		652: XmmMem	constructor(xmm_to_xmm_mem, [651], 5)
		653: Xmm	constructor(x64_xorpd, [544, 652], 6)
		654: InstOutput	constructor(output_xmm, [653], 7)
		655: Type	extractor(value_type, 381)
		656: ValueRegs	constructor(lower_bmask, [3, 655, 385], 2)
		657: InstOutput	constructor(output, [656], 3)
		658: Gpr	constructor(x64_not, [3, 382], 2)
		659: InstOutput	constructor(output_gpr, [658], 3)
		660: ValueRegs	constructor(i128_not, [381], 1)
		661: InstOutput	constructor(output, [660], 2)
		662: XmmMem	constructor(xmm_to_xmm_mem, [625], 3)
		663: Xmm	constructor(x64_xor_vector, [163, 544, 662], 4)
		664: InstOutput	constructor(output_xmm, [663], 5)
		665: Xmm	constructor(x64_xor_vector, [3, 544, 662], 4)
		666: InstOutput	constructor(output_xmm, [665], 5)
		667: Opcode	match_variant(6, InstructionData::Ternary, opcode)
		668: ValueArray3	match_variant(6, InstructionData::Ternary, args)
		669: (Value, Value, Value)	extractor(value_array_3, 668)
		670: Value	match_tuple(669, 0)
		671: Value	match_tuple(669, 1)
		672: Value	match_tuple(669, 2)
		673: Xmm	constructor(put_in_xmm, [670], 1)
		674: Xmm	constructor(put_in_xmm, [671], 2)
		675: XmmMem	constructor(xmm_to_xmm_mem, [673], 3)
		676: Xmm	constructor(sse_and, [3, 674, 675], 4)
		677: XmmMem	constructor(put_in_xmm_mem, [672], 5)
		678: Xmm	constructor(sse_and_not, [3, 673, 677], 6)
		679: XmmMem	constructor(xmm_to_xmm_mem, [676], 7)
		680: Xmm	constructor(sse_or, [3, 678, 679], 8)
		681: InstOutput	constructor(output_xmm, [680], 9)
		682: Option(bool)	constructor(all_ones_or_all_zeros, [670], 0)
		683: bool	match_some(682)
		684: Xmm	constructor(put_in_xmm, [672], 1)
		685: XmmMem	constructor(put_in_xmm_mem, [671], 2)
		686: Xmm	constructor(put_in_xmm, [670], 3)
		687: Xmm	constructor(x64_pblendvb, [684, 685, 686], 4)
		688: InstOutput	constructor(output_xmm, [687], 5)
		689: Option(Inst)	extractor(def_inst, 670)
		690: Inst	match_some(689)
		691: InstructionData	extractor(inst_data, 690)
		692: Opcode	match_variant(691, InstructionData::LoadNoOffset, opcode)
		693: Value	match_variant(691, InstructionData::LoadNoOffset, arg)
		694: MemFlags	match_variant(691, InstructionData::LoadNoOffset, flags)
		695: Option(Inst)	extractor(def_inst, 693)
		696: Inst	match_some(695)
		697: InstructionData	extractor(inst_data, 696)
		698: Opcode	match_variant(697, InstructionData::FloatCompare, opcode)
		699: ValueArray2	match_variant(697, InstructionData::FloatCompare, args)
		700: FloatCC	match_variant(697, InstructionData::FloatCompare, cond)
		701: (Value, Value)	extractor(value_array_2, 699)
		702: Value	match_tuple(701, 0)
		703: Value	match_tuple(701, 1)
		704: Xmm	constructor(put_in_xmm, [702], 1)
		705: XmmMem	constructor(put_in_xmm_mem, [703], 2)
		706: Xmm	constructor(x64_minps, [704, 705], 3)
		707: InstOutput	constructor(output_xmm, [706], 4)
		708: Xmm	constructor(x64_minpd, [704, 705], 3)
		709: InstOutput	constructor(output_xmm, [708], 4)
		710: Xmm	constructor(put_in_xmm, [703], 1)
		711: XmmMem	constructor(put_in_xmm_mem, [702], 2)
		712: Xmm	constructor(x64_maxps, [710, 711], 3)
		713: InstOutput	constructor(output_xmm, [712], 4)
		714: Xmm	constructor(x64_maxpd, [710, 711], 3)
		715: InstOutput	constructor(output_xmm, [714], 4)
		716: ValueRegs	constructor(put_in_regs, [670], 1)
		717: ValueRegs	constructor(put_in_regs, [671], 2)
		718: ValueRegs	constructor(and_i128, [716, 717], 3)
		719: ValueRegs	constructor(i128_not, [670], 4)
		720: ValueRegs	constructor(put_in_regs, [672], 5)
		721: ValueRegs	constructor(and_i128, [719, 720], 6)
		722: ValueRegs	constructor(or_i128, [718, 721], 7)
		723: InstOutput	constructor(output, [722], 8)
		724: Option(Type)	extractor(ty_int_ref_scalar_64, 3)
		725: Type	match_some(724)
		726: Gpr	constructor(put_in_gpr, [670], 1)
		727: GprMemImm	constructor(put_in_gpr_mem_imm, [671], 2)
		728: Gpr	constructor(x64_and, [725, 726, 727], 3)
		729: Gpr	constructor(put_in_gpr, [670], 4)
		730: Gpr	constructor(x64_not, [725, 729], 5)
		731: GprMemImm	constructor(put_in_gpr_mem_imm, [672], 6)
		732: Gpr	constructor(x64_and, [725, 730, 731], 7)
		733: GprMemImm	constructor(gpr_to_gpr_mem_imm, [732], 8)
		734: Gpr	constructor(x64_or, [725, 728, 733], 9)
		735: InstOutput	constructor(output_gpr, [734], 10)
		736: Xmm	constructor(sse_and, [163, 673, 685], 3)
		737: Xmm	constructor(put_in_xmm, [670], 4)
		738: Xmm	constructor(vector_all_ones, [], 5)
		739: XmmMem	constructor(xmm_to_xmm_mem, [738], 6)
		740: Xmm	constructor(x64_xor_vector, [163, 737, 739], 7)
		741: XmmMem	constructor(put_in_xmm_mem, [672], 8)
		742: Xmm	constructor(sse_and, [163, 740, 741], 9)
		743: XmmMem	constructor(xmm_to_xmm_mem, [742], 10)
		744: Xmm	constructor(sse_or, [163, 736, 743], 11)
		745: InstOutput	constructor(output_xmm, [744], 12)
		746: Xmm	constructor(x64_blendvps, [684, 685, 686], 4)
		747: InstOutput	constructor(output_xmm, [746], 5)
		748: Xmm	constructor(x64_blendvpd, [684, 685, 686], 4)
		749: InstOutput	constructor(output_xmm, [748], 5)
		750: Opcode	match_variant(6, InstructionData::TernaryImm8, opcode)
		751: ValueArray2	match_variant(6, InstructionData::TernaryImm8, args)
		752: Uimm8	match_variant(6, InstructionData::TernaryImm8, imm)
		753: (Value, Value)	extractor(value_array_2, 751)
		754: Value	match_tuple(753, 0)
		755: Value	match_tuple(753, 1)
		756: Type	extractor(value_type, 754)
		757: u8	extractor(u8_from_uimm8, 752)
		758: Xmm	constructor(put_in_xmm, [754], 1)
		759: GprMem	constructor(put_in_gpr_mem, [755], 2)
		760: Xmm	constructor(x64_pinsrb, [758, 759, 757], 3)
		761: InstOutput	constructor(output_xmm, [760], 4)
		762: Option(SinkableLoad)	extractor(sinkable_load_exact, 755)
		763: SinkableLoad	match_some(762)
		764: GprMem	constructor(sink_load_to_gpr_mem, [763], 2)
		765: Xmm	constructor(x64_pinsrb, [758, 764, 757], 3)
		766: InstOutput	constructor(output_xmm, [765], 4)
		767: VCodeConstant	constructor(insert_i8x16_lane_hole, [757], 2)
		768: XmmMem	constructor(const_to_xmm_mem, [767], 3)
		769: Xmm	constructor(x64_pand, [758, 768], 4)
		770: ExtMode	make_variant(ExtMode::BL, [])
		771: GprMem	constructor(put_in_gpr_mem, [755], 5)
		772: Gpr	constructor(x64_movzx, [770, 771], 6)
		773: Type	const_prim(I32)
		774: u8	const_int(3, u8)
		775: u8	constructor(u8_and, [757, 774], 0)
		776: u8	constructor(u8_shl, [775, 774], 0)
		777: Imm8Reg	make_variant(Imm8Reg::Imm8, [776])
		778: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [777], 7)
		779: Gpr	constructor(x64_shl, [773, 772, 778], 8)
		780: GprMem	constructor(gpr_to_gpr_mem, [779], 9)
		781: Xmm	constructor(x64_movd_to_xmm, [780], 10)
		782: XmmMem	constructor(xmm_to_xmm_mem, [781], 11)
		783: u8	const_int(2, u8)
		784: u8	constructor(u8_shr, [757, 783], 0)
		785: u8	constructor(insert_i8x16_lane_pshufd_imm, [784], 12)
		786: Xmm	constructor(x64_pshufd, [782, 785], 13)
		787: XmmMem	constructor(xmm_to_xmm_mem, [786], 14)
		788: Xmm	constructor(x64_por, [769, 787], 15)
		789: InstOutput	constructor(output_xmm, [788], 16)
		790: Xmm	constructor(x64_pinsrw, [758, 759, 757], 3)
		791: InstOutput	constructor(output_xmm, [790], 4)
		792: Xmm	constructor(x64_pinsrw, [758, 764, 757], 3)
		793: InstOutput	constructor(output_xmm, [792], 4)
		794: Xmm	constructor(x64_pinsrd, [758, 759, 757], 3)
		795: InstOutput	constructor(output_xmm, [794], 4)
		796: Xmm	constructor(x64_movd_to_xmm, [759], 3)
		797: Xmm	constructor(x64_movss_regmove, [758, 796], 4)
		798: InstOutput	constructor(output_xmm, [797], 5)
		799: GprMem	constructor(put_in_gpr_mem, [755], 1)
		800: Xmm	constructor(x64_movd_to_xmm, [799], 2)
		801: Xmm	constructor(put_in_xmm, [754], 3)
		802: XmmMem	constructor(xmm_to_xmm_mem, [801], 4)
		803: Xmm	constructor(x64_punpcklqdq, [800, 802], 5)
		804: XmmMem	constructor(xmm_to_xmm_mem, [801], 6)
		805: u8	const_int(226, u8)
		806: Xmm	constructor(x64_shufps, [803, 804, 805], 7)
		807: InstOutput	constructor(output_xmm, [806], 8)
		808: u8	const_int(48, u8)
		809: Xmm	constructor(x64_shufps, [800, 802, 808], 5)
		810: XmmMem	constructor(xmm_to_xmm_mem, [809], 6)
		811: u8	const_int(132, u8)
		812: Xmm	constructor(x64_shufps, [801, 810, 811], 7)
		813: InstOutput	constructor(output_xmm, [812], 8)
		814: u8	const_int(228, u8)
		815: Xmm	constructor(x64_shufps, [800, 802, 814], 5)
		816: XmmMem	constructor(xmm_to_xmm_mem, [815], 6)
		817: u8	const_int(36, u8)
		818: Xmm	constructor(x64_shufps, [801, 816, 817], 7)
		819: InstOutput	constructor(output_xmm, [818], 8)
		820: Xmm	constructor(x64_pinsrq, [758, 759, 757], 3)
		821: InstOutput	constructor(output_xmm, [820], 4)
		822: Xmm	constructor(x64_movq_to_xmm, [759], 3)
		823: Xmm	constructor(x64_movsd_regmove, [758, 822], 4)
		824: InstOutput	constructor(output_xmm, [823], 5)
		825: XmmMem	constructor(xmm_to_xmm_mem, [822], 4)
		826: Xmm	constructor(x64_punpcklqdq, [758, 825], 5)
		827: InstOutput	constructor(output_xmm, [826], 6)
		828: Option(Inst)	extractor(def_inst, 754)
		829: Inst	match_some(828)
		830: Option(Value)	extractor(first_result, 829)
		831: Value	match_some(830)
		832: Type	extractor(value_type, 831)
		833: InstructionData	extractor(inst_data, 829)
		834: Opcode	match_variant(833, InstructionData::Unary, opcode)
		835: Value	match_variant(833, InstructionData::Unary, arg)
		836: Gpr	constructor(put_in_gpr, [835], 1)
		837: Xmm	constructor(bitcast_gpr_to_xmm, [12, 836], 2)
		838: GprMem	constructor(put_in_gpr_mem, [755], 3)
		839: u8	const_int(1, u8)
		840: Xmm	constructor(x64_pinsrq, [837, 838, 839], 4)
		841: InstOutput	constructor(output_xmm, [840], 5)
		842: Option(SinkableLoad)	extractor(sinkable_load, 755)
		843: SinkableLoad	match_some(842)
		844: XmmMem	constructor(sink_load_to_xmm_mem, [843], 2)
		845: u8	constructor(sse_insertps_lane_imm, [757], 3)
		846: Xmm	constructor(x64_insertps, [758, 844, 845], 4)
		847: InstOutput	constructor(output_xmm, [846], 5)
		848: Xmm	constructor(put_in_xmm, [755], 2)
		849: Xmm	constructor(f32x4_insertlane, [758, 848, 757], 3)
		850: InstOutput	constructor(output_xmm, [849], 4)
		851: Xmm	constructor(x64_movsd_regmove, [758, 848], 3)
		852: InstOutput	constructor(output_xmm, [851], 4)
		853: XmmMem	constructor(put_in_xmm_mem, [755], 2)
		854: Xmm	constructor(x64_movlhps, [758, 853], 3)
		855: InstOutput	constructor(output_xmm, [854], 4)
		856: ValueRegs	constructor(cmp_and_choose, [5, 95, 39, 40], 1)
		857: InstOutput	constructor(output, [856], 2)
		858: CC	make_variant(CC::NB, [])
		859: ValueRegs	constructor(cmp_and_choose, [5, 858, 39, 40], 1)
		860: InstOutput	constructor(output, [859], 2)
		861: CC	make_variant(CC::L, [])
		862: ValueRegs	constructor(cmp_and_choose, [5, 861, 39, 40], 1)
		863: InstOutput	constructor(output, [862], 2)
		864: CC	make_variant(CC::NL, [])
		865: ValueRegs	constructor(cmp_and_choose, [5, 864, 39, 40], 1)
		866: InstOutput	constructor(output, [865], 2)
		867: Option(Type)	extractor(ty_vec128, 3)
		868: Type	match_some(867)
		869: Xmm	constructor(lower_vec_smax, [868, 68, 459], 3)
		870: InstOutput	constructor(output_xmm, [869], 4)
		871: bool	constructor(has_pmins, [868], 0)
		872: Xmm	constructor(x64_pmins, [868, 68, 69], 3)
		873: InstOutput	constructor(output_xmm, [872], 4)
		874: Xmm	constructor(x64_pcmpgt, [868, 459, 316], 4)
		875: Xmm	constructor(x64_pand, [874, 318], 6)
		876: Xmm	constructor(x64_pandn, [874, 464], 8)
		877: XmmMem	constructor(xmm_to_xmm_mem, [876], 9)
		878: Xmm	constructor(x64_por, [875, 877], 10)
		879: InstOutput	constructor(output_xmm, [878], 11)
		880: bool	constructor(has_pmaxu, [868], 0)
		881: Xmm	constructor(x64_pmaxu, [868, 68, 69], 3)
		882: InstOutput	constructor(output_xmm, [881], 4)
		883: Xmm	constructor(x64_psubusw, [459, 316], 4)
		884: XmmMem	constructor(xmm_to_xmm_mem, [883], 5)
		885: Xmm	constructor(x64_paddw, [68, 884], 6)
		886: InstOutput	constructor(output_xmm, [885], 7)
		887: Xmm	constructor(flip_high_bit_mask, [868], 3)
		888: XmmMem	constructor(xmm_to_xmm_mem, [887], 4)
		889: Xmm	constructor(x64_pxor, [68, 888], 5)
		890: XmmMem	constructor(xmm_to_xmm_mem, [887], 6)
		891: Xmm	constructor(x64_pxor, [459, 890], 7)
		892: XmmMem	constructor(xmm_to_xmm_mem, [891], 8)
		893: Xmm	constructor(x64_pcmpgt, [868, 889, 892], 9)
		894: XmmMem	constructor(xmm_to_xmm_mem, [68], 10)
		895: Xmm	constructor(x64_pand, [893, 894], 11)
		896: XmmMem	constructor(xmm_to_xmm_mem, [459], 12)
		897: Xmm	constructor(x64_pandn, [893, 896], 13)
		898: XmmMem	constructor(xmm_to_xmm_mem, [897], 14)
		899: Xmm	constructor(x64_por, [895, 898], 15)
		900: InstOutput	constructor(output_xmm, [899], 16)
		901: bool	constructor(has_pminu, [868], 0)
		902: Xmm	constructor(x64_pminu, [868, 68, 69], 3)
		903: InstOutput	constructor(output_xmm, [902], 4)
		904: XmmMem	constructor(xmm_to_xmm_mem, [150], 4)
		905: Xmm	constructor(x64_psubw, [68, 904], 5)
		906: InstOutput	constructor(output_xmm, [905], 6)
		907: XmmMem	constructor(xmm_to_xmm_mem, [889], 8)
		908: Xmm	constructor(x64_pcmpgt, [868, 891, 907], 9)
		909: Xmm	constructor(x64_pand, [908, 894], 11)
		910: Xmm	constructor(x64_pandn, [908, 896], 13)
		911: XmmMem	constructor(xmm_to_xmm_mem, [910], 14)
		912: Xmm	constructor(x64_por, [909, 911], 15)
		913: InstOutput	constructor(output_xmm, [912], 16)
		914: Opcode	match_variant(6, InstructionData::Trap, opcode)
		915: TrapCode	match_variant(6, InstructionData::Trap, code)
		916: SideEffectNoResult	constructor(x64_ud2, [915], 1)
		917: InstOutput	constructor(side_effect, [916], 2)
		918: Opcode	match_variant(6, InstructionData::IntAddTrap, opcode)
		919: ValueArray2	match_variant(6, InstructionData::IntAddTrap, args)
		920: TrapCode	match_variant(6, InstructionData::IntAddTrap, code)
		921: (Value, Value)	extractor(value_array_2, 919)
		922: Value	match_tuple(921, 0)
		923: Value	match_tuple(921, 1)
		924: Gpr	constructor(put_in_gpr, [922], 1)
		925: GprMemImm	constructor(put_in_gpr_mem_imm, [923], 2)
		926: ProducesFlags	constructor(x64_add_with_flags_paired, [5, 924, 925], 3)
		927: ConsumesFlags	constructor(trap_if, [95, 920], 4)
		928: ValueRegs	constructor(with_flags, [926, 927], 5)
		929: InstOutput	constructor(output, [928], 6)
		930: Option(GprMemImm)	extractor(simm32_from_value, 922)
		931: GprMemImm	match_some(930)
		932: Gpr	constructor(put_in_gpr, [923], 1)
		933: ProducesFlags	constructor(x64_add_with_flags_paired, [5, 932, 931], 2)
		934: ConsumesFlags	constructor(trap_if, [95, 920], 3)
		935: ValueRegs	constructor(with_flags, [933, 934], 4)
		936: InstOutput	constructor(output, [935], 5)
		937: Option(SinkableLoad)	extractor(sinkable_load, 922)
		938: SinkableLoad	match_some(937)
		939: GprMemImm	constructor(sink_load_to_gpr_mem_imm, [938], 2)
		940: ProducesFlags	constructor(x64_add_with_flags_paired, [5, 932, 939], 3)
		941: ValueRegs	constructor(with_flags, [940, 927], 5)
		942: InstOutput	constructor(output, [941], 6)
		943: Opcode	match_variant(6, InstructionData::MultiAry, opcode)
		944: ValueList	match_variant(6, InstructionData::MultiAry, args)
		945: ValueSlice	extractor(value_list_slice, 944)
		946: InstOutput	constructor(lower_return, [945], 1)
		947: Opcode	match_variant(6, InstructionData::IntCompare, opcode)
		948: ValueArray2	match_variant(6, InstructionData::IntCompare, args)
		949: IntCC	match_variant(6, InstructionData::IntCompare, cond)
		950: (Value, Value)	extractor(value_array_2, 948)
		951: Value	match_tuple(950, 0)
		952: Value	match_tuple(950, 1)
		953: Type	extractor(value_type, 951)
		954: Option(Type)	extractor(fits_in_64, 953)
		955: Type	match_some(954)
		956: IcmpCondResult	constructor(emit_cmp, [949, 951, 952], 1)
		957: ValueRegs	constructor(lower_icmp_bool, [956], 2)
		958: InstOutput	constructor(output, [957], 3)
		959: Option(Inst)	extractor(def_inst, 952)
		960: Inst	match_some(959)
		961: InstructionData	extractor(inst_data, 960)
		962: Opcode	match_variant(961, InstructionData::UnaryImm, opcode)
		963: Imm64	match_variant(961, InstructionData::UnaryImm, imm)
		964: u64	extractor(u64_from_imm64, 963)
		965: Gpr	constructor(put_in_gpr, [951], 1)
		966: u8	const_int(63, u8)
		967: Imm8Reg	make_variant(Imm8Reg::Imm8, [966])
		968: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [967], 2)
		969: Gpr	constructor(x64_shr, [12, 965, 968], 3)
		970: InstOutput	constructor(output_gpr, [969], 4)
		971: Option(Inst)	extractor(def_inst, 951)
		972: Inst	match_some(971)
		973: InstructionData	extractor(inst_data, 972)
		974: Opcode	match_variant(973, InstructionData::UnaryImm, opcode)
		975: Imm64	match_variant(973, InstructionData::UnaryImm, imm)
		976: u64	extractor(u64_from_imm64, 975)
		977: Type	extractor(value_type, 952)
		978: Gpr	constructor(put_in_gpr, [952], 1)
		979: Gpr	constructor(x64_shr, [12, 978, 968], 3)
		980: InstOutput	constructor(output_gpr, [979], 4)
		981: Gpr	constructor(x64_not, [12, 978], 2)
		982: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [967], 3)
		983: Gpr	constructor(x64_shr, [12, 981, 982], 4)
		984: InstOutput	constructor(output_gpr, [983], 5)
		985: Gpr	constructor(x64_not, [12, 965], 2)
		986: Gpr	constructor(x64_shr, [12, 985, 982], 4)
		987: InstOutput	constructor(output_gpr, [986], 5)
		988: u8	const_int(31, u8)
		989: Imm8Reg	make_variant(Imm8Reg::Imm8, [988])
		990: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [989], 2)
		991: Gpr	constructor(x64_shr, [773, 965, 990], 3)
		992: InstOutput	constructor(output_gpr, [991], 4)
		993: Gpr	constructor(x64_shr, [773, 978, 990], 3)
		994: InstOutput	constructor(output_gpr, [993], 4)
		995: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [989], 3)
		996: Gpr	constructor(x64_shr, [773, 981, 995], 4)
		997: InstOutput	constructor(output_gpr, [996], 5)
		998: Gpr	constructor(x64_shr, [773, 985, 995], 4)
		999: InstOutput	constructor(output_gpr, [998], 5)
		1000: Option(Type)	extractor(ty_vec128, 953)
		1001: Type	match_some(1000)
		1002: Xmm	constructor(put_in_xmm, [951], 1)
		1003: XmmMem	constructor(put_in_xmm_mem, [952], 2)
		1004: Xmm	constructor(x64_pcmpeq, [1001, 1002, 1003], 3)
		1005: InstOutput	constructor(output_xmm, [1004], 4)
		1006: Xmm	constructor(vector_all_ones, [], 4)
		1007: XmmMem	constructor(xmm_to_xmm_mem, [1006], 5)
		1008: Xmm	constructor(x64_pxor, [1004, 1007], 6)
		1009: InstOutput	constructor(output_xmm, [1008], 7)
		1010: Xmm	constructor(x64_pcmpgt, [1001, 1002, 1003], 3)
		1011: InstOutput	constructor(output_xmm, [1010], 4)
		1012: Xmm	constructor(put_in_xmm, [952], 1)
		1013: XmmMem	constructor(put_in_xmm_mem, [951], 2)
		1014: Xmm	constructor(x64_pcmpgt, [1001, 1012, 1013], 3)
		1015: InstOutput	constructor(output_xmm, [1014], 4)
		1016: bool	constructor(has_pmaxu, [1001], 0)
		1017: Xmm	constructor(put_in_xmm, [952], 2)
		1018: XmmMem	constructor(xmm_to_xmm_mem, [1017], 3)
		1019: Xmm	constructor(x64_pmaxu, [1001, 1002, 1018], 4)
		1020: XmmMem	constructor(xmm_to_xmm_mem, [1017], 5)
		1021: Xmm	constructor(x64_pcmpeq, [1001, 1019, 1020], 6)
		1022: Xmm	constructor(vector_all_ones, [], 7)
		1023: XmmMem	constructor(xmm_to_xmm_mem, [1022], 8)
		1024: Xmm	constructor(x64_pxor, [1021, 1023], 9)
		1025: InstOutput	constructor(output_xmm, [1024], 10)
		1026: Xmm	constructor(flip_high_bit_mask, [1001], 1)
		1027: Xmm	constructor(put_in_xmm, [951], 2)
		1028: XmmMem	constructor(xmm_to_xmm_mem, [1026], 3)
		1029: Xmm	constructor(x64_pxor, [1027, 1028], 4)
		1030: Xmm	constructor(put_in_xmm, [952], 5)
		1031: XmmMem	constructor(xmm_to_xmm_mem, [1026], 6)
		1032: Xmm	constructor(x64_pxor, [1030, 1031], 7)
		1033: XmmMem	constructor(xmm_to_xmm_mem, [1032], 8)
		1034: Xmm	constructor(x64_pcmpgt, [1001, 1029, 1033], 9)
		1035: InstOutput	constructor(output_xmm, [1034], 10)
		1036: bool	constructor(has_pminu, [1001], 0)
		1037: Xmm	constructor(x64_pminu, [1001, 1002, 1018], 4)
		1038: Xmm	constructor(x64_pcmpeq, [1001, 1037, 1020], 6)
		1039: Xmm	constructor(x64_pxor, [1038, 1023], 9)
		1040: InstOutput	constructor(output_xmm, [1039], 10)
		1041: XmmMem	constructor(xmm_to_xmm_mem, [1029], 8)
		1042: Xmm	constructor(x64_pcmpgt, [1001, 1032, 1041], 9)
		1043: InstOutput	constructor(output_xmm, [1042], 10)
		1044: bool	constructor(has_pmaxs, [1001], 0)
		1045: XmmMem	constructor(put_in_xmm_mem, [952], 3)
		1046: Xmm	constructor(x64_pmaxs, [1001, 1027, 1045], 4)
		1047: XmmMem	constructor(xmm_to_xmm_mem, [1046], 5)
		1048: Xmm	constructor(x64_pcmpeq, [1001, 1002, 1047], 6)
		1049: InstOutput	constructor(output_xmm, [1048], 7)
		1050: Xmm	constructor(x64_pxor, [1014, 1007], 6)
		1051: InstOutput	constructor(output_xmm, [1050], 7)
		1052: bool	constructor(has_pmins, [1001], 0)
		1053: Xmm	constructor(x64_pmins, [1001, 1027, 1045], 4)
		1054: XmmMem	constructor(xmm_to_xmm_mem, [1053], 5)
		1055: Xmm	constructor(x64_pcmpeq, [1001, 1002, 1054], 6)
		1056: InstOutput	constructor(output_xmm, [1055], 7)
		1057: Xmm	constructor(x64_pxor, [1010, 1007], 6)
		1058: InstOutput	constructor(output_xmm, [1057], 7)
		1059: Xmm	constructor(x64_pmaxu, [1001, 1027, 1045], 4)
		1060: XmmMem	constructor(xmm_to_xmm_mem, [1059], 5)
		1061: Xmm	constructor(x64_pcmpeq, [1001, 1002, 1060], 6)
		1062: InstOutput	constructor(output_xmm, [1061], 7)
		1063: Xmm	constructor(x64_psubusw, [1012, 1013], 3)
		1064: Xmm	constructor(xmm_zero, [400], 4)
		1065: XmmMem	constructor(xmm_to_xmm_mem, [1064], 5)
		1066: Xmm	constructor(x64_pcmpeqw, [1063, 1065], 6)
		1067: InstOutput	constructor(output_xmm, [1066], 7)
		1068: Xmm	constructor(vector_all_ones, [], 10)
		1069: XmmMem	constructor(xmm_to_xmm_mem, [1068], 11)
		1070: Xmm	constructor(x64_pxor, [1042, 1069], 12)
		1071: InstOutput	constructor(output_xmm, [1070], 13)
		1072: Xmm	constructor(x64_pminu, [1001, 1027, 1045], 4)
		1073: XmmMem	constructor(xmm_to_xmm_mem, [1072], 5)
		1074: Xmm	constructor(x64_pcmpeq, [1001, 1002, 1073], 6)
		1075: InstOutput	constructor(output_xmm, [1074], 7)
		1076: Xmm	constructor(x64_psubusw, [1002, 1003], 3)
		1077: Xmm	constructor(xmm_zero, [278], 4)
		1078: XmmMem	constructor(xmm_to_xmm_mem, [1077], 5)
		1079: Xmm	constructor(x64_pcmpeqw, [1076, 1078], 6)
		1080: InstOutput	constructor(output_xmm, [1079], 7)
		1081: Xmm	constructor(x64_pxor, [1034, 1069], 12)
		1082: InstOutput	constructor(output_xmm, [1081], 13)
		1083: Opcode	match_variant(6, InstructionData::FloatCompare, opcode)
		1084: ValueArray2	match_variant(6, InstructionData::FloatCompare, args)
		1085: FloatCC	match_variant(6, InstructionData::FloatCompare, cond)
		1086: (Value, Value)	extractor(value_array_2, 1084)
		1087: Value	match_tuple(1086, 0)
		1088: Value	match_tuple(1086, 1)
		1089: Type	extractor(value_type, 1087)
		1090: Option(Type)	extractor(ty_scalar_float, 1089)
		1091: Type	match_some(1090)
		1092: FcmpCondResult	constructor(emit_fcmp, [1085, 1087, 1088], 1)
		1093: ValueRegs	constructor(lower_fcmp_bool, [1092], 2)
		1094: InstOutput	constructor(output, [1093], 3)
		1095: Option(Type)	extractor(ty_vec128, 1089)
		1096: Type	match_some(1095)
		1097: Xmm	constructor(put_in_xmm, [1087], 1)
		1098: XmmMem	constructor(put_in_xmm_mem, [1088], 2)
		1099: FcmpImm	make_variant(FcmpImm::Equal, [])
		1100: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1099], 3)
		1101: InstOutput	constructor(output_xmm, [1100], 4)
		1102: FcmpImm	make_variant(FcmpImm::NotEqual, [])
		1103: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1102], 3)
		1104: InstOutput	constructor(output_xmm, [1103], 4)
		1105: FcmpImm	make_variant(FcmpImm::LessThan, [])
		1106: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1105], 3)
		1107: InstOutput	constructor(output_xmm, [1106], 4)
		1108: FcmpImm	make_variant(FcmpImm::LessThanOrEqual, [])
		1109: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1108], 3)
		1110: InstOutput	constructor(output_xmm, [1109], 4)
		1111: FcmpImm	make_variant(FcmpImm::Ordered, [])
		1112: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1111], 3)
		1113: InstOutput	constructor(output_xmm, [1112], 4)
		1114: FcmpImm	make_variant(FcmpImm::Unordered, [])
		1115: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1114], 3)
		1116: InstOutput	constructor(output_xmm, [1115], 4)
		1117: FcmpImm	make_variant(FcmpImm::UnorderedOrGreaterThan, [])
		1118: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1117], 3)
		1119: InstOutput	constructor(output_xmm, [1118], 4)
		1120: FcmpImm	make_variant(FcmpImm::UnorderedOrGreaterThanOrEqual, [])
		1121: Xmm	constructor(x64_cmpp, [1096, 1097, 1098, 1120], 3)
		1122: InstOutput	constructor(output_xmm, [1121], 4)
		1123: Xmm	constructor(put_in_xmm, [1088], 1)
		1124: XmmMem	constructor(put_in_xmm_mem, [1087], 2)
		1125: Xmm	constructor(x64_cmpp, [1096, 1123, 1124, 1105], 3)
		1126: InstOutput	constructor(output_xmm, [1125], 4)
		1127: Xmm	constructor(x64_cmpp, [1096, 1123, 1124, 1108], 3)
		1128: InstOutput	constructor(output_xmm, [1127], 4)
		1129: Xmm	constructor(x64_cmpp, [1096, 1123, 1124, 1117], 3)
		1130: InstOutput	constructor(output_xmm, [1129], 4)
		1131: Xmm	constructor(x64_cmpp, [1096, 1123, 1124, 1120], 3)
		1132: InstOutput	constructor(output_xmm, [1131], 4)
		1133: Option(Value)	extractor(maybe_uextend, 670)
		1134: Value	match_some(1133)
		1135: Option(Inst)	extractor(def_inst, 1134)
		1136: Inst	match_some(1135)
		1137: InstructionData	extractor(inst_data, 1136)
		1138: Opcode	match_variant(1137, InstructionData::FloatCompare, opcode)
		1139: ValueArray2	match_variant(1137, InstructionData::FloatCompare, args)
		1140: FloatCC	match_variant(1137, InstructionData::FloatCompare, cond)
		1141: (Value, Value)	extractor(value_array_2, 1139)
		1142: Value	match_tuple(1141, 0)
		1143: Value	match_tuple(1141, 1)
		1144: FcmpCondResult	constructor(emit_fcmp, [1140, 1142, 1143], 1)
		1145: InstOutput	constructor(lower_select_fcmp, [3, 1144, 671, 672], 2)
		1146: FloatCC	make_variant(FloatCC::NotEqual, [])
		1147: FcmpCondResult	constructor(emit_fcmp, [1146, 1142, 1143], 1)
		1148: InstOutput	constructor(lower_select_fcmp, [3, 1147, 672, 671], 2)
		1149: Opcode	match_variant(1137, InstructionData::IntCompare, opcode)
		1150: ValueArray2	match_variant(1137, InstructionData::IntCompare, args)
		1151: IntCC	match_variant(1137, InstructionData::IntCompare, cond)
		1152: (Value, Value)	extractor(value_array_2, 1150)
		1153: Value	match_tuple(1152, 0)
		1154: Value	match_tuple(1152, 1)
		1155: Type	extractor(value_type, 1153)
		1156: Option(Type)	extractor(fits_in_64, 1155)
		1157: Type	match_some(1156)
		1158: IcmpCondResult	constructor(emit_cmp, [1151, 1153, 1154], 1)
		1159: InstOutput	constructor(lower_select_icmp, [3, 1158, 671, 672], 2)
		1160: Type	extractor(value_type, 670)
		1161: Option(Type)	extractor(fits_in_64, 1160)
		1162: Type	match_some(1161)
		1163: OperandSize	constructor(raw_operand_size_of_type, [1162], 1)
		1164: Gpr	constructor(put_in_gpr, [670], 2)
		1165: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1164], 3)
		1166: ProducesFlags	constructor(x64_test, [1163, 1164, 1165], 4)
		1167: CC	make_variant(CC::NZ, [])
		1168: ConsumesFlags	constructor(cmove_from_values, [3, 1167, 671, 672], 5)
		1169: ValueRegs	constructor(with_flags, [1166, 1168], 6)
		1170: InstOutput	constructor(output, [1169], 7)
		1171: CC	make_variant(CC::Z, [])
		1172: IcmpCondResult	constructor(cmp_zero_i128, [1171, 716], 2)
		1173: ValueRegs	constructor(select_icmp, [1172, 671, 672], 3)
		1174: InstOutput	constructor(output, [1173], 4)
		1175: Xmm	constructor(put_in_xmm, [1142], 1)
		1176: XmmMem	constructor(put_in_xmm_mem, [1143], 2)
		1177: Xmm	constructor(x64_minss, [1175, 1176], 3)
		1178: InstOutput	constructor(output_xmm, [1177], 4)
		1179: Xmm	constructor(x64_minsd, [1175, 1176], 3)
		1180: InstOutput	constructor(output_xmm, [1179], 4)
		1181: Xmm	constructor(put_in_xmm, [1143], 1)
		1182: XmmMem	constructor(put_in_xmm_mem, [1142], 2)
		1183: Xmm	constructor(x64_maxss, [1181, 1182], 3)
		1184: InstOutput	constructor(output_xmm, [1183], 4)
		1185: Xmm	constructor(x64_maxsd, [1181, 1182], 3)
		1186: InstOutput	constructor(output_xmm, [1185], 4)
		1187: bool	constructor(use_lzcnt, [], 0)
		1188: Gpr	constructor(x64_lzcnt, [46, 382], 2)
		1189: InstOutput	constructor(output_gpr, [1188], 3)
		1190: Gpr	constructor(do_clz, [46, 46, 382], 2)
		1191: InstOutput	constructor(output_gpr, [1190], 3)
		1192: Option(Type)	extractor(ty_8_or_16, 3)
		1193: Type	match_some(1192)
		1194: Gpr	constructor(extend_to_gpr, [381, 773, 293], 1)
		1195: Gpr	constructor(do_clz, [773, 1193, 1194], 2)
		1196: InstOutput	constructor(output_gpr, [1195], 3)
		1197: Gpr	constructor(value_regs_get_gpr, [385, 81], 2)
		1198: Gpr	constructor(do_clz, [12, 12, 1197], 3)
		1199: ValueRegs	constructor(put_in_regs, [381], 4)
		1200: Gpr	constructor(value_regs_get_gpr, [1199, 79], 5)
		1201: Gpr	constructor(do_clz, [12, 12, 1200], 6)
		1202: u32	const_int(64, u32)
		1203: RegMemImm	make_variant(RegMemImm::Imm, [1202])
		1204: GprMemImm	constructor(gpr_mem_imm_new, [1203], 7)
		1205: Gpr	constructor(x64_add, [12, 1201, 1204], 8)
		1206: OperandSize	make_variant(OperandSize::Size64, [])
		1207: ProducesFlags	constructor(x64_cmp_imm, [1206, 1198, 1202], 9)
		1208: GprMem	constructor(gpr_to_gpr_mem, [1198], 10)
		1209: ConsumesFlags	constructor(cmove, [12, 1167, 1208, 1205], 11)
		1210: Reg	constructor(with_flags_reg, [1207, 1209], 12)
		1211: Gpr	constructor(gpr_new, [1210], 13)
		1212: Reg	constructor(gpr_to_reg, [1211], 14)
		1213: Reg	constructor(imm, [12, 14], 15)
		1214: ValueRegs	constructor(value_regs, [1212, 1213], 16)
		1215: InstOutput	constructor(output, [1214], 17)
		1216: Gpr	constructor(x64_tzcnt, [46, 382], 2)
		1217: InstOutput	constructor(output_gpr, [1216], 3)
		1218: Gpr	constructor(do_ctz, [46, 46, 382], 2)
		1219: InstOutput	constructor(output_gpr, [1218], 3)
		1220: Gpr	constructor(do_ctz, [773, 1193, 1194], 2)
		1221: InstOutput	constructor(output_gpr, [1220], 3)
		1222: Gpr	constructor(do_ctz, [12, 12, 386], 3)
		1223: Gpr	constructor(value_regs_get_gpr, [1199, 81], 5)
		1224: Gpr	constructor(do_ctz, [12, 12, 1223], 6)
		1225: Gpr	constructor(x64_add, [12, 1224, 1204], 8)
		1226: ProducesFlags	constructor(x64_cmp_imm, [1206, 1222, 1202], 9)
		1227: GprMem	constructor(gpr_to_gpr_mem, [1225], 10)
		1228: ConsumesFlags	constructor(cmove, [12, 1171, 1227, 1222], 11)
		1229: Reg	constructor(with_flags_reg, [1226, 1228], 12)
		1230: Gpr	constructor(gpr_new, [1229], 13)
		1231: Reg	constructor(gpr_to_reg, [1230], 14)
		1232: ValueRegs	constructor(value_regs, [1231, 1213], 16)
		1233: InstOutput	constructor(output, [1232], 17)
		1234: bool	constructor(use_popcnt, [], 0)
		1235: Gpr	constructor(x64_popcnt, [46, 382], 2)
		1236: InstOutput	constructor(output_gpr, [1235], 3)
		1237: Gpr	constructor(x64_popcnt, [773, 1194], 2)
		1238: InstOutput	constructor(output_gpr, [1237], 3)
		1239: Gpr	constructor(x64_popcnt, [12, 386], 3)
		1240: Gpr	constructor(x64_popcnt, [12, 1223], 6)
		1241: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1240], 7)
		1242: Gpr	constructor(x64_add, [12, 1239, 1241], 8)
		1243: Reg	constructor(gpr_to_reg, [1242], 9)
		1244: Reg	constructor(imm, [12, 14], 10)
		1245: ValueRegs	constructor(value_regs, [1243, 1244], 11)
		1246: InstOutput	constructor(output, [1245], 12)
		1247: Gpr	constructor(do_popcnt, [46, 382], 2)
		1248: InstOutput	constructor(output_gpr, [1247], 3)
		1249: Gpr	constructor(do_popcnt, [773, 1194], 2)
		1250: InstOutput	constructor(output_gpr, [1249], 3)
		1251: Gpr	constructor(do_popcnt, [12, 386], 3)
		1252: Gpr	constructor(do_popcnt, [12, 1223], 6)
		1253: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1252], 7)
		1254: Gpr	constructor(x64_add, [12, 1251, 1253], 8)
		1255: Reg	constructor(gpr_to_reg, [1254], 9)
		1256: ValueRegs	constructor(value_regs, [1255, 1244], 11)
		1257: InstOutput	constructor(output, [1256], 12)
		1258: bool	constructor(use_avx512bitalg, [], 0)
		1259: Xmm	constructor(x64_vpopcntb, [541], 2)
		1260: InstOutput	constructor(output_xmm, [1259], 3)
		1261: u128	const_int(20016609818878733144904388672456953615, u128)
		1262: VCodeConstant	constructor(emit_u128_le_const, [1261], 1)
		1263: XmmMem	constructor(const_to_xmm_mem, [1262], 2)
		1264: Xmm	constructor(put_in_xmm, [381], 3)
		1265: Xmm	constructor(sse_and, [278, 1264, 1263], 4)
		1266: Xmm	constructor(put_in_xmm, [381], 5)
		1267: u32	const_int(4, u32)
		1268: XmmMemImm	constructor(xmi_imm, [1267], 6)
		1269: Xmm	constructor(x64_psrlw, [1266, 1268], 7)
		1270: Xmm	constructor(sse_and, [278, 1269, 1263], 8)
		1271: u128	const_int(5332549880331286302540478971893580032, u128)
		1272: VCodeConstant	constructor(emit_u128_le_const, [1271], 9)
		1273: Xmm	constructor(x64_xmm_load_const, [278, 1272], 10)
		1274: XmmMem	constructor(xmm_to_xmm_mem, [1265], 11)
		1275: Xmm	constructor(x64_pshufb, [1273, 1274], 12)
		1276: XmmMem	constructor(xmm_to_xmm_mem, [1270], 13)
		1277: Xmm	constructor(x64_pshufb, [1273, 1276], 14)
		1278: XmmMem	constructor(xmm_to_xmm_mem, [1277], 15)
		1279: Xmm	constructor(x64_paddb, [1275, 1278], 16)
		1280: InstOutput	constructor(output_xmm, [1279], 17)
		1281: u128	const_int(158798437896437949616241483468158498679, u128)
		1282: VCodeConstant	constructor(emit_u128_le_const, [1281], 1)
		1283: XmmMem	constructor(const_to_xmm_mem, [1282], 2)
		1284: XmmMemImm	constructor(xmi_imm, [229], 4)
		1285: Xmm	constructor(x64_psrlq, [1264, 1284], 5)
		1286: Xmm	constructor(x64_pand, [1285, 1283], 6)
		1287: XmmMem	constructor(xmm_to_xmm_mem, [1286], 7)
		1288: Xmm	constructor(x64_psubb, [1264, 1287], 8)
		1289: XmmMemImm	constructor(xmi_imm, [229], 9)
		1290: Xmm	constructor(x64_psrlq, [1286, 1289], 10)
		1291: Xmm	constructor(x64_pand, [1290, 1283], 11)
		1292: XmmMem	constructor(xmm_to_xmm_mem, [1291], 12)
		1293: Xmm	constructor(x64_psubb, [1288, 1292], 13)
		1294: XmmMemImm	constructor(xmi_imm, [229], 14)
		1295: Xmm	constructor(x64_psrlq, [1291, 1294], 15)
		1296: Xmm	constructor(x64_pand, [1295, 1283], 16)
		1297: XmmMem	constructor(xmm_to_xmm_mem, [1296], 17)
		1298: Xmm	constructor(x64_psubb, [1293, 1297], 18)
		1299: XmmMemImm	constructor(xmi_imm, [1267], 19)
		1300: Xmm	constructor(x64_psrlw, [1298, 1299], 20)
		1301: XmmMem	constructor(xmm_to_xmm_mem, [1300], 21)
		1302: Xmm	constructor(x64_paddb, [1298, 1301], 22)
		1303: VCodeConstant	constructor(emit_u128_le_const, [1261], 23)
		1304: XmmMem	constructor(const_to_xmm_mem, [1303], 24)
		1305: Xmm	constructor(x64_pand, [1302, 1304], 25)
		1306: InstOutput	constructor(output_xmm, [1305], 26)
		1307: Gpr	constructor(do_bitrev8, [773, 382], 2)
		1308: InstOutput	constructor(output_gpr, [1307], 3)
		1309: Gpr	constructor(do_bitrev16, [773, 382], 2)
		1310: InstOutput	constructor(output_gpr, [1309], 3)
		1311: Gpr	constructor(do_bitrev32, [773, 382], 2)
		1312: InstOutput	constructor(output_gpr, [1311], 3)
		1313: Gpr	constructor(do_bitrev64, [12, 382], 2)
		1314: InstOutput	constructor(output_gpr, [1313], 3)
		1315: Gpr	constructor(do_bitrev64, [12, 1197], 3)
		1316: Reg	constructor(gpr_to_reg, [1315], 4)
		1317: ValueRegs	constructor(put_in_regs, [381], 5)
		1318: Gpr	constructor(value_regs_get_gpr, [1317, 79], 6)
		1319: Gpr	constructor(do_bitrev64, [12, 1318], 7)
		1320: Reg	constructor(gpr_to_reg, [1319], 8)
		1321: ValueRegs	constructor(value_regs, [1316, 1320], 9)
		1322: InstOutput	constructor(output, [1321], 10)
		1323: Type	const_prim(I16)
		1324: Imm8Reg	make_variant(Imm8Reg::Imm8, [467])
		1325: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [1324], 2)
		1326: Gpr	constructor(x64_rotl, [1323, 382, 1325], 3)
		1327: InstOutput	constructor(output_gpr, [1326], 4)
		1328: Gpr	constructor(x64_bswap, [773, 382], 2)
		1329: InstOutput	constructor(output_gpr, [1328], 3)
		1330: Gpr	constructor(x64_bswap, [12, 382], 2)
		1331: InstOutput	constructor(output_gpr, [1330], 3)
		1332: Gpr	constructor(x64_bswap, [12, 1197], 3)
		1333: Reg	constructor(gpr_to_reg, [1332], 4)
		1334: Gpr	constructor(x64_bswap, [12, 1318], 7)
		1335: Reg	constructor(gpr_to_reg, [1334], 8)
		1336: ValueRegs	constructor(value_regs, [1333, 1335], 9)
		1337: InstOutput	constructor(output, [1336], 10)
		1338: u32	const_int(0, u32)
		1339: ProducesFlags	constructor(x64_cmp_imm, [1206, 382, 1338], 2)
		1340: ConsumesFlags	constructor(x64_setcc, [1171], 3)
		1341: ValueRegs	constructor(with_flags, [1339, 1340], 4)
		1342: InstOutput	constructor(output, [1341], 5)
		1343: u32	const_int(4294967295, u32)
		1344: ProducesFlags	constructor(x64_cmp_imm, [1206, 382, 1343], 2)
		1345: ValueRegs	constructor(with_flags, [1344, 1340], 4)
		1346: InstOutput	constructor(output, [1345], 5)
		1347: Gpr	constructor(extend_to_gpr, [381, 12, 293], 1)
		1348: Reg	constructor(gpr_to_reg, [1347], 2)
		1349: Reg	constructor(imm, [12, 14], 3)
		1350: ValueRegs	constructor(value_regs, [1348, 1349], 4)
		1351: InstOutput	constructor(output, [1350], 5)
		1352: InstOutput	constructor(output_gpr, [1347], 2)
		1353: Option(Type)	extractor(fits_in_32, 3)
		1354: Type	match_some(1353)
		1355: InstOutput	constructor(output_gpr, [1194], 2)
		1356: Gpr	constructor(extend_to_gpr, [381, 12, 310], 1)
		1357: Gpr	constructor(x64_sar, [12, 1356, 968], 3)
		1358: Reg	constructor(gpr_to_reg, [1356], 4)
		1359: Reg	constructor(gpr_to_reg, [1357], 5)
		1360: ValueRegs	constructor(value_regs, [1358, 1359], 6)
		1361: InstOutput	constructor(output, [1360], 7)
		1362: InstOutput	constructor(output_gpr, [1356], 2)
		1363: Gpr	constructor(extend_to_gpr, [381, 773, 310], 1)
		1364: InstOutput	constructor(output_gpr, [1363], 2)
		1365: InstOutput	constructor(output_value, [381], 1)
		1366: InstOutput	constructor(output_gpr, [386], 3)
		1367: SideEffectNoResult	constructor(x64_hlt, [], 1)
		1368: InstOutput	constructor(side_effect, [1367], 2)
		1369: Xmm	constructor(put_in_xmm, [40], 1)
		1370: Xmm	constructor(x64_pmaddubsw, [1369, 177], 3)
		1371: InstOutput	constructor(output_xmm, [1370], 4)
		1372: Xmm	constructor(x64_addss, [68, 69], 3)
		1373: InstOutput	constructor(output_xmm, [1372], 4)
		1374: Xmm	constructor(x64_addsd, [68, 69], 3)
		1375: InstOutput	constructor(output_xmm, [1374], 4)
		1376: Xmm	constructor(x64_addps, [68, 69], 3)
		1377: InstOutput	constructor(output_xmm, [1376], 4)
		1378: Xmm	constructor(x64_addpd, [68, 69], 3)
		1379: InstOutput	constructor(output_xmm, [1378], 4)
		1380: XmmMem	constructor(sink_load_to_xmm_mem, [59], 2)
		1381: Xmm	constructor(x64_addss, [1369, 1380], 3)
		1382: InstOutput	constructor(output_xmm, [1381], 4)
		1383: Xmm	constructor(x64_addsd, [1369, 1380], 3)
		1384: InstOutput	constructor(output_xmm, [1383], 4)
		1385: Xmm	constructor(x64_addps, [1369, 1380], 3)
		1386: InstOutput	constructor(output_xmm, [1385], 4)
		1387: Xmm	constructor(x64_addpd, [1369, 1380], 3)
		1388: InstOutput	constructor(output_xmm, [1387], 4)
		1389: Xmm	constructor(x64_subss, [68, 69], 3)
		1390: InstOutput	constructor(output_xmm, [1389], 4)
		1391: Xmm	constructor(x64_subsd, [68, 69], 3)
		1392: InstOutput	constructor(output_xmm, [1391], 4)
		1393: Xmm	constructor(x64_subps, [68, 69], 3)
		1394: InstOutput	constructor(output_xmm, [1393], 4)
		1395: Xmm	constructor(x64_subpd, [68, 69], 3)
		1396: InstOutput	constructor(output_xmm, [1395], 4)
		1397: Xmm	constructor(x64_mulss, [68, 69], 3)
		1398: InstOutput	constructor(output_xmm, [1397], 4)
		1399: Xmm	constructor(x64_mulsd, [68, 69], 3)
		1400: InstOutput	constructor(output_xmm, [1399], 4)
		1401: Xmm	constructor(x64_mulps, [68, 69], 3)
		1402: InstOutput	constructor(output_xmm, [1401], 4)
		1403: Xmm	constructor(x64_mulpd, [68, 69], 3)
		1404: InstOutput	constructor(output_xmm, [1403], 4)
		1405: Xmm	constructor(x64_mulss, [1369, 1380], 3)
		1406: InstOutput	constructor(output_xmm, [1405], 4)
		1407: Xmm	constructor(x64_mulsd, [1369, 1380], 3)
		1408: InstOutput	constructor(output_xmm, [1407], 4)
		1409: Xmm	constructor(x64_mulps, [1369, 1380], 3)
		1410: InstOutput	constructor(output_xmm, [1409], 4)
		1411: Xmm	constructor(x64_mulpd, [1369, 1380], 3)
		1412: InstOutput	constructor(output_xmm, [1411], 4)
		1413: Xmm	constructor(x64_divss, [68, 69], 3)
		1414: InstOutput	constructor(output_xmm, [1413], 4)
		1415: Xmm	constructor(x64_divsd, [68, 69], 3)
		1416: InstOutput	constructor(output_xmm, [1415], 4)
		1417: Xmm	constructor(x64_divps, [68, 69], 3)
		1418: InstOutput	constructor(output_xmm, [1417], 4)
		1419: Xmm	constructor(x64_divpd, [68, 69], 3)
		1420: InstOutput	constructor(output_xmm, [1419], 4)
		1421: Type	const_prim(F32X4)
		1422: Xmm	constructor(xmm_zero, [1421], 1)
		1423: XmmMem	constructor(put_in_xmm_mem, [381], 2)
		1424: Xmm	constructor(x64_sqrtss, [1422, 1423], 3)
		1425: InstOutput	constructor(output_xmm, [1424], 4)
		1426: Type	const_prim(F64X2)
		1427: Xmm	constructor(xmm_zero, [1426], 1)
		1428: Xmm	constructor(x64_sqrtsd, [1427, 1423], 3)
		1429: InstOutput	constructor(output_xmm, [1428], 4)
		1430: Xmm	constructor(x64_sqrtps, [541], 2)
		1431: InstOutput	constructor(output_xmm, [1430], 3)
		1432: Xmm	constructor(x64_sqrtpd, [541], 2)
		1433: InstOutput	constructor(output_xmm, [1432], 3)
		1434: Xmm	constructor(x64_cvtss2sd, [1427, 1423], 3)
		1435: InstOutput	constructor(output_xmm, [1434], 4)
		1436: XmmMem	constructor(xmm_to_xmm_mem, [544], 2)
		1437: Xmm	constructor(x64_cvtps2pd, [1436], 3)
		1438: InstOutput	constructor(output_xmm, [1437], 4)
		1439: Xmm	constructor(x64_cvtsd2ss, [1422, 1423], 3)
		1440: InstOutput	constructor(output_xmm, [1439], 4)
		1441: Xmm	constructor(x64_cvtpd2ps, [541], 2)
		1442: InstOutput	constructor(output_xmm, [1441], 3)
		1443: Xmm	constructor(xmm_min_max_seq, [21, 117, 68, 459], 3)
		1444: InstOutput	constructor(output_xmm, [1443], 4)
		1445: Xmm	constructor(xmm_min_max_seq, [28, 117, 68, 459], 3)
		1446: InstOutput	constructor(output_xmm, [1445], 4)
		1447: Xmm	constructor(x64_minps, [68, 69], 3)
		1448: Xmm	constructor(put_in_xmm, [40], 4)
		1449: XmmMem	constructor(put_in_xmm_mem, [39], 5)
		1450: Xmm	constructor(x64_minps, [1448, 1449], 6)
		1451: XmmMem	constructor(xmm_to_xmm_mem, [1450], 7)
		1452: Xmm	constructor(x64_orps, [1447, 1451], 8)
		1453: XmmMem	constructor(xmm_to_xmm_mem, [1450], 9)
		1454: Xmm	constructor(x64_cmpps, [1452, 1453, 1114], 10)
		1455: XmmMem	constructor(xmm_to_xmm_mem, [1454], 11)
		1456: Xmm	constructor(x64_orps, [1452, 1455], 12)
		1457: u32	const_int(10, u32)
		1458: XmmMemImm	constructor(xmi_imm, [1457], 13)
		1459: Xmm	constructor(x64_psrld, [1454, 1458], 14)
		1460: XmmMem	constructor(xmm_to_xmm_mem, [1456], 15)
		1461: Xmm	constructor(x64_andnps, [1459, 1460], 16)
		1462: InstOutput	constructor(output_xmm, [1461], 17)
		1463: Xmm	constructor(x64_minpd, [68, 69], 3)
		1464: Xmm	constructor(x64_minpd, [1448, 1449], 6)
		1465: XmmMem	constructor(xmm_to_xmm_mem, [1464], 7)
		1466: Xmm	constructor(x64_orpd, [1463, 1465], 8)
		1467: XmmMem	constructor(xmm_to_xmm_mem, [1464], 9)
		1468: Xmm	constructor(x64_cmppd, [1463, 1467, 1114], 10)
		1469: XmmMem	constructor(xmm_to_xmm_mem, [1468], 11)
		1470: Xmm	constructor(x64_orpd, [1466, 1469], 12)
		1471: u32	const_int(13, u32)
		1472: XmmMemImm	constructor(xmi_imm, [1471], 13)
		1473: Xmm	constructor(x64_psrlq, [1468, 1472], 14)
		1474: XmmMem	constructor(xmm_to_xmm_mem, [1470], 15)
		1475: Xmm	constructor(x64_andnpd, [1473, 1474], 16)
		1476: InstOutput	constructor(output_xmm, [1475], 17)
		1477: Xmm	constructor(xmm_min_max_seq, [21, 109, 68, 459], 3)
		1478: InstOutput	constructor(output_xmm, [1477], 4)
		1479: Xmm	constructor(xmm_min_max_seq, [28, 109, 68, 459], 3)
		1480: InstOutput	constructor(output_xmm, [1479], 4)
		1481: Xmm	constructor(x64_maxps, [68, 69], 3)
		1482: Xmm	constructor(x64_maxps, [1448, 1449], 6)
		1483: XmmMem	constructor(xmm_to_xmm_mem, [1482], 7)
		1484: Xmm	constructor(x64_xorps, [1481, 1483], 8)
		1485: XmmMem	constructor(xmm_to_xmm_mem, [1484], 9)
		1486: Xmm	constructor(x64_orps, [1481, 1485], 10)
		1487: XmmMem	constructor(xmm_to_xmm_mem, [1484], 11)
		1488: Xmm	constructor(x64_subps, [1486, 1487], 12)
		1489: XmmMem	constructor(xmm_to_xmm_mem, [1486], 13)
		1490: Xmm	constructor(x64_cmpps, [1486, 1489, 1114], 14)
		1491: XmmMemImm	constructor(xmi_imm, [1457], 15)
		1492: Xmm	constructor(x64_psrld, [1490, 1491], 16)
		1493: XmmMem	constructor(xmm_to_xmm_mem, [1488], 17)
		1494: Xmm	constructor(x64_andnps, [1492, 1493], 18)
		1495: InstOutput	constructor(output_xmm, [1494], 19)
		1496: Xmm	constructor(x64_maxpd, [68, 69], 3)
		1497: Xmm	constructor(x64_maxpd, [1448, 1449], 6)
		1498: XmmMem	constructor(xmm_to_xmm_mem, [1497], 7)
		1499: Xmm	constructor(x64_xorpd, [1496, 1498], 8)
		1500: XmmMem	constructor(xmm_to_xmm_mem, [1499], 9)
		1501: Xmm	constructor(x64_orpd, [1496, 1500], 10)
		1502: XmmMem	constructor(xmm_to_xmm_mem, [1499], 11)
		1503: Xmm	constructor(x64_subpd, [1501, 1502], 12)
		1504: XmmMem	constructor(xmm_to_xmm_mem, [1501], 13)
		1505: Xmm	constructor(x64_cmppd, [1501, 1504, 1114], 14)
		1506: XmmMemImm	constructor(xmi_imm, [1471], 15)
		1507: Xmm	constructor(x64_psrlq, [1505, 1506], 16)
		1508: XmmMem	constructor(xmm_to_xmm_mem, [1503], 17)
		1509: Xmm	constructor(x64_andnpd, [1507, 1508], 18)
		1510: InstOutput	constructor(output_xmm, [1509], 19)
		1511: LibCall	make_variant(LibCall::FmaF32, [])
		1512: Reg	constructor(put_in_reg, [670], 1)
		1513: Reg	constructor(put_in_reg, [671], 2)
		1514: Reg	constructor(put_in_reg, [672], 3)
		1515: Reg	constructor(libcall_3, [1511, 1512, 1513, 1514], 4)
		1516: InstOutput	constructor(output_reg, [1515], 5)
		1517: LibCall	make_variant(LibCall::FmaF64, [])
		1518: Reg	constructor(libcall_3, [1517, 1512, 1513, 1514], 4)
		1519: InstOutput	constructor(output_reg, [1518], 5)
		1520: Xmm	constructor(put_in_xmm, [672], 3)
		1521: Reg	constructor(xmm_to_reg, [673], 4)
		1522: Reg	constructor(xmm_to_reg, [674], 5)
		1523: Reg	constructor(xmm_to_reg, [1520], 6)
		1524: Reg	constructor(libcall_3, [1511, 1521, 1522, 1523], 7)
		1525: Xmm	constructor(xmm_new, [1524], 8)
		1526: XmmMem	constructor(xmm_to_xmm_mem, [673], 9)
		1527: Xmm	constructor(x64_pshufd, [1526, 839], 10)
		1528: Reg	constructor(xmm_to_reg, [1527], 11)
		1529: XmmMem	constructor(xmm_to_xmm_mem, [674], 12)
		1530: Xmm	constructor(x64_pshufd, [1529, 839], 13)
		1531: Reg	constructor(xmm_to_reg, [1530], 14)
		1532: XmmMem	constructor(xmm_to_xmm_mem, [1520], 15)
		1533: Xmm	constructor(x64_pshufd, [1532, 839], 16)
		1534: Reg	constructor(xmm_to_reg, [1533], 17)
		1535: Reg	constructor(libcall_3, [1511, 1528, 1531, 1534], 18)
		1536: Xmm	constructor(xmm_new, [1535], 19)
		1537: XmmMem	constructor(xmm_to_xmm_mem, [673], 20)
		1538: Xmm	constructor(x64_pshufd, [1537, 783], 21)
		1539: Reg	constructor(xmm_to_reg, [1538], 22)
		1540: XmmMem	constructor(xmm_to_xmm_mem, [674], 23)
		1541: Xmm	constructor(x64_pshufd, [1540, 783], 24)
		1542: Reg	constructor(xmm_to_reg, [1541], 25)
		1543: XmmMem	constructor(xmm_to_xmm_mem, [1520], 26)
		1544: Xmm	constructor(x64_pshufd, [1543, 783], 27)
		1545: Reg	constructor(xmm_to_reg, [1544], 28)
		1546: Reg	constructor(libcall_3, [1511, 1539, 1542, 1545], 29)
		1547: Xmm	constructor(xmm_new, [1546], 30)
		1548: XmmMem	constructor(xmm_to_xmm_mem, [673], 31)
		1549: Xmm	constructor(x64_pshufd, [1548, 774], 32)
		1550: Reg	constructor(xmm_to_reg, [1549], 33)
		1551: XmmMem	constructor(xmm_to_xmm_mem, [674], 34)
		1552: Xmm	constructor(x64_pshufd, [1551, 774], 35)
		1553: Reg	constructor(xmm_to_reg, [1552], 36)
		1554: XmmMem	constructor(xmm_to_xmm_mem, [1520], 37)
		1555: Xmm	constructor(x64_pshufd, [1554, 774], 38)
		1556: Reg	constructor(xmm_to_reg, [1555], 39)
		1557: Reg	constructor(libcall_3, [1511, 1550, 1553, 1556], 40)
		1558: Xmm	constructor(xmm_new, [1557], 41)
		1559: Xmm	constructor(f32x4_insertlane, [1525, 1536, 839], 42)
		1560: Xmm	constructor(f32x4_insertlane, [1559, 1547, 783], 43)
		1561: Xmm	constructor(f32x4_insertlane, [1560, 1558, 774], 44)
		1562: InstOutput	constructor(output_xmm, [1561], 45)
		1563: Reg	constructor(libcall_3, [1517, 1521, 1522, 1523], 7)
		1564: Xmm	constructor(xmm_new, [1563], 8)
		1565: u8	const_int(238, u8)
		1566: Xmm	constructor(x64_pshufd, [1526, 1565], 10)
		1567: Reg	constructor(xmm_to_reg, [1566], 11)
		1568: Xmm	constructor(x64_pshufd, [1529, 1565], 13)
		1569: Reg	constructor(xmm_to_reg, [1568], 14)
		1570: Xmm	constructor(x64_pshufd, [1532, 1565], 16)
		1571: Reg	constructor(xmm_to_reg, [1570], 17)
		1572: Reg	constructor(libcall_3, [1517, 1567, 1569, 1571], 18)
		1573: Xmm	constructor(xmm_new, [1572], 19)
		1574: XmmMem	constructor(xmm_to_xmm_mem, [1573], 20)
		1575: Xmm	constructor(x64_movlhps, [1564, 1574], 21)
		1576: InstOutput	constructor(output_xmm, [1575], 22)
		1577: bool	constructor(use_fma, [], 0)
		1578: Xmm	constructor(fmadd, [3, 670, 671, 672], 1)
		1579: InstOutput	constructor(output_xmm, [1578], 2)
		1580: Option(RegisterClass)	extractor(type_register_class, 3)
		1581: RegisterClass	match_some(1580)
		1582: bool	match_variant(1581, RegisterClass::Gpr, single_register)
		1583: Opcode	match_variant(6, InstructionData::Load, opcode)
		1584: Value	match_variant(6, InstructionData::Load, arg)
		1585: MemFlags	match_variant(6, InstructionData::Load, flags)
		1586: Offset32	match_variant(6, InstructionData::Load, offset)
		1587: u16	constructor(ty_bits_u16, [1354], 0)
		1588: u16	const_int(64, u16)
		1589: ExtMode	constructor(ext_mode, [1587, 1588], 1)
		1590: Amode	constructor(to_amode, [1585, 1584, 1586], 2)
		1591: GprMem	constructor(amode_to_gpr_mem, [1590], 3)
		1592: Gpr	constructor(x64_movzx, [1589, 1591], 4)
		1593: InstOutput	constructor(output_gpr, [1592], 5)
		1594: Option(Type)	extractor(ty_int_ref_64, 3)
		1595: Type	match_some(1594)
		1596: Amode	constructor(to_amode, [1585, 1584, 1586], 1)
		1597: Reg	constructor(x64_mov, [1596], 2)
		1598: InstOutput	constructor(output_reg, [1597], 3)
		1599: ExtMode	make_variant(ExtMode::BQ, [])
		1600: GprMem	constructor(amode_to_gpr_mem, [1596], 2)
		1601: Gpr	constructor(x64_movzx, [1599, 1600], 3)
		1602: InstOutput	constructor(output_gpr, [1601], 4)
		1603: Gpr	constructor(x64_movsx, [1599, 1600], 3)
		1604: InstOutput	constructor(output_gpr, [1603], 4)
		1605: ExtMode	make_variant(ExtMode::WQ, [])
		1606: Gpr	constructor(x64_movzx, [1605, 1600], 3)
		1607: InstOutput	constructor(output_gpr, [1606], 4)
		1608: Gpr	constructor(x64_movsx, [1605, 1600], 3)
		1609: InstOutput	constructor(output_gpr, [1608], 4)
		1610: ExtMode	make_variant(ExtMode::LQ, [])
		1611: Gpr	constructor(x64_movzx, [1610, 1600], 3)
		1612: InstOutput	constructor(output_gpr, [1611], 4)
		1613: Gpr	constructor(x64_movsx, [1610, 1600], 3)
		1614: InstOutput	constructor(output_gpr, [1613], 4)
		1615: SyntheticAmode	constructor(amode_to_synthetic_amode, [1596], 2)
		1616: Xmm	constructor(x64_movss_load, [1615], 3)
		1617: InstOutput	constructor(output_xmm, [1616], 4)
		1618: Xmm	constructor(x64_movsd_load, [1615], 3)
		1619: InstOutput	constructor(output_xmm, [1618], 4)
		1620: Xmm	constructor(x64_movups_load, [1615], 3)
		1621: InstOutput	constructor(output_xmm, [1620], 4)
		1622: Xmm	constructor(x64_movupd_load, [1615], 3)
		1623: InstOutput	constructor(output_xmm, [1622], 4)
		1624: XmmMem	constructor(amode_to_xmm_mem, [1596], 2)
		1625: Xmm	constructor(x64_movdqu_load, [1624], 3)
		1626: InstOutput	constructor(output_xmm, [1625], 4)
		1627: i32	const_int(8, i32)
		1628: Amode	constructor(amode_offset, [1596, 1627], 2)
		1629: Reg	constructor(x64_mov, [1596], 3)
		1630: Reg	constructor(x64_mov, [1628], 4)
		1631: ValueRegs	constructor(value_regs, [1629, 1630], 5)
		1632: InstOutput	constructor(output, [1631], 6)
		1633: Xmm	constructor(x64_pmovsxbw, [1624], 3)
		1634: InstOutput	constructor(output_xmm, [1633], 4)
		1635: Xmm	constructor(x64_pmovzxbw, [1624], 3)
		1636: InstOutput	constructor(output_xmm, [1635], 4)
		1637: Xmm	constructor(x64_pmovsxwd, [1624], 3)
		1638: InstOutput	constructor(output_xmm, [1637], 4)
		1639: Xmm	constructor(x64_pmovzxwd, [1624], 3)
		1640: InstOutput	constructor(output_xmm, [1639], 4)
		1641: Xmm	constructor(x64_pmovsxdq, [1624], 3)
		1642: InstOutput	constructor(output_xmm, [1641], 4)
		1643: Xmm	constructor(x64_pmovzxdq, [1624], 3)
		1644: InstOutput	constructor(output_xmm, [1643], 4)
		1645: Xmm	constructor(x64_movq_to_xmm, [1600], 3)
		1646: Xmm	constructor(lower_swiden_low, [400, 1645], 4)
		1647: InstOutput	constructor(output_xmm, [1646], 5)
		1648: Xmm	constructor(lower_uwiden_low, [400, 1645], 4)
		1649: InstOutput	constructor(output_xmm, [1648], 5)
		1650: Xmm	constructor(lower_swiden_low, [405, 1645], 4)
		1651: InstOutput	constructor(output_xmm, [1650], 5)
		1652: Xmm	constructor(lower_uwiden_low, [405, 1645], 4)
		1653: InstOutput	constructor(output_xmm, [1652], 5)
		1654: Xmm	constructor(lower_swiden_low, [410, 1645], 4)
		1655: InstOutput	constructor(output_xmm, [1654], 5)
		1656: Xmm	constructor(lower_uwiden_low, [410, 1645], 4)
		1657: InstOutput	constructor(output_xmm, [1656], 5)
		1658: Opcode	match_variant(6, InstructionData::Store, opcode)
		1659: ValueArray2	match_variant(6, InstructionData::Store, args)
		1660: MemFlags	match_variant(6, InstructionData::Store, flags)
		1661: Offset32	match_variant(6, InstructionData::Store, offset)
		1662: (Value, Value)	extractor(value_array_2, 1659)
		1663: Value	match_tuple(1662, 0)
		1664: Value	match_tuple(1662, 1)
		1665: Type	extractor(value_type, 1663)
		1666: Option(RegisterClass)	extractor(type_register_class, 1665)
		1667: RegisterClass	match_some(1666)
		1668: bool	match_variant(1667, RegisterClass::Gpr, single_register)
		1669: Amode	constructor(to_amode, [1660, 1664, 1661], 1)
		1670: SyntheticAmode	constructor(amode_to_synthetic_amode, [1669], 2)
		1671: Gpr	constructor(put_in_gpr, [1663], 3)
		1672: SideEffectNoResult	constructor(x64_movrm, [1665, 1670, 1671], 4)
		1673: InstOutput	constructor(side_effect, [1672], 5)
		1674: Type	const_prim(I8)
		1675: SideEffectNoResult	constructor(x64_movrm, [1674, 1670, 1671], 4)
		1676: InstOutput	constructor(side_effect, [1675], 5)
		1677: SideEffectNoResult	constructor(x64_movrm, [1323, 1670, 1671], 4)
		1678: InstOutput	constructor(side_effect, [1677], 5)
		1679: SideEffectNoResult	constructor(x64_movrm, [773, 1670, 1671], 4)
		1680: InstOutput	constructor(side_effect, [1679], 5)
		1681: Option(Inst)	extractor(def_inst, 1663)
		1682: Inst	match_some(1681)
		1683: Option(Value)	extractor(first_result, 1682)
		1684: Value	match_some(1683)
		1685: Type	extractor(value_type, 1684)
		1686: Option(Type)	extractor(fits_in_64, 1685)
		1687: Type	match_some(1686)
		1688: InstructionData	extractor(inst_data, 1682)
		1689: Opcode	match_variant(1688, InstructionData::UnaryImm, opcode)
		1690: Imm64	match_variant(1688, InstructionData::UnaryImm, imm)
		1691: Option(i32)	extractor(simm32, 1690)
		1692: i32	match_some(1691)
		1693: SideEffectNoResult	constructor(x64_movimm_m, [1687, 1670, 1692], 3)
		1694: InstOutput	constructor(side_effect, [1693], 4)
		1695: Xmm	constructor(put_in_xmm, [1663], 3)
		1696: SideEffectNoResult	constructor(x64_movss_store, [1670, 1695], 4)
		1697: InstOutput	constructor(side_effect, [1696], 5)
		1698: SideEffectNoResult	constructor(x64_movsd_store, [1670, 1695], 4)
		1699: InstOutput	constructor(side_effect, [1698], 5)
		1700: SideEffectNoResult	constructor(x64_movups_store, [1670, 1695], 4)
		1701: InstOutput	constructor(side_effect, [1700], 5)
		1702: SideEffectNoResult	constructor(x64_movupd_store, [1670, 1695], 4)
		1703: InstOutput	constructor(side_effect, [1702], 5)
		1704: Option(Type)	extractor(ty_vec128_int, 1665)
		1705: Type	match_some(1704)
		1706: SideEffectNoResult	constructor(x64_movdqu_store, [1670, 1695], 4)
		1707: InstOutput	constructor(side_effect, [1706], 5)
		1708: ValueRegs	constructor(put_in_regs, [1663], 1)
		1709: Gpr	constructor(value_regs_get_gpr, [1708, 79], 2)
		1710: Gpr	constructor(value_regs_get_gpr, [1708, 81], 3)
		1711: Amode	constructor(to_amode, [1660, 1664, 1661], 4)
		1712: Amode	constructor(amode_offset, [1711, 1627], 5)
		1713: SyntheticAmode	constructor(amode_to_synthetic_amode, [1711], 6)
		1714: SideEffectNoResult	constructor(x64_movrm, [12, 1713, 1709], 7)
		1715: SyntheticAmode	constructor(amode_to_synthetic_amode, [1712], 8)
		1716: SideEffectNoResult	constructor(x64_movrm, [12, 1715, 1710], 9)
		1717: SideEffectNoResult	constructor(side_effect_concat, [1714, 1716], 10)
		1718: InstOutput	constructor(side_effect, [1717], 11)
		1719: Opcode	match_variant(1688, InstructionData::BinaryImm8, opcode)
		1720: Value	match_variant(1688, InstructionData::BinaryImm8, arg)
		1721: Uimm8	match_variant(1688, InstructionData::BinaryImm8, imm)
		1722: u8	extractor(u8_from_uimm8, 1721)
		1723: Xmm	constructor(put_in_xmm, [1720], 3)
		1724: SideEffectNoResult	constructor(x64_movss_store, [1670, 1723], 4)
		1725: InstOutput	constructor(side_effect, [1724], 5)
		1726: SideEffectNoResult	constructor(x64_movsd_store, [1670, 1723], 4)
		1727: InstOutput	constructor(side_effect, [1726], 5)
		1728: SideEffectNoResult	constructor(x64_pextrb_store, [1670, 1723, 1722], 4)
		1729: InstOutput	constructor(side_effect, [1728], 5)
		1730: SideEffectNoResult	constructor(x64_pextrw_store, [1670, 1723, 1722], 4)
		1731: InstOutput	constructor(side_effect, [1730], 5)
		1732: SideEffectNoResult	constructor(x64_pextrd_store, [1670, 1723, 1722], 4)
		1733: InstOutput	constructor(side_effect, [1732], 5)
		1734: SideEffectNoResult	constructor(x64_pextrq_store, [1670, 1723, 1722], 4)
		1735: InstOutput	constructor(side_effect, [1734], 5)
		1736: Option(Type)	extractor(ty_32_or_64, 1685)
		1737: Type	match_some(1736)
		1738: Opcode	match_variant(1688, InstructionData::Binary, opcode)
		1739: ValueArray2	match_variant(1688, InstructionData::Binary, args)
		1740: (Value, Value)	extractor(value_array_2, 1739)
		1741: Value	match_tuple(1740, 0)
		1742: Value	match_tuple(1740, 1)
		1743: Option(SinkableLoad)	extractor(sinkable_load, 1741)
		1744: SinkableLoad	match_some(1743)
		1745: Option(Inst)	extractor(def_inst, 1741)
		1746: Inst	match_some(1745)
		1747: InstructionData	extractor(inst_data, 1746)
		1748: Opcode	match_variant(1747, InstructionData::Load, opcode)
		1749: Value	match_variant(1747, InstructionData::Load, arg)
		1750: MemFlags	match_variant(1747, InstructionData::Load, flags)
		1751: Offset32	match_variant(1747, InstructionData::Load, offset)
		1752: RegMemImm	constructor(sink_load_to_reg_mem_imm, [1744], 1)
		1753: Amode	constructor(to_amode, [1750, 1749, 1751], 2)
		1754: Gpr	constructor(put_in_gpr, [1742], 3)
		1755: SideEffectNoResult	constructor(x64_add_mem, [1737, 1753, 1754], 4)
		1756: InstOutput	constructor(side_effect, [1755], 5)
		1757: Option(SinkableLoad)	extractor(sinkable_load, 1742)
		1758: SinkableLoad	match_some(1757)
		1759: Option(Inst)	extractor(def_inst, 1742)
		1760: Inst	match_some(1759)
		1761: InstructionData	extractor(inst_data, 1760)
		1762: Opcode	match_variant(1761, InstructionData::Load, opcode)
		1763: Value	match_variant(1761, InstructionData::Load, arg)
		1764: MemFlags	match_variant(1761, InstructionData::Load, flags)
		1765: Offset32	match_variant(1761, InstructionData::Load, offset)
		1766: RegMemImm	constructor(sink_load_to_reg_mem_imm, [1758], 1)
		1767: Amode	constructor(to_amode, [1764, 1763, 1765], 2)
		1768: Gpr	constructor(put_in_gpr, [1741], 3)
		1769: SideEffectNoResult	constructor(x64_add_mem, [1737, 1767, 1768], 4)
		1770: InstOutput	constructor(side_effect, [1769], 5)
		1771: SideEffectNoResult	constructor(x64_sub_mem, [1737, 1753, 1754], 4)
		1772: InstOutput	constructor(side_effect, [1771], 5)
		1773: SideEffectNoResult	constructor(x64_and_mem, [1737, 1753, 1754], 4)
		1774: InstOutput	constructor(side_effect, [1773], 5)
		1775: SideEffectNoResult	constructor(x64_and_mem, [1737, 1767, 1768], 4)
		1776: InstOutput	constructor(side_effect, [1775], 5)
		1777: SideEffectNoResult	constructor(x64_or_mem, [1737, 1753, 1754], 4)
		1778: InstOutput	constructor(side_effect, [1777], 5)
		1779: SideEffectNoResult	constructor(x64_or_mem, [1737, 1767, 1768], 4)
		1780: InstOutput	constructor(side_effect, [1779], 5)
		1781: SideEffectNoResult	constructor(x64_xor_mem, [1737, 1753, 1754], 4)
		1782: InstOutput	constructor(side_effect, [1781], 5)
		1783: SideEffectNoResult	constructor(x64_xor_mem, [1737, 1767, 1768], 4)
		1784: InstOutput	constructor(side_effect, [1783], 5)
		1785: SideEffectNoResult	constructor(x64_mfence, [], 1)
		1786: InstOutput	constructor(side_effect, [1785], 2)
		1787: Opcode	match_variant(6, InstructionData::FuncAddr, opcode)
		1788: FuncRef	match_variant(6, InstructionData::FuncAddr, func_ref)
		1789: (SigRef, ExternalName, RelocDistance)	extractor(func_ref_data, 1788)
		1790: SigRef	match_tuple(1789, 0)
		1791: ExternalName	match_tuple(1789, 1)
		1792: RelocDistance	match_tuple(1789, 2)
		1793: i64	const_int(0, i64)
		1794: Reg	constructor(load_ext_name, [1791, 1793, 1792], 1)
		1795: InstOutput	constructor(output_reg, [1794], 2)
		1796: Opcode	match_variant(6, InstructionData::UnaryGlobalValue, opcode)
		1797: GlobalValue	match_variant(6, InstructionData::UnaryGlobalValue, global_value)
		1798: Option((ExternalName, RelocDistance, i64))	extractor(symbol_value_data, 1797)
		1799: (ExternalName, RelocDistance, i64)	match_some(1798)
		1800: ExternalName	match_tuple(1799, 0)
		1801: RelocDistance	match_tuple(1799, 1)
		1802: i64	match_tuple(1799, 2)
		1803: Reg	constructor(load_ext_name, [1800, 1802, 1801], 1)
		1804: InstOutput	constructor(output_reg, [1803], 2)
		1805: Opcode	match_variant(6, InstructionData::LoadNoOffset, opcode)
		1806: Value	match_variant(6, InstructionData::LoadNoOffset, arg)
		1807: MemFlags	match_variant(6, InstructionData::LoadNoOffset, flags)
		1808: Amode	constructor(to_amode, [1807, 1806, 48], 2)
		1809: Reg	constructor(x64_mov, [1808], 3)
		1810: InstOutput	constructor(output_reg, [1809], 4)
		1811: Option(Type)	extractor(ty_int, 3)
		1812: Type	match_some(1811)
		1813: Offset32	constructor(zero_offset, [], 2)
		1814: Amode	constructor(to_amode, [1807, 1806, 1813], 3)
		1815: GprMem	constructor(amode_to_gpr_mem, [1814], 4)
		1816: Gpr	constructor(x64_movzx, [1589, 1815], 5)
		1817: InstOutput	constructor(output_gpr, [1816], 6)
		1818: Opcode	match_variant(6, InstructionData::StoreNoOffset, opcode)
		1819: ValueArray2	match_variant(6, InstructionData::StoreNoOffset, args)
		1820: MemFlags	match_variant(6, InstructionData::StoreNoOffset, flags)
		1821: (Value, Value)	extractor(value_array_2, 1819)
		1822: Value	match_tuple(1821, 0)
		1823: Value	match_tuple(1821, 1)
		1824: Type	extractor(value_type, 1822)
		1825: Option(Type)	extractor(fits_in_64, 1824)
		1826: Type	match_some(1825)
		1827: Option(Type)	extractor(ty_int, 1824)
		1828: Type	match_some(1827)
		1829: Amode	constructor(to_amode, [1820, 1823, 48], 2)
		1830: SyntheticAmode	constructor(amode_to_synthetic_amode, [1829], 3)
		1831: Gpr	constructor(put_in_gpr, [1822], 4)
		1832: SideEffectNoResult	constructor(x64_movrm, [1826, 1830, 1831], 5)
		1833: SideEffectNoResult	constructor(x64_mfence, [], 6)
		1834: SideEffectNoResult	constructor(side_effect_concat, [1832, 1833], 7)
		1835: InstOutput	constructor(side_effect, [1834], 8)
		1836: Opcode	match_variant(6, InstructionData::AtomicCas, opcode)
		1837: ValueArray3	match_variant(6, InstructionData::AtomicCas, args)
		1838: MemFlags	match_variant(6, InstructionData::AtomicCas, flags)
		1839: (Value, Value, Value)	extractor(value_array_3, 1837)
		1840: Value	match_tuple(1839, 0)
		1841: Value	match_tuple(1839, 1)
		1842: Value	match_tuple(1839, 2)
		1843: Gpr	constructor(put_in_gpr, [1841], 1)
		1844: Gpr	constructor(put_in_gpr, [1842], 2)
		1845: Offset32	constructor(zero_offset, [], 3)
		1846: Amode	constructor(to_amode, [1838, 1840, 1845], 4)
		1847: SyntheticAmode	constructor(amode_to_synthetic_amode, [1846], 5)
		1848: Gpr	constructor(x64_cmpxchg, [5, 1843, 1844, 1847], 6)
		1849: InstOutput	constructor(output_gpr, [1848], 7)
		1850: Opcode	match_variant(6, InstructionData::AtomicRmw, opcode)
		1851: ValueArray2	match_variant(6, InstructionData::AtomicRmw, args)
		1852: MemFlags	match_variant(6, InstructionData::AtomicRmw, flags)
		1853: AtomicRmwOp	match_variant(6, InstructionData::AtomicRmw, op)
		1854: (Value, Value)	extractor(value_array_2, 1851)
		1855: Value	match_tuple(1854, 0)
		1856: Value	match_tuple(1854, 1)
		1857: MachAtomicRmwOp	constructor(atomic_rmw_op_to_mach_atomic_rmw_op, [1853], 1)
		1858: Amode	constructor(to_amode, [1852, 1855, 1813], 3)
		1859: SyntheticAmode	constructor(amode_to_synthetic_amode, [1858], 4)
		1860: Gpr	constructor(put_in_gpr, [1856], 5)
		1861: Gpr	constructor(x64_atomic_rmw_seq, [5, 1857, 1859, 1860], 6)
		1862: InstOutput	constructor(output_gpr, [1861], 7)
		1863: Opcode	match_variant(6, InstructionData::Call, opcode)
		1864: ValueList	match_variant(6, InstructionData::Call, args)
		1865: FuncRef	match_variant(6, InstructionData::Call, func_ref)
		1866: ValueSlice	extractor(value_list_slice, 1864)
		1867: (SigRef, ExternalName, RelocDistance)	extractor(func_ref_data, 1865)
		1868: SigRef	match_tuple(1867, 0)
		1869: ExternalName	match_tuple(1867, 1)
		1870: RelocDistance	match_tuple(1867, 2)
		1871: InstOutput	constructor(gen_call, [1868, 1869, 1870, 1866], 1)
		1872: Opcode	match_variant(6, InstructionData::CallIndirect, opcode)
		1873: ValueList	match_variant(6, InstructionData::CallIndirect, args)
		1874: SigRef	match_variant(6, InstructionData::CallIndirect, sig_ref)
		1875: ValueSlice	extractor(value_list_slice, 1873)
		1876: Option((Value, ValueSlice))	extractor(value_slice_unwrap, 1875)
		1877: (Value, ValueSlice)	match_some(1876)
		1878: Value	match_tuple(1877, 0)
		1879: ValueSlice	match_tuple(1877, 1)
		1880: InstOutput	constructor(gen_call_indirect, [1874, 1878, 1879], 1)
		1881: InstOutput	constructor(gen_return_call, [1868, 1869, 1870, 1866], 1)
		1882: InstOutput	constructor(gen_return_call_indirect, [1874, 1878, 1879], 1)
		1883: Reg	constructor(x64_rbp, [], 1)
		1884: InstOutput	constructor(output_reg, [1883], 2)
		1885: Reg	constructor(x64_rsp, [], 1)
		1886: InstOutput	constructor(output_reg, [1885], 2)
		1887: Amode	make_variant(Amode::ImmReg, [1627, 1883, 47])
		1888: SyntheticAmode	constructor(amode_to_synthetic_amode, [1887], 2)
		1889: Reg	constructor(x64_load, [12, 1888, 279], 3)
		1890: InstOutput	constructor(output_reg, [1889], 4)
		1891: Opcode	match_variant(691, InstructionData::IntCompare, opcode)
		1892: ValueArray2	match_variant(691, InstructionData::IntCompare, args)
		1893: IntCC	match_variant(691, InstructionData::IntCompare, cond)
		1894: (Value, Value)	extractor(value_array_2, 1892)
		1895: Value	match_tuple(1894, 0)
		1896: Value	match_tuple(1894, 1)
		1897: IcmpCondResult	constructor(emit_cmp, [1893, 1895, 1896], 1)
		1898: ValueRegs	constructor(select_icmp, [1897, 671, 672], 2)
		1899: InstOutput	constructor(output, [1898], 3)
		1900: Gpr	constructor(extend_to_gpr, [381, 773, 310], 2)
		1901: GprMem	constructor(gpr_to_gpr_mem, [1900], 3)
		1902: Xmm	constructor(x64_cvtsi2ss, [773, 1422, 1901], 4)
		1903: InstOutput	constructor(output_xmm, [1902], 5)
		1904: Option(Type)	extractor(ty_int, 655)
		1905: Type	match_some(1904)
		1906: Option(Type)	extractor(fits_in_64, 1905)
		1907: Type	match_some(1906)
		1908: GprMem	constructor(put_in_gpr_mem, [381], 2)
		1909: Xmm	constructor(x64_cvtsi2ss, [1907, 1422, 1908], 3)
		1910: InstOutput	constructor(output_xmm, [1909], 4)
		1911: Xmm	constructor(x64_cvtsi2sd, [773, 1427, 1901], 4)
		1912: InstOutput	constructor(output_xmm, [1911], 5)
		1913: Xmm	constructor(x64_cvtsi2sd, [1907, 1427, 1908], 3)
		1914: InstOutput	constructor(output_xmm, [1913], 4)
		1915: Xmm	constructor(x64_cvtdq2ps, [541], 2)
		1916: InstOutput	constructor(output_xmm, [1915], 3)
		1917: Xmm	constructor(xmm_zero, [1426], 2)
		1918: Gpr	constructor(x64_movq_to_gpr, [544], 3)
		1919: GprMem	constructor(gpr_to_gpr_mem, [1918], 4)
		1920: Xmm	constructor(x64_cvtsi2sd, [12, 1917, 1919], 5)
		1921: Xmm	constructor(x64_pshufd, [574, 1565], 7)
		1922: Gpr	constructor(x64_movq_to_gpr, [1921], 8)
		1923: GprMem	constructor(gpr_to_gpr_mem, [1922], 9)
		1924: Xmm	constructor(x64_cvtsi2sd, [12, 1917, 1923], 10)
		1925: XmmMem	constructor(xmm_to_xmm_mem, [1924], 11)
		1926: Xmm	constructor(x64_unpcklpd, [1920, 1925], 12)
		1927: InstOutput	constructor(output_xmm, [1926], 13)
		1928: Option(Inst)	extractor(def_inst, 381)
		1929: Inst	match_some(1928)
		1930: InstructionData	extractor(inst_data, 1929)
		1931: Opcode	match_variant(1930, InstructionData::Unary, opcode)
		1932: Value	match_variant(1930, InstructionData::Unary, arg)
		1933: Type	extractor(value_type, 1932)
		1934: XmmMem	constructor(put_in_xmm_mem, [1932], 1)
		1935: Xmm	constructor(x64_cvtdq2pd, [1934], 2)
		1936: InstOutput	constructor(output_xmm, [1935], 3)
		1937: Option(Type)	extractor(fits_in_32, 655)
		1938: Type	match_some(1937)
		1939: Option(Type)	extractor(ty_int, 1938)
		1940: Type	match_some(1939)
		1941: Gpr	constructor(extend_to_gpr, [381, 12, 293], 2)
		1942: GprMem	constructor(gpr_to_gpr_mem, [1941], 3)
		1943: Xmm	constructor(x64_cvtsi2ss, [12, 1422, 1942], 4)
		1944: InstOutput	constructor(output_xmm, [1943], 5)
		1945: Xmm	constructor(x64_cvtsi2sd, [12, 1427, 1942], 4)
		1946: InstOutput	constructor(output_xmm, [1945], 5)
		1947: Xmm	constructor(cvt_u64_to_float_seq, [3, 382], 2)
		1948: InstOutput	constructor(output_xmm, [1947], 3)
		1949: u128	const_int(79228162495817593524129366015, u128)
		1950: VCodeConstant	constructor(emit_u128_le_const, [1949], 1)
		1951: XmmMem	constructor(const_to_xmm_mem, [1950], 2)
		1952: u128	const_int(89307505966799035215565906462008934400, u128)
		1953: VCodeConstant	constructor(emit_u128_le_const, [1952], 3)
		1954: XmmMem	constructor(const_to_xmm_mem, [1953], 4)
		1955: u128	const_int(91965961958368866961517635770645479424, u128)
		1956: VCodeConstant	constructor(emit_u128_le_const, [1955], 5)
		1957: XmmMem	constructor(const_to_xmm_mem, [1956], 6)
		1958: u128	const_int(91965961958388209774631469837441826816, u128)
		1959: VCodeConstant	constructor(emit_u128_le_const, [1958], 7)
		1960: XmmMem	constructor(const_to_xmm_mem, [1959], 8)
		1961: Xmm	constructor(put_in_xmm, [381], 9)
		1962: Xmm	constructor(x64_pand, [1961, 1951], 10)
		1963: Xmm	constructor(x64_por, [1962, 1954], 11)
		1964: Xmm	constructor(put_in_xmm, [381], 12)
		1965: Xmm	constructor(x64_psrlq, [1964, 489], 14)
		1966: Xmm	constructor(x64_por, [1965, 1957], 15)
		1967: Xmm	constructor(x64_subpd, [1966, 1960], 16)
		1968: XmmMem	constructor(xmm_to_xmm_mem, [1967], 17)
		1969: Xmm	constructor(x64_addpd, [1963, 1968], 18)
		1970: InstOutput	constructor(output_xmm, [1969], 19)
		1971: u128	const_int(4841369600550502400, u128)
		1972: VCodeConstant	constructor(emit_u128_le_const, [1971], 1)
		1973: XmmMem	constructor(const_to_xmm_mem, [1972], 2)
		1974: Xmm	constructor(put_in_xmm, [1932], 3)
		1975: Xmm	constructor(x64_unpcklps, [1974, 1973], 4)
		1976: VCodeConstant	constructor(emit_u128_le_const, [1952], 5)
		1977: XmmMem	constructor(const_to_xmm_mem, [1976], 6)
		1978: Xmm	constructor(x64_subpd, [1975, 1977], 7)
		1979: InstOutput	constructor(output_xmm, [1978], 8)
		1980: Xmm	constructor(x64_vcvtudq2ps, [541], 2)
		1981: InstOutput	constructor(output_xmm, [1980], 3)
		1982: u32	const_int(16, u32)
		1983: XmmMemImm	constructor(xmi_imm, [1982], 2)
		1984: Xmm	constructor(x64_pslld, [544, 1983], 3)
		1985: XmmMemImm	constructor(xmi_imm, [1982], 4)
		1986: Xmm	constructor(x64_psrld, [1984, 1985], 5)
		1987: XmmMem	constructor(xmm_to_xmm_mem, [1986], 6)
		1988: Xmm	constructor(x64_psubd, [544, 1987], 7)
		1989: XmmMem	constructor(xmm_to_xmm_mem, [1986], 8)
		1990: Xmm	constructor(x64_cvtdq2ps, [1989], 9)
		1991: XmmMemImm	constructor(xmi_imm, [229], 10)
		1992: Xmm	constructor(x64_psrld, [1988, 1991], 11)
		1993: XmmMem	constructor(xmm_to_xmm_mem, [1992], 12)
		1994: Xmm	constructor(x64_cvtdq2ps, [1993], 13)
		1995: XmmMem	constructor(xmm_to_xmm_mem, [1994], 14)
		1996: Xmm	constructor(x64_addps, [1994, 1995], 15)
		1997: XmmMem	constructor(xmm_to_xmm_mem, [1990], 16)
		1998: Xmm	constructor(x64_addps, [1996, 1997], 17)
		1999: InstOutput	constructor(output_xmm, [1998], 18)
		2000: Option(Type)	extractor(ty_scalar_float, 655)
		2001: Type	match_some(2000)
		2002: Gpr	constructor(cvt_float_to_uint_seq, [3, 381, 109], 1)
		2003: InstOutput	constructor(output_gpr, [2002], 2)
		2004: Gpr	constructor(cvt_float_to_uint_seq, [3, 381, 117], 1)
		2005: InstOutput	constructor(output_gpr, [2004], 2)
		2006: Gpr	constructor(cvt_float_to_sint_seq, [3, 381, 109], 1)
		2007: InstOutput	constructor(output_gpr, [2006], 2)
		2008: Gpr	constructor(cvt_float_to_sint_seq, [3, 381, 117], 1)
		2009: InstOutput	constructor(output_gpr, [2008], 2)
		2010: Xmm	constructor(x64_cmpps, [544, 1436, 1099], 3)
		2011: XmmMem	constructor(xmm_to_xmm_mem, [2010], 4)
		2012: Xmm	constructor(x64_andps, [544, 2011], 5)
		2013: XmmMem	constructor(xmm_to_xmm_mem, [2012], 6)
		2014: Xmm	constructor(x64_pxor, [2010, 2013], 7)
		2015: XmmMem	constructor(xmm_to_xmm_mem, [2012], 8)
		2016: Xmm	constructor(x64_cvttps2dq, [2015], 9)
		2017: XmmMem	constructor(xmm_to_xmm_mem, [2014], 10)
		2018: Xmm	constructor(x64_pand, [2016, 2017], 11)
		2019: XmmMemImm	constructor(xmi_imm, [560], 12)
		2020: Xmm	constructor(x64_psrad, [2018, 2019], 13)
		2021: XmmMem	constructor(xmm_to_xmm_mem, [2016], 14)
		2022: Xmm	constructor(x64_pxor, [2020, 2021], 15)
		2023: InstOutput	constructor(output_xmm, [2022], 16)
		2024: Xmm	constructor(xmm_zero, [1421], 2)
		2025: XmmMem	constructor(xmm_to_xmm_mem, [2024], 3)
		2026: Xmm	constructor(x64_maxps, [544, 2025], 4)
		2027: XmmMem	constructor(xmm_to_xmm_mem, [2024], 5)
		2028: Xmm	constructor(x64_pcmpeqd, [2024, 2027], 6)
		2029: XmmMemImm	constructor(xmi_imm, [229], 7)
		2030: Xmm	constructor(x64_psrld, [2028, 2029], 8)
		2031: XmmMem	constructor(xmm_to_xmm_mem, [2030], 9)
		2032: Xmm	constructor(x64_cvtdq2ps, [2031], 10)
		2033: XmmMem	constructor(xmm_to_xmm_mem, [2026], 11)
		2034: Xmm	constructor(x64_cvttps2dq, [2033], 12)
		2035: XmmMem	constructor(xmm_to_xmm_mem, [2032], 13)
		2036: Xmm	constructor(x64_subps, [2026, 2035], 14)
		2037: XmmMem	constructor(xmm_to_xmm_mem, [2036], 15)
		2038: Xmm	constructor(x64_cmpps, [2032, 2037, 1108], 16)
		2039: XmmMem	constructor(xmm_to_xmm_mem, [2036], 17)
		2040: Xmm	constructor(x64_cvttps2dq, [2039], 18)
		2041: XmmMem	constructor(xmm_to_xmm_mem, [2038], 19)
		2042: Xmm	constructor(x64_pxor, [2040, 2041], 20)
		2043: Xmm	constructor(xmm_zero, [405], 21)
		2044: Xmm	constructor(lower_vec_smax, [405, 2042, 2043], 22)
		2045: XmmMem	constructor(xmm_to_xmm_mem, [2034], 23)
		2046: Xmm	constructor(x64_paddd, [2044, 2045], 24)
		2047: InstOutput	constructor(output_xmm, [2046], 25)
		2048: Xmm	constructor(x64_cvttps2dq, [541], 2)
		2049: InstOutput	constructor(output_xmm, [2048], 3)
		2050: u128	const_int(1324055902416102970674609367438786815, u128)
		2051: VCodeConstant	constructor(emit_u128_le_const, [2050], 1)
		2052: XmmMem	constructor(const_to_xmm_mem, [2051], 2)
		2053: Xmm	constructor(x64_movdqu_load, [2052], 3)
		2054: Xmm	constructor(put_in_xmm, [39], 4)
		2055: XmmMem	constructor(xmm_to_xmm_mem, [2053], 5)
		2056: Xmm	constructor(x64_pand, [2054, 2055], 6)
		2057: Xmm	constructor(put_in_xmm, [40], 7)
		2058: XmmMem	constructor(xmm_to_xmm_mem, [2053], 8)
		2059: Xmm	constructor(x64_pand, [2057, 2058], 9)
		2060: XmmMem	constructor(xmm_to_xmm_mem, [2059], 10)
		2061: Xmm	constructor(x64_packuswb, [2056, 2060], 11)
		2062: Xmm	constructor(put_in_xmm, [39], 12)
		2063: u32	const_int(8, u32)
		2064: XmmMemImm	constructor(xmi_imm, [2063], 13)
		2065: Xmm	constructor(x64_psrlw, [2062, 2064], 14)
		2066: Xmm	constructor(put_in_xmm, [40], 15)
		2067: XmmMemImm	constructor(xmi_imm, [2063], 16)
		2068: Xmm	constructor(x64_psrlw, [2066, 2067], 17)
		2069: XmmMem	constructor(xmm_to_xmm_mem, [2068], 18)
		2070: Xmm	constructor(x64_packuswb, [2065, 2069], 19)
		2071: XmmMem	constructor(xmm_to_xmm_mem, [2070], 20)
		2072: Xmm	constructor(x64_paddb, [2061, 2071], 21)
		2073: InstOutput	constructor(output_xmm, [2072], 22)
		2074: Xmm	constructor(x64_phaddw, [68, 69], 3)
		2075: InstOutput	constructor(output_xmm, [2074], 4)
		2076: u8	const_int(232, u8)
		2077: Xmm	constructor(x64_pshuflw, [316, 2076], 4)
		2078: XmmMem	constructor(xmm_to_xmm_mem, [2077], 5)
		2079: Xmm	constructor(x64_pshufhw, [2078, 2076], 6)
		2080: XmmMem	constructor(xmm_to_xmm_mem, [2079], 7)
		2081: Xmm	constructor(x64_pshufd, [2080, 2076], 8)
		2082: XmmMem	constructor(xmm_to_xmm_mem, [459], 9)
		2083: Xmm	constructor(x64_pshuflw, [2082, 2076], 10)
		2084: XmmMem	constructor(xmm_to_xmm_mem, [2083], 11)
		2085: Xmm	constructor(x64_pshufhw, [2084, 2076], 12)
		2086: XmmMem	constructor(xmm_to_xmm_mem, [2085], 13)
		2087: Xmm	constructor(x64_pshufd, [2086, 2076], 14)
		2088: XmmMem	constructor(xmm_to_xmm_mem, [2087], 15)
		2089: Xmm	constructor(x64_punpcklqdq, [2081, 2088], 16)
		2090: XmmMemImm	constructor(xmi_imm, [1982], 17)
		2091: Xmm	constructor(x64_psrad, [68, 2090], 18)
		2092: XmmMemImm	constructor(xmi_imm, [1982], 19)
		2093: Xmm	constructor(x64_psrad, [459, 2092], 20)
		2094: XmmMem	constructor(xmm_to_xmm_mem, [2093], 21)
		2095: Xmm	constructor(x64_packssdw, [2091, 2094], 22)
		2096: XmmMem	constructor(xmm_to_xmm_mem, [2095], 23)
		2097: Xmm	constructor(x64_paddw, [2089, 2096], 24)
		2098: InstOutput	constructor(output_xmm, [2097], 25)
		2099: Xmm	constructor(x64_phaddd, [68, 69], 3)
		2100: InstOutput	constructor(output_xmm, [2099], 4)
		2101: XmmMem	constructor(xmm_to_xmm_mem, [459], 3)
		2102: u8	const_int(136, u8)
		2103: Xmm	constructor(x64_shufps, [68, 2101, 2102], 4)
		2104: u8	const_int(221, u8)
		2105: Xmm	constructor(x64_shufps, [68, 462, 2104], 6)
		2106: XmmMem	constructor(xmm_to_xmm_mem, [2105], 7)
		2107: Xmm	constructor(x64_paddd, [2103, 2106], 8)
		2108: InstOutput	constructor(output_xmm, [2107], 9)
		2109: u128	const_int(1334440654591915542993625911497130241, u128)
		2110: VCodeConstant	constructor(emit_u128_le_const, [2109], 1)
		2111: Xmm	constructor(x64_xmm_load_const, [278, 2110], 2)
		2112: XmmMem	constructor(put_in_xmm_mem, [184], 3)
		2113: Xmm	constructor(x64_pmaddubsw, [2111, 2112], 4)
		2114: InstOutput	constructor(output_xmm, [2113], 5)
		2115: u128	const_int(5192376087906286159508272029171713, u128)
		2116: VCodeConstant	constructor(emit_u128_le_const, [2115], 1)
		2117: XmmMem	constructor(const_to_xmm_mem, [2116], 2)
		2118: Xmm	constructor(put_in_xmm, [184], 3)
		2119: Xmm	constructor(x64_pmaddwd, [2118, 2117], 4)
		2120: InstOutput	constructor(output_xmm, [2119], 5)
		2121: XmmMem	constructor(const_to_xmm_mem, [2110], 2)
		2122: Xmm	constructor(x64_pmaddubsw, [2118, 2121], 4)
		2123: InstOutput	constructor(output_xmm, [2122], 5)
		2124: u128	const_int(-170138587272425278588607549579869519872, u128)
		2125: VCodeConstant	constructor(emit_u128_le_const, [2124], 1)
		2126: XmmMem	constructor(const_to_xmm_mem, [2125], 2)
		2127: Xmm	constructor(x64_pxor, [2118, 2126], 4)
		2128: VCodeConstant	constructor(emit_u128_le_const, [2115], 5)
		2129: XmmMem	constructor(const_to_xmm_mem, [2128], 6)
		2130: Xmm	constructor(x64_pmaddwd, [2127, 2129], 7)
		2131: u128	const_int(5192296859743753448426600480702464, u128)
		2132: VCodeConstant	constructor(emit_u128_le_const, [2131], 8)
		2133: XmmMem	constructor(const_to_xmm_mem, [2132], 9)
		2134: Xmm	constructor(x64_paddd, [2130, 2133], 10)
		2135: InstOutput	constructor(output_xmm, [2134], 11)
		2136: Opcode	match_variant(182, InstructionData::Binary, opcode)
		2137: ValueArray2	match_variant(182, InstructionData::Binary, args)
		2138: (Value, Value)	extractor(value_array_2, 2137)
		2139: Value	match_tuple(2138, 0)
		2140: Value	match_tuple(2138, 1)
		2141: Option(Inst)	extractor(def_inst, 2139)
		2142: Inst	match_some(2141)
		2143: InstructionData	extractor(inst_data, 2142)
		2144: Opcode	match_variant(2143, InstructionData::Unary, opcode)
		2145: Value	match_variant(2143, InstructionData::Unary, arg)
		2146: Option(Inst)	extractor(def_inst, 2140)
		2147: Inst	match_some(2146)
		2148: InstructionData	extractor(inst_data, 2147)
		2149: Opcode	match_variant(2148, InstructionData::Unary, opcode)
		2150: Value	match_variant(2148, InstructionData::Unary, arg)
		2151: Opcode	match_variant(173, InstructionData::Binary, opcode)
		2152: ValueArray2	match_variant(173, InstructionData::Binary, args)
		2153: (Value, Value)	extractor(value_array_2, 2152)
		2154: Value	match_tuple(2153, 0)
		2155: Value	match_tuple(2153, 1)
		2156: Option(Inst)	extractor(def_inst, 2154)
		2157: Inst	match_some(2156)
		2158: InstructionData	extractor(inst_data, 2157)
		2159: Opcode	match_variant(2158, InstructionData::Unary, opcode)
		2160: Value	match_variant(2158, InstructionData::Unary, arg)
		2161: Option(Inst)	extractor(def_inst, 2155)
		2162: Inst	match_some(2161)
		2163: InstructionData	extractor(inst_data, 2162)
		2164: Opcode	match_variant(2163, InstructionData::Unary, opcode)
		2165: Value	match_variant(2163, InstructionData::Unary, arg)
		2166: Xmm	constructor(put_in_xmm, [2145], 1)
		2167: XmmMem	constructor(put_in_xmm_mem, [2150], 2)
		2168: Xmm	constructor(x64_pmaddwd, [2166, 2167], 3)
		2169: InstOutput	constructor(output_xmm, [2168], 4)
		2170: Xmm	constructor(x64_pmovsxbw, [541], 2)
		2171: InstOutput	constructor(output_xmm, [2170], 3)
		2172: Xmm	constructor(x64_pmovsxwd, [541], 2)
		2173: InstOutput	constructor(output_xmm, [2172], 3)
		2174: Xmm	constructor(x64_pmovsxdq, [541], 2)
		2175: InstOutput	constructor(output_xmm, [2174], 3)
		2176: Xmm	constructor(lower_swiden_low, [3, 544], 2)
		2177: InstOutput	constructor(output_xmm, [2176], 3)
		2178: Xmm	constructor(x64_palignr, [544, 1436, 467], 3)
		2179: XmmMem	constructor(xmm_to_xmm_mem, [2178], 4)
		2180: Xmm	constructor(x64_pmovsxbw, [2179], 5)
		2181: InstOutput	constructor(output_xmm, [2180], 6)
		2182: Xmm	constructor(x64_pmovsxwd, [2179], 5)
		2183: InstOutput	constructor(output_xmm, [2182], 6)
		2184: Xmm	constructor(x64_pshufd, [541, 1565], 2)
		2185: XmmMem	constructor(xmm_to_xmm_mem, [2184], 3)
		2186: Xmm	constructor(x64_pmovsxdq, [2185], 4)
		2187: InstOutput	constructor(output_xmm, [2186], 5)
		2188: Xmm	constructor(x64_punpckhbw, [544, 1436], 3)
		2189: XmmMemImm	constructor(xmi_imm, [2063], 4)
		2190: Xmm	constructor(x64_psraw, [2188, 2189], 5)
		2191: InstOutput	constructor(output_xmm, [2190], 6)
		2192: Xmm	constructor(x64_punpckhwd, [544, 1436], 3)
		2193: Xmm	constructor(x64_psrad, [2192, 1985], 5)
		2194: InstOutput	constructor(output_xmm, [2193], 6)
		2195: u8	const_int(14, u8)
		2196: Xmm	constructor(x64_pshufd, [541, 2195], 2)
		2197: Xmm	constructor(xmm_zero, [405], 3)
		2198: XmmMem	constructor(xmm_to_xmm_mem, [2196], 4)
		2199: Xmm	constructor(x64_pcmpgtd, [2197, 2198], 5)
		2200: XmmMem	constructor(xmm_to_xmm_mem, [2199], 6)
		2201: Xmm	constructor(x64_punpckldq, [2196, 2200], 7)
		2202: InstOutput	constructor(output_xmm, [2201], 8)
		2203: Xmm	constructor(x64_pmovzxbw, [541], 2)
		2204: InstOutput	constructor(output_xmm, [2203], 3)
		2205: Xmm	constructor(x64_pmovzxwd, [541], 2)
		2206: InstOutput	constructor(output_xmm, [2205], 3)
		2207: Xmm	constructor(x64_pmovzxdq, [541], 2)
		2208: InstOutput	constructor(output_xmm, [2207], 3)
		2209: Xmm	constructor(lower_uwiden_low, [3, 544], 2)
		2210: InstOutput	constructor(output_xmm, [2209], 3)
		2211: XmmMem	constructor(xmm_to_xmm_mem, [545], 3)
		2212: Xmm	constructor(x64_punpckhbw, [544, 2211], 4)
		2213: InstOutput	constructor(output_xmm, [2212], 5)
		2214: Xmm	constructor(x64_punpckhwd, [544, 2211], 4)
		2215: InstOutput	constructor(output_xmm, [2214], 5)
		2216: Xmm	constructor(x64_unpckhps, [544, 2025], 4)
		2217: InstOutput	constructor(output_xmm, [2216], 5)
		2218: Type	extractor(value_type, 39)
		2219: Xmm	constructor(x64_packsswb, [68, 69], 3)
		2220: InstOutput	constructor(output_xmm, [2219], 4)
		2221: Xmm	constructor(x64_packssdw, [68, 69], 3)
		2222: InstOutput	constructor(output_xmm, [2221], 4)
		2223: Option(Value)	extractor(first_result, 181)
		2224: Value	match_some(2223)
		2225: Type	extractor(value_type, 2224)
		2226: Opcode	match_variant(173, InstructionData::UnaryConst, opcode)
		2227: Constant	match_variant(173, InstructionData::UnaryConst, constant_handle)
		2228: Option(u128)	extractor(u128_from_constant, 2227)
		2229: u128	match_some(2228)
		2230: XmmMem	constructor(xmm_to_xmm_mem, [185], 2)
		2231: Xmm	constructor(x64_cmppd, [185, 2230, 1099], 3)
		2232: u128	const_int(87562894222253961879829747836030812160, u128)
		2233: VCodeConstant	constructor(emit_u128_le_const, [2232], 4)
		2234: XmmMem	constructor(const_to_xmm_mem, [2233], 5)
		2235: Xmm	constructor(x64_andps, [2231, 2234], 6)
		2236: XmmMem	constructor(xmm_to_xmm_mem, [2235], 7)
		2237: Xmm	constructor(x64_minpd, [185, 2236], 8)
		2238: XmmMem	constructor(xmm_to_xmm_mem, [2237], 9)
		2239: Xmm	constructor(x64_cvttpd2dq, [2238], 10)
		2240: InstOutput	constructor(output_xmm, [2239], 11)
		2241: Xmm	constructor(x64_cvttpd2dq, [514], 2)
		2242: InstOutput	constructor(output_xmm, [2241], 3)
		2243: Xmm	constructor(x64_packuswb, [68, 69], 3)
		2244: InstOutput	constructor(output_xmm, [2243], 4)
		2245: Xmm	constructor(x64_packusdw, [68, 69], 3)
		2246: InstOutput	constructor(output_xmm, [2245], 4)
		2247: Xmm	constructor(unarrow_i32x4_lanes_to_low_u16_lanes, [68], 2)
		2248: Xmm	constructor(put_in_xmm, [40], 3)
		2249: Xmm	constructor(unarrow_i32x4_lanes_to_low_u16_lanes, [2248], 4)
		2250: XmmMem	constructor(xmm_to_xmm_mem, [2249], 5)
		2251: Xmm	constructor(x64_punpcklqdq, [2247, 2250], 6)
		2252: InstOutput	constructor(output_xmm, [2251], 7)
		2253: Type	extractor(value_type, 1806)
		2254: Xmm	constructor(put_in_xmm, [1806], 1)
		2255: Gpr	constructor(bitcast_xmm_to_gpr, [21, 2254], 2)
		2256: InstOutput	constructor(output_gpr, [2255], 3)
		2257: Gpr	constructor(put_in_gpr, [1806], 1)
		2258: Xmm	constructor(bitcast_gpr_to_xmm, [773, 2257], 2)
		2259: InstOutput	constructor(output_xmm, [2258], 3)
		2260: Gpr	constructor(bitcast_xmm_to_gpr, [28, 2254], 2)
		2261: InstOutput	constructor(output_gpr, [2260], 3)
		2262: Xmm	constructor(bitcast_gpr_to_xmm, [12, 2257], 2)
		2263: InstOutput	constructor(output_xmm, [2262], 3)
		2264: Option(RegisterClass)	extractor(type_register_class, 2253)
		2265: RegisterClass	match_some(2264)
		2266: bool	match_variant(2265, RegisterClass::Gpr, single_register)
		2267: InstOutput	constructor(output_value, [1806], 1)
		2268: bool	constructor(is_ref_type, [2253], 0)
		2269: bool	constructor(is_ref_type, [3], 0)
		2270: Gpr	constructor(copy_gpr, [3, 2257], 2)
		2271: InstOutput	constructor(output_gpr, [2270], 3)
		2272: Reg	constructor(imm, [21, 635], 1)
		2273: Xmm	constructor(xmm_new, [2272], 2)
		2274: XmmMem	constructor(put_in_xmm_mem, [39], 3)
		2275: Xmm	constructor(x64_andnps, [2273, 2274], 4)
		2276: XmmMem	constructor(put_in_xmm_mem, [40], 5)
		2277: Xmm	constructor(x64_andps, [2273, 2276], 6)
		2278: XmmMem	constructor(xmm_to_xmm_mem, [2277], 7)
		2279: Xmm	constructor(x64_orps, [2275, 2278], 8)
		2280: InstOutput	constructor(output_xmm, [2279], 9)
		2281: Reg	constructor(imm, [28, 640], 1)
		2282: Xmm	constructor(xmm_new, [2281], 2)
		2283: Xmm	constructor(x64_andnpd, [2282, 2274], 4)
		2284: Xmm	constructor(x64_andpd, [2282, 2276], 6)
		2285: XmmMem	constructor(xmm_to_xmm_mem, [2284], 7)
		2286: Xmm	constructor(x64_orpd, [2283, 2285], 8)
		2287: InstOutput	constructor(output_xmm, [2286], 9)
		2288: RegMem	constructor(put_in_reg_mem, [381], 1)
		2289: RoundImm	make_variant(RoundImm::RoundUp, [])
		2290: Xmm	constructor(x64_round, [655, 2288, 2289], 2)
		2291: InstOutput	constructor(output_xmm, [2290], 3)
		2292: RoundImm	make_variant(RoundImm::RoundDown, [])
		2293: Xmm	constructor(x64_round, [655, 2288, 2292], 2)
		2294: InstOutput	constructor(output_xmm, [2293], 3)
		2295: RoundImm	make_variant(RoundImm::RoundNearest, [])
		2296: Xmm	constructor(x64_round, [655, 2288, 2295], 2)
		2297: InstOutput	constructor(output_xmm, [2296], 3)
		2298: RoundImm	make_variant(RoundImm::RoundZero, [])
		2299: Xmm	constructor(x64_round, [655, 2288, 2298], 2)
		2300: InstOutput	constructor(output_xmm, [2299], 3)
		2301: Opcode	match_variant(6, InstructionData::StackLoad, opcode)
		2302: StackSlot	match_variant(6, InstructionData::StackLoad, stack_slot)
		2303: Offset32	match_variant(6, InstructionData::StackLoad, offset)
		2304: Gpr	constructor(stack_addr_impl, [2302, 2303], 1)
		2305: InstOutput	constructor(output_gpr, [2304], 2)
		2306: Gpr	constructor(extend_to_gpr, [39, 773, 293], 1)
		2307: GprMem	constructor(gpr_to_gpr_mem, [356], 3)
		2308: DivSignedness	make_variant(DivSignedness::Unsigned, [])
		2309: TrapCode	make_variant(TrapCode::IntegerDivisionByZero, [])
		2310: Gpr	constructor(x64_div8, [2306, 2307, 2308, 2309], 4)
		2311: InstOutput	constructor(output_gpr, [2310], 5)
		2312: Option(Type)	extractor(fits_in_64, 2218)
		2313: Type	match_some(2312)
		2314: Gpr	constructor(gpr_new, [15], 3)
		2315: Gpr	constructor(put_in_gpr, [40], 4)
		2316: GprMem	constructor(gpr_to_gpr_mem, [2315], 5)
		2317: OperandSize	constructor(raw_operand_size_of_type, [2313], 6)
		2318: ValueRegs	constructor(x64_div_quotient, [41, 2314, 2316, 2317, 2308, 2309], 7)
		2319: InstOutput	constructor(output, [2318], 8)
		2320: OperandSize	make_variant(OperandSize::Size8, [])
		2321: Gpr	constructor(x64_sign_extend_data, [41, 2320], 2)
		2322: Reg	constructor(nonzero_sdiv_divisor, [1674, 40], 3)
		2323: GprMem	constructor(reg_to_gpr_mem, [2322], 4)
		2324: DivSignedness	make_variant(DivSignedness::Signed, [])
		2325: TrapCode	make_variant(TrapCode::IntegerOverflow, [])
		2326: Gpr	constructor(x64_div8, [2321, 2323, 2324, 2325], 5)
		2327: InstOutput	constructor(output_gpr, [2326], 6)
		2328: OperandSize	constructor(raw_operand_size_of_type, [2313], 2)
		2329: Gpr	constructor(x64_sign_extend_data, [41, 2328], 3)
		2330: Reg	constructor(nonzero_sdiv_divisor, [2313, 40], 4)
		2331: GprMem	constructor(reg_to_gpr_mem, [2330], 5)
		2332: ValueRegs	constructor(x64_div_quotient, [41, 2329, 2331, 2328, 2324, 2325], 6)
		2333: InstOutput	constructor(output, [2332], 7)
		2334: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [1324], 5)
		2335: Gpr	constructor(x64_shr, [12, 2310, 2334], 6)
		2336: InstOutput	constructor(output_gpr, [2335], 7)
		2337: ValueRegs	constructor(x64_div_remainder, [41, 2314, 2316, 2317, 2308, 2309], 7)
		2338: InstOutput	constructor(output, [2337], 8)
		2339: Option(u64)	constructor(safe_divisor_from_imm64, [1674, 331], 0)
		2340: u64	match_some(2339)
		2341: Reg	constructor(imm, [1674, 2340], 3)
		2342: GprMem	constructor(reg_to_gpr_mem, [2341], 4)
		2343: Gpr	constructor(x64_div8, [2321, 2342, 2324, 2309], 5)
		2344: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [1324], 6)
		2345: Gpr	constructor(x64_shr, [12, 2343, 2344], 7)
		2346: InstOutput	constructor(output_gpr, [2345], 8)
		2347: Option(u64)	constructor(safe_divisor_from_imm64, [2218, 331], 0)
		2348: u64	match_some(2347)
		2349: OperandSize	constructor(raw_operand_size_of_type, [2218], 2)
		2350: Gpr	constructor(x64_sign_extend_data, [41, 2349], 3)
		2351: Reg	constructor(imm, [2218, 2348], 4)
		2352: GprMem	constructor(reg_to_gpr_mem, [2351], 5)
		2353: ValueRegs	constructor(x64_div_remainder, [41, 2350, 2352, 2349, 2324, 2309], 6)
		2354: InstOutput	constructor(output, [2353], 7)
		2355: Gpr	constructor(put_in_gpr, [40], 3)
		2356: Gpr	constructor(x64_checked_srem_seq8, [2321, 2355], 4)
		2357: Gpr	constructor(x64_shr, [12, 2356, 2334], 6)
		2358: InstOutput	constructor(output_gpr, [2357], 7)
		2359: ValueRegs	constructor(x64_checked_srem_seq, [2349, 41, 2350, 2315], 5)
		2360: Reg	constructor(value_regs_get, [2359, 81], 6)
		2361: InstOutput	constructor(output_reg, [2360], 7)
		2362: Imm8Gpr	constructor(imm8_to_imm8_gpr, [467], 4)
		2363: Gpr	constructor(x64_shr, [1323, 419, 2362], 5)
		2364: InstOutput	constructor(output_gpr, [2363], 6)
		2365: Option(Type)	extractor(ty_int_ref_16_to_64, 2218)
		2366: Type	match_some(2365)
		2367: ValueRegs	constructor(x64_mul, [2366, 109, 41, 110], 3)
		2368: Gpr	constructor(value_regs_get_gpr, [2367, 81], 4)
		2369: InstOutput	constructor(output_gpr, [2368], 5)
		2370: Gpr	constructor(x64_mul8, [117, 41, 110], 3)
		2371: Gpr	constructor(x64_sar, [1323, 2370, 2362], 5)
		2372: InstOutput	constructor(output_gpr, [2371], 6)
		2373: ValueRegs	constructor(x64_mul, [2366, 117, 41, 110], 3)
		2374: Gpr	constructor(value_regs_get_gpr, [2373, 81], 4)
		2375: InstOutput	constructor(output_gpr, [2374], 5)
		2376: Gpr	constructor(read_pinned_gpr, [], 1)
		2377: InstOutput	constructor(output_gpr, [2376], 2)
		2378: SideEffectNoResult	constructor(write_pinned_gpr, [382], 2)
		2379: InstOutput	constructor(side_effect, [2378], 3)
		2380: Opcode	match_variant(6, InstructionData::UnaryConst, opcode)
		2381: Constant	match_variant(6, InstructionData::UnaryConst, constant_handle)
		2382: VCodeConstant	constructor(const_to_vconst, [2381], 1)
		2383: Xmm	constructor(x64_xmm_load_const, [3, 2382], 2)
		2384: InstOutput	constructor(output_xmm, [2383], 3)
		2385: Option(u128)	extractor(u128_from_constant, 2381)
		2386: u128	match_some(2385)
		2387: Xmm	constructor(xmm_uninit_value, [], 1)
		2388: XmmMem	constructor(xmm_to_xmm_mem, [2387], 2)
		2389: Xmm	constructor(x64_pxor, [2387, 2388], 3)
		2390: InstOutput	constructor(output_xmm, [2389], 4)
		2391: Opcode	match_variant(6, InstructionData::Shuffle, opcode)
		2392: ValueArray2	match_variant(6, InstructionData::Shuffle, args)
		2393: Immediate	match_variant(6, InstructionData::Shuffle, imm)
		2394: (Value, Value)	extractor(value_array_2, 2392)
		2395: Value	match_tuple(2394, 0)
		2396: Value	match_tuple(2394, 1)
		2397: Option(u8)	extractor(pblendw_imm, 2393)
		2398: u8	match_some(2397)
		2399: Xmm	constructor(put_in_xmm, [2395], 1)
		2400: XmmMem	constructor(put_in_xmm_mem, [2396], 2)
		2401: Xmm	constructor(x64_pblendw, [2399, 2400, 2398], 3)
		2402: InstOutput	constructor(output_xmm, [2401], 4)
		2403: Option(u8)	extractor(palignr_imm_from_immediate, 2393)
		2404: u8	match_some(2403)
		2405: Xmm	constructor(put_in_xmm, [2396], 1)
		2406: XmmMem	constructor(put_in_xmm_mem, [2395], 2)
		2407: Xmm	constructor(x64_palignr, [2405, 2406, 2404], 3)
		2408: InstOutput	constructor(output_xmm, [2407], 4)
		2409: Option(u8)	extractor(pshuflw_lhs_imm, 2393)
		2410: u8	match_some(2409)
		2411: XmmMem	constructor(put_in_xmm_mem, [2395], 1)
		2412: Xmm	constructor(x64_pshuflw, [2411, 2410], 2)
		2413: InstOutput	constructor(output_xmm, [2412], 3)
		2414: Option(u8)	extractor(pshuflw_rhs_imm, 2393)
		2415: u8	match_some(2414)
		2416: XmmMem	constructor(put_in_xmm_mem, [2396], 1)
		2417: Xmm	constructor(x64_pshuflw, [2416, 2415], 2)
		2418: InstOutput	constructor(output_xmm, [2417], 3)
		2419: Option(u8)	extractor(pshufhw_lhs_imm, 2393)
		2420: u8	match_some(2419)
		2421: Xmm	constructor(x64_pshufhw, [2411, 2420], 2)
		2422: InstOutput	constructor(output_xmm, [2421], 3)
		2423: Option(u8)	extractor(pshufhw_rhs_imm, 2393)
		2424: u8	match_some(2423)
		2425: Xmm	constructor(x64_pshufhw, [2416, 2424], 2)
		2426: InstOutput	constructor(output_xmm, [2425], 3)
		2427: Option(u8)	extractor(pshufd_lhs_imm, 2393)
		2428: u8	match_some(2427)
		2429: Xmm	constructor(x64_pshufd, [2411, 2428], 2)
		2430: InstOutput	constructor(output_xmm, [2429], 3)
		2431: Option(u8)	extractor(pshufd_rhs_imm, 2393)
		2432: u8	match_some(2431)
		2433: Xmm	constructor(x64_pshufd, [2416, 2432], 2)
		2434: InstOutput	constructor(output_xmm, [2433], 3)
		2435: Option(u128)	extractor(u128_from_immediate, 2393)
		2436: u128	match_some(2435)
		2437: Xmm	constructor(x64_punpckhbw, [2399, 2400], 3)
		2438: InstOutput	constructor(output_xmm, [2437], 4)
		2439: Xmm	constructor(x64_punpcklbw, [2399, 2400], 3)
		2440: InstOutput	constructor(output_xmm, [2439], 4)
		2441: Xmm	constructor(x64_punpckhwd, [2399, 2400], 3)
		2442: InstOutput	constructor(output_xmm, [2441], 4)
		2443: Xmm	constructor(x64_punpcklwd, [2399, 2400], 3)
		2444: InstOutput	constructor(output_xmm, [2443], 4)
		2445: Xmm	constructor(x64_punpckhdq, [2399, 2400], 3)
		2446: InstOutput	constructor(output_xmm, [2445], 4)
		2447: Xmm	constructor(x64_punpckldq, [2399, 2400], 3)
		2448: InstOutput	constructor(output_xmm, [2447], 4)
		2449: Xmm	constructor(x64_punpckhqdq, [2399, 2400], 3)
		2450: InstOutput	constructor(output_xmm, [2449], 4)
		2451: Xmm	constructor(x64_punpcklqdq, [2399, 2400], 3)
		2452: InstOutput	constructor(output_xmm, [2451], 4)
		2453: Xmm	constructor(x64_pshufb, [2399, 2211], 4)
		2454: InstOutput	constructor(output_xmm, [2453], 5)
		2455: Option(u8)	extractor(shufps_imm, 2393)
		2456: u8	match_some(2455)
		2457: Xmm	constructor(x64_shufps, [2399, 2400, 2456], 3)
		2458: InstOutput	constructor(output_xmm, [2457], 4)
		2459: Option(u8)	extractor(shufps_rev_imm, 2393)
		2460: u8	match_some(2459)
		2461: Xmm	constructor(x64_shufps, [2405, 2406, 2460], 3)
		2462: InstOutput	constructor(output_xmm, [2461], 4)
		2463: Option(VecMask)	extractor(vec_mask_from_immediate, 2393)
		2464: VecMask	match_some(2463)
		2465: VCodeConstant	constructor(shuffle_0_31_mask, [2464], 2)
		2466: XmmMem	constructor(const_to_xmm_mem, [2465], 3)
		2467: Xmm	constructor(x64_pshufb, [2399, 2466], 4)
		2468: InstOutput	constructor(output_xmm, [2467], 5)
		2469: Option((VCodeConstant, VCodeConstant))	extractor(perm_from_mask_with_zeros, 2464)
		2470: (VCodeConstant, VCodeConstant)	match_some(2469)
		2471: VCodeConstant	match_tuple(2470, 0)
		2472: VCodeConstant	match_tuple(2470, 1)
		2473: bool	constructor(use_avx512vbmi, [], 0)
		2474: Xmm	constructor(x64_xmm_load_const, [278, 2471], 1)
		2475: Xmm	constructor(put_in_xmm, [2395], 2)
		2476: XmmMem	constructor(put_in_xmm_mem, [2396], 3)
		2477: Xmm	constructor(x64_vpermi2b, [2474, 2475, 2476], 4)
		2478: XmmMem	constructor(const_to_xmm_mem, [2472], 5)
		2479: Xmm	constructor(x64_andps, [2477, 2478], 6)
		2480: InstOutput	constructor(output_xmm, [2479], 7)
		2481: VCodeConstant	constructor(perm_from_mask, [2464], 1)
		2482: Xmm	constructor(x64_xmm_load_const, [278, 2481], 2)
		2483: Xmm	constructor(put_in_xmm, [2395], 3)
		2484: XmmMem	constructor(put_in_xmm_mem, [2396], 4)
		2485: Xmm	constructor(x64_vpermi2b, [2482, 2483, 2484], 5)
		2486: InstOutput	constructor(output_xmm, [2485], 6)
		2487: VCodeConstant	constructor(shuffle_0_15_mask, [2464], 2)
		2488: RegMem	constructor(const_to_reg_mem, [2487], 3)
		2489: Xmm	constructor(lower_pshufb, [2399, 2488], 4)
		2490: Xmm	constructor(put_in_xmm, [2396], 5)
		2491: VCodeConstant	constructor(shuffle_16_31_mask, [2464], 6)
		2492: RegMem	constructor(const_to_reg_mem, [2491], 7)
		2493: Xmm	constructor(lower_pshufb, [2490, 2492], 8)
		2494: XmmMem	constructor(xmm_to_xmm_mem, [2493], 9)
		2495: Xmm	constructor(x64_por, [2489, 2494], 10)
		2496: InstOutput	constructor(output_xmm, [2495], 11)
		2497: u128	const_int(149457353314294540815286102087678586992, u128)
		2498: VCodeConstant	constructor(emit_u128_le_const, [2497], 2)
		2499: XmmMem	constructor(const_to_xmm_mem, [2498], 3)
		2500: Xmm	constructor(x64_paddusb, [1369, 2499], 4)
		2501: Reg	constructor(xmm_to_reg, [2500], 6)
		2502: XmmMem	constructor(xmm_to_reg_mem, [2501], 7)
		2503: RegMem	constructor(xmm_mem_to_reg_mem, [2502], 0)
		2504: Xmm	constructor(lower_pshufb, [343, 2503], 8)
		2505: InstOutput	constructor(output_xmm, [2504], 9)
		2506: Xmm	constructor(x64_pshufb, [68, 69], 3)
		2507: InstOutput	constructor(output_xmm, [2506], 4)
		2508: Opcode	match_variant(6, InstructionData::BinaryImm8, opcode)
		2509: Value	match_variant(6, InstructionData::BinaryImm8, arg)
		2510: Uimm8	match_variant(6, InstructionData::BinaryImm8, imm)
		2511: InstOutput	constructor(output_value, [2509], 1)
		2512: Type	extractor(value_type, 2509)
		2513: u8	extractor(u8_from_uimm8, 2510)
		2514: XmmMem	constructor(put_in_xmm_mem, [2509], 1)
		2515: Xmm	constructor(x64_pshufd, [2514, 2513], 2)
		2516: InstOutput	constructor(output_xmm, [2515], 3)
		2517: Xmm	constructor(x64_pshufd, [2514, 1565], 2)
		2518: InstOutput	constructor(output_xmm, [2517], 3)
		2519: Xmm	constructor(put_in_xmm, [2509], 1)
		2520: Gpr	constructor(x64_pextrb, [2519, 2513], 2)
		2521: InstOutput	constructor(output_gpr, [2520], 3)
		2522: u8	constructor(u8_and, [2513, 839], 0)
		2523: u8	constructor(u8_shr, [2513, 839], 0)
		2524: Gpr	constructor(x64_pextrw, [2519, 2523], 2)
		2525: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [1324], 3)
		2526: Gpr	constructor(x64_shr, [1323, 2524, 2525], 4)
		2527: InstOutput	constructor(output_gpr, [2526], 5)
		2528: InstOutput	constructor(output_gpr, [2524], 3)
		2529: Gpr	constructor(x64_pextrw, [2519, 2513], 2)
		2530: InstOutput	constructor(output_gpr, [2529], 3)
		2531: Gpr	constructor(x64_pextrd, [2519, 2513], 2)
		2532: InstOutput	constructor(output_gpr, [2531], 3)
		2533: Gpr	constructor(x64_movd_to_gpr, [2519], 2)
		2534: InstOutput	constructor(output_gpr, [2533], 3)
		2535: Gpr	constructor(x64_movd_to_gpr, [2515], 3)
		2536: InstOutput	constructor(output_gpr, [2535], 4)
		2537: Gpr	constructor(x64_pextrq, [2519, 2513], 2)
		2538: InstOutput	constructor(output_gpr, [2537], 3)
		2539: Gpr	constructor(x64_movq_to_gpr, [2519], 2)
		2540: InstOutput	constructor(output_gpr, [2539], 3)
		2541: Xmm	constructor(x64_pshufd, [2514, 2195], 2)
		2542: Gpr	constructor(x64_movq_to_gpr, [2541], 3)
		2543: InstOutput	constructor(output_gpr, [2542], 4)
		2544: Xmm	constructor(bitcast_gpr_to_xmm, [655, 382], 2)
		2545: InstOutput	constructor(output_xmm, [2544], 3)
		2546: Option(SinkableLoad)	extractor(sinkable_load, 381)
		2547: SinkableLoad	match_some(2546)
		2548: Option(Type)	extractor(ty_32, 655)
		2549: Type	match_some(2548)
		2550: SyntheticAmode	constructor(sink_load, [2547], 1)
		2551: Xmm	constructor(x64_movss_load, [2550], 2)
		2552: InstOutput	constructor(output_xmm, [2551], 3)
		2553: Option(Type)	extractor(ty_64, 655)
		2554: Type	match_some(2553)
		2555: Xmm	constructor(x64_movsd_load, [2550], 2)
		2556: InstOutput	constructor(output_xmm, [2555], 3)
		2557: GprMem	constructor(put_in_gpr_mem, [381], 1)
		2558: Xmm	constructor(x64_movd_to_xmm, [2557], 2)
		2559: XmmMem	constructor(xmm_to_xmm_mem, [2558], 3)
		2560: Xmm	constructor(x64_punpcklbw, [2558, 2559], 4)
		2561: XmmMem	constructor(xmm_to_xmm_mem, [2560], 5)
		2562: u8	const_int(0, u8)
		2563: Xmm	constructor(x64_pshuflw, [2561, 2562], 6)
		2564: XmmMem	constructor(xmm_to_xmm_mem, [2563], 7)
		2565: Xmm	constructor(x64_pshufd, [2564, 2562], 8)
		2566: InstOutput	constructor(output_xmm, [2565], 9)
		2567: Xmm	constructor(bitcast_gpr_to_xmm, [773, 382], 2)
		2568: Xmm	constructor(xmm_zero, [278], 3)
		2569: XmmMem	constructor(xmm_to_xmm_mem, [2568], 4)
		2570: Xmm	constructor(x64_pshufb, [2567, 2569], 5)
		2571: InstOutput	constructor(output_xmm, [2570], 6)
		2572: bool	constructor(use_avx2, [], 0)
		2573: XmmMem	constructor(xmm_to_xmm_mem, [2567], 3)
		2574: Xmm	constructor(x64_vpbroadcastb, [2573], 4)
		2575: InstOutput	constructor(output_xmm, [2574], 5)
		2576: Option(SinkableLoad)	extractor(sinkable_load_exact, 381)
		2577: SinkableLoad	match_some(2576)
		2578: GprMem	constructor(sink_load_to_gpr_mem, [2577], 2)
		2579: Xmm	constructor(x64_pinsrb, [2387, 2578, 2562], 3)
		2580: Xmm	constructor(x64_pshufb, [2579, 1078], 6)
		2581: InstOutput	constructor(output_xmm, [2580], 7)
		2582: XmmMem	constructor(sink_load_to_xmm_mem, [2577], 1)
		2583: Xmm	constructor(x64_vpbroadcastb, [2582], 2)
		2584: InstOutput	constructor(output_xmm, [2583], 3)
		2585: Xmm	constructor(x64_pshuflw, [2573, 2562], 4)
		2586: XmmMem	constructor(xmm_to_xmm_mem, [2585], 5)
		2587: Xmm	constructor(x64_pshufd, [2586, 2562], 6)
		2588: InstOutput	constructor(output_xmm, [2587], 7)
		2589: Xmm	constructor(x64_vpbroadcastw, [2573], 4)
		2590: InstOutput	constructor(output_xmm, [2589], 5)
		2591: Xmm	constructor(x64_pinsrw, [2387, 2578, 2562], 3)
		2592: XmmMem	constructor(xmm_to_xmm_mem, [2591], 4)
		2593: Xmm	constructor(x64_pshuflw, [2592, 2562], 5)
		2594: XmmMem	constructor(xmm_to_xmm_mem, [2593], 6)
		2595: Xmm	constructor(x64_pshufd, [2594, 2562], 7)
		2596: InstOutput	constructor(output_xmm, [2595], 8)
		2597: Xmm	constructor(x64_vpbroadcastw, [2582], 2)
		2598: InstOutput	constructor(output_xmm, [2597], 3)
		2599: Xmm	constructor(x64_pshufd, [2573, 2562], 4)
		2600: InstOutput	constructor(output_xmm, [2599], 5)
		2601: Xmm	constructor(x64_vpbroadcastd, [2573], 4)
		2602: InstOutput	constructor(output_xmm, [2601], 5)
		2603: Xmm	constructor(put_in_xmm, [381], 2)
		2604: Xmm	constructor(x64_shufps, [2603, 397, 2562], 4)
		2605: InstOutput	constructor(output_xmm, [2604], 5)
		2606: Xmm	constructor(x64_vbroadcastss, [541], 2)
		2607: InstOutput	constructor(output_xmm, [2606], 3)
		2608: XmmMem	constructor(xmm_to_xmm_mem, [2551], 3)
		2609: Xmm	constructor(x64_shufps, [2551, 2608, 2562], 4)
		2610: InstOutput	constructor(output_xmm, [2609], 5)
		2611: bool	constructor(use_avx, [], 0)
		2612: XmmMem	constructor(sink_load_to_xmm_mem, [2547], 1)
		2613: Xmm	constructor(x64_vbroadcastss, [2612], 2)
		2614: InstOutput	constructor(output_xmm, [2613], 3)
		2615: Xmm	constructor(bitcast_gpr_to_xmm, [12, 382], 2)
		2616: XmmMem	constructor(xmm_to_xmm_mem, [2615], 3)
		2617: u8	const_int(68, u8)
		2618: Xmm	constructor(x64_pshufd, [2616, 2617], 4)
		2619: InstOutput	constructor(output_xmm, [2618], 5)
		2620: Xmm	constructor(x64_pshufd, [541, 2617], 2)
		2621: InstOutput	constructor(output_xmm, [2620], 3)
		2622: Xmm	constructor(x64_movddup, [2612], 2)
		2623: InstOutput	constructor(output_xmm, [2622], 3)
		2624: ProducesFlags	constructor(x64_ptest, [544, 1436], 3)
		2625: ConsumesFlags	constructor(x64_setcc, [1167], 4)
		2626: ValueRegs	constructor(with_flags, [2624, 2625], 5)
		2627: InstOutput	constructor(output, [2626], 6)
		2628: Xmm	constructor(x64_pcmpeqb, [544, 2211], 4)
		2629: OperandSize	make_variant(OperandSize::Size32, [])
		2630: Gpr	constructor(x64_pmovmskb, [2629, 2628], 5)
		2631: u32	const_int(65535, u32)
		2632: ProducesFlags	constructor(x64_cmp_imm, [2629, 2630, 2631], 6)
		2633: ConsumesFlags	constructor(x64_setcc, [1167], 7)
		2634: ValueRegs	constructor(with_flags, [2632, 2633], 8)
		2635: InstOutput	constructor(output, [2634], 9)
		2636: Xmm	constructor(xmm_zero, [655], 2)
		2637: Type	constructor(vec_int_type, [655], 3)
		2638: XmmMem	constructor(xmm_to_xmm_mem, [2636], 4)
		2639: Xmm	constructor(x64_pcmpeq, [2637, 544, 2638], 5)
		2640: XmmMem	constructor(xmm_to_xmm_mem, [2639], 6)
		2641: ProducesFlags	constructor(x64_ptest, [2639, 2640], 7)
		2642: ConsumesFlags	constructor(x64_setcc, [1171], 8)
		2643: ValueRegs	constructor(with_flags, [2641, 2642], 9)
		2644: InstOutput	constructor(output, [2643], 10)
		2645: Type	constructor(vec_int_type, [655], 1)
		2646: Xmm	constructor(xmm_zero, [655], 3)
		2647: XmmMem	constructor(xmm_to_xmm_mem, [2646], 4)
		2648: Xmm	constructor(x64_pcmpeq, [2645, 2603, 2647], 5)
		2649: Gpr	constructor(x64_pmovmskb, [2629, 2648], 6)
		2650: GprMemImm	constructor(gpr_to_gpr_mem_imm, [2649], 7)
		2651: ProducesFlags	constructor(x64_test, [2629, 2649, 2650], 8)
		2652: ConsumesFlags	constructor(x64_setcc, [1171], 9)
		2653: ValueRegs	constructor(with_flags, [2651, 2652], 10)
		2654: InstOutput	constructor(output, [2653], 11)
		2655: Option((u32, u32))	extractor(multi_lane, 655)
		2656: (u32, u32)	match_some(2655)
		2657: u32	match_tuple(2656, 0)
		2658: u32	match_tuple(2656, 1)
		2659: Gpr	constructor(x64_pmovmskb, [2629, 544], 2)
		2660: InstOutput	constructor(output_gpr, [2659], 3)
		2661: Gpr	constructor(x64_movmskps, [2629, 544], 2)
		2662: InstOutput	constructor(output_gpr, [2661], 3)
		2663: Gpr	constructor(x64_movmskpd, [2629, 544], 2)
		2664: InstOutput	constructor(output_gpr, [2663], 3)
		2665: Xmm	constructor(x64_packsswb, [544, 1436], 3)
		2666: Gpr	constructor(x64_pmovmskb, [2629, 2665], 4)
		2667: Gpr	constructor(x64_shr, [12, 2666, 2334], 6)
		2668: InstOutput	constructor(output_gpr, [2667], 7)
		2669: Reg	constructor(put_in_reg, [39], 1)
		2670: Reg	constructor(put_in_reg, [40], 2)
		2671: ValueRegs	constructor(value_regs, [2669, 2670], 3)
		2672: InstOutput	constructor(output, [2671], 4)
		2673: Reg	constructor(value_regs_get, [385, 79], 2)
		2674: Reg	constructor(value_regs_get, [385, 81], 3)
		2675: ValueRegs	constructor(value_reg, [2673], 4)
		2676: ValueRegs	constructor(value_reg, [2674], 5)
		2677: InstOutput	constructor(output_pair, [2675, 2676], 6)
		2678: TlsModel	extractor(tls_model, 3)
		2679: Gpr	constructor(elf_tls_get_addr, [1800], 1)
		2680: InstOutput	constructor(output_gpr, [2679], 2)
		2681: Gpr	constructor(macho_tls_get_addr, [1800], 1)
		2682: InstOutput	constructor(output_gpr, [2681], 2)
		2683: Gpr	constructor(coff_tls_get_addr, [1800], 1)
		2684: InstOutput	constructor(output_gpr, [2683], 2)
		2685: VCodeConstant	constructor(emit_u128_le_const, [2124], 3)
		2686: XmmMem	constructor(const_to_xmm_mem, [2685], 4)
		2687: Xmm	constructor(x64_pmulhrsw, [68, 462], 6)
		2688: Xmm	constructor(x64_pcmpeqw, [2687, 2686], 7)
		2689: XmmMem	constructor(xmm_to_xmm_mem, [2688], 8)
		2690: Xmm	constructor(x64_pxor, [2687, 2689], 9)
		2691: InstOutput	constructor(output_xmm, [2690], 10)
		2692: Xmm	constructor(x64_pmullw, [68, 2101], 4)
		2693: Xmm	constructor(x64_pmulhw, [68, 462], 6)
		2694: XmmMem	constructor(xmm_to_xmm_mem, [2693], 7)
		2695: Xmm	constructor(x64_punpcklwd, [2692, 2694], 8)
		2696: XmmMem	constructor(xmm_to_xmm_mem, [2693], 9)
		2697: Xmm	constructor(x64_punpckhwd, [2692, 2696], 10)
		2698: u128	const_int(1298074214935938362106650120175616, u128)
		2699: VCodeConstant	constructor(emit_u128_le_const, [2698], 11)
		2700: XmmMem	constructor(const_to_xmm_mem, [2699], 12)
		2701: Xmm	constructor(x64_movdqu_load, [2700], 13)
		2702: XmmMem	constructor(xmm_to_xmm_mem, [2701], 14)
		2703: Xmm	constructor(x64_paddd, [2695, 2702], 15)
		2704: XmmMem	constructor(xmm_to_xmm_mem, [2701], 16)
		2705: Xmm	constructor(x64_paddd, [2697, 2704], 17)
		2706: u32	const_int(15, u32)
		2707: XmmMemImm	constructor(xmi_imm, [2706], 18)
		2708: Xmm	constructor(x64_psrad, [2703, 2707], 19)
		2709: XmmMemImm	constructor(xmi_imm, [2706], 20)
		2710: Xmm	constructor(x64_psrad, [2705, 2709], 21)
		2711: XmmMem	constructor(xmm_to_xmm_mem, [2710], 22)
		2712: Xmm	constructor(x64_packssdw, [2708, 2711], 23)
		2713: InstOutput	constructor(output_xmm, [2712], 24)
		2714: Xmm	constructor(x64_pmulhrsw, [68, 69], 3)
		2715: InstOutput	constructor(output_xmm, [2714], 4)
		2716: XmmMem	constructor(xmm_to_xmm_mem, [1917], 3)
		2717: Xmm	constructor(x64_maxpd, [185, 2716], 4)
		2718: u128	const_int(87645970972029204748118407510518398976, u128)
		2719: VCodeConstant	constructor(emit_u128_le_const, [2718], 5)
		2720: XmmMem	constructor(const_to_xmm_mem, [2719], 6)
		2721: Xmm	constructor(x64_minpd, [2717, 2720], 7)
		2722: Reg	constructor(xmm_to_reg, [2721], 8)
		2723: XmmMem	constructor(xmm_to_reg_mem, [2722], 9)
		2724: RegMem	constructor(xmm_mem_to_reg_mem, [2723], 0)
		2725: Xmm	constructor(x64_round, [1426, 2724, 2298], 10)
		2726: VCodeConstant	constructor(emit_u128_le_const, [1952], 11)
		2727: XmmMem	constructor(const_to_xmm_mem, [2726], 12)
		2728: Xmm	constructor(x64_addpd, [2725, 2727], 13)
		2729: XmmMem	constructor(xmm_to_xmm_mem, [1917], 14)
		2730: Xmm	constructor(x64_shufps, [2728, 2729, 2102], 15)
		2731: InstOutput	constructor(output_xmm, [2730], 16)
		2732: Reg	constructor(invalid_reg, [], 1)
		2733: InstOutput	constructor(output_reg, [2732], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 15
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::UnaryImm)
				7:	variant(Opcode::Iconst)
			]
			prio = 0
			result = 11
			impure = [10, 11]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 20
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::UnaryImm)
				7:	variant(Opcode::Iconst)
			]
			prio = 1
			result = 17
			impure = [13, 15, 16, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 27
			constraints = [
				6:	variant(InstructionData::UnaryIeee32)
				18:	variant(Opcode::F32const)
			]
			prio = 0
			result = 24
			impure = [23, 24]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 32
			constraints = [
				6:	variant(InstructionData::UnaryIeee64)
				25:	variant(Opcode::F64const)
			]
			prio = 0
			result = 30
			impure = [29, 30]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 37
			constraints = [
				1:	some
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::Null)
			]
			prio = 0
			result = 33
			impure = [32, 33]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 45
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				34:	some
				36:	variant(Opcode::Iadd)
			]
			prio = -6
			result = 44
			impure = [41, 42, 43, 44]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 56
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				45:	some
			]
			prio = -5
			result = 52
			impure = [48, 49, 50, 51, 52]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 62
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				53:	some
			]
			prio = -4
			result = 57
			impure = [41, 55, 56, 57]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 65
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				58:	some
			]
			prio = -3
			result = 63
			impure = [60, 61, 62, 63]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 71
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 71
			impure = [68, 69, 70, 71]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 75
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 73
			impure = [68, 69, 72, 73]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 79
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
			]
			prio = 0
			result = 75
			impure = [68, 69, 74, 75]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 83
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
			]
			prio = 0
			result = 77
			impure = [68, 69, 76, 77]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 88
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iadd)
			]
			prio = 1
			result = 91
			impure = [78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 137
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UaddOverflow)
				93:	some
			]
			prio = 1
			result = 97
			impure = [41, 42, 97]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 141
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UaddOverflow)
				92:	const_prim(I128)
			]
			prio = 0
			result = 99
			impure = [99]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 146
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SaddOverflow)
				93:	some
			]
			prio = 1
			result = 101
			impure = [41, 42, 101]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 149
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SaddOverflow)
				92:	const_prim(I128)
			]
			prio = 0
			result = 102
			impure = [102]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 154
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UsubOverflow)
				93:	some
			]
			prio = 1
			result = 104
			impure = [41, 42, 104]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 157
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UsubOverflow)
				92:	const_prim(I128)
			]
			prio = 0
			result = 106
			impure = [106]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 162
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SsubOverflow)
				93:	some
			]
			prio = 1
			result = 107
			impure = [41, 42, 107]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 165
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SsubOverflow)
				92:	const_prim(I128)
			]
			prio = 0
			result = 108
			impure = [108]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 170
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UmulOverflow)
				92:	const_prim(I8)
			]
			prio = 2
			result = 112
			impure = [41, 110, 111, 112]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 173
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UmulOverflow)
				113:	some
			]
			prio = 3
			result = 116
			impure = [41, 110, 115, 116]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 178
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SmulOverflow)
				92:	const_prim(I8)
			]
			prio = 2
			result = 119
			impure = [41, 110, 118, 119]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 181
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SmulOverflow)
				113:	some
			]
			prio = 3
			result = 121
			impure = [41, 110, 120, 121]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 186
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SaddSat)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 123
			impure = [68, 69, 122, 123]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 190
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SaddSat)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 125
			impure = [68, 69, 124, 125]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 196
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UaddSat)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 127
			impure = [68, 69, 126, 127]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 200
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UaddSat)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 129
			impure = [68, 69, 128, 129]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 209
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
			]
			prio = -3
			result = 131
			impure = [41, 42, 130, 131]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 215
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 133
			impure = [68, 69, 132, 133]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 219
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 135
			impure = [68, 69, 134, 135]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 223
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
			]
			prio = 0
			result = 137
			impure = [68, 69, 136, 137]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 227
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
			]
			prio = 0
			result = 139
			impure = [68, 69, 138, 139]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 232
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Isub)
			]
			prio = 1
			result = 143
			impure = [78, 80, 82, 83, 84, 85, 86, 140, 88, 141, 142, 143]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 247
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SsubSat)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 145
			impure = [68, 69, 144, 145]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 251
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SsubSat)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 147
			impure = [68, 69, 146, 147]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 257
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UsubSat)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 149
			impure = [68, 69, 148, 149]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 261
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::UsubSat)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 151
			impure = [68, 69, 150, 151]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 270
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				152:	some
			]
			prio = 0
			result = 155
			impure = [41, 42, 154, 155]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 277
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				58:	some
				152:	some
			]
			prio = 1
			result = 157
			impure = [60, 61, 156, 157]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 281
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				152:	some
				158:	some
			]
			prio = 2
			result = 161
			impure = [60, 160, 161]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 287
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				162:	some
			]
			prio = 5
			result = 165
			impure = [68, 69, 164, 165]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 299
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				64:	some
			]
			prio = 6
			result = 167
			impure = [68, 69, 166, 167]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 316
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
			]
			prio = 7
			result = 170
			impure = [78, 168, 169, 170]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 335
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				64:	some
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::Bnot)
			]
			prio = 8
			result = 179
			impure = [176, 177, 178, 179]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 337
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				64:	some
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::Bnot)
			]
			prio = 9
			result = 187
			impure = [185, 69, 186, 187]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 340
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				152:	some
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::Bnot)
				188:	const_prim(true)
			]
			prio = 10
			result = 192
			impure = [189, 190, 191, 192]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 345
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				152:	some
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::Bnot)
				188:	const_prim(true)
			]
			prio = 11
			result = 195
			impure = [193, 110, 194, 195]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 357
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				45:	some
				188:	const_prim(true)
				196:	some
			]
			equals = [
				39 == 197
			]
			prio = 12
			result = 200
			impure = [198, 199, 200]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 361
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				45:	some
				188:	const_prim(true)
				201:	some
			]
			equals = [
				40 == 202
			]
			prio = 13
			result = 205
			impure = [203, 204, 205]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 368
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				45:	some
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::Ineg)
				188:	const_prim(true)
			]
			equals = [
				184 == 40
			]
			prio = 14
			result = 208
			impure = [206, 207, 208]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 371
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				45:	some
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::Ineg)
				188:	const_prim(true)
			]
			equals = [
				39 == 175
			]
			prio = 15
			result = 210
			impure = [198, 209, 210]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 384
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Band)
				45:	some
				196:	some
				211:	const_prim(true)
				212:	some
				214:	variant(InstructionData::Binary)
				215:	variant(Opcode::Ishl)
				220:	some
				222:	variant(InstructionData::UnaryImm)
				223:	variant(Opcode::Iconst)
				225:	const_int(1)
			]
			prio = 16
			result = 235
			impure = [198, 226, 232, 233, 234, 235]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 394
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
				152:	some
			]
			prio = 0
			result = 237
			impure = [41, 42, 236, 237]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 401
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
				58:	some
				152:	some
			]
			prio = 1
			result = 239
			impure = [60, 61, 238, 239]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 405
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
				152:	some
				158:	some
			]
			prio = 2
			result = 241
			impure = [60, 240, 241]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 411
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
				162:	some
			]
			prio = 5
			result = 243
			impure = [68, 69, 242, 243]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 423
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
				64:	some
			]
			prio = 6
			result = 245
			impure = [68, 69, 244, 245]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 438
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bor)
			]
			prio = 7
			result = 247
			impure = [78, 168, 246, 247]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 446
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				152:	some
			]
			prio = 0
			result = 249
			impure = [41, 42, 248, 249]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 453
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				58:	some
				152:	some
			]
			prio = 1
			result = 251
			impure = [60, 61, 250, 251]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 457
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				152:	some
				158:	some
			]
			prio = 4
			result = 253
			impure = [60, 252, 253]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 463
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				162:	some
			]
			prio = 5
			result = 255
			impure = [68, 69, 254, 255]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 468
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				64:	some
			]
			prio = 6
			result = 257
			impure = [68, 69, 256, 257]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 473
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
			]
			prio = 7
			result = 261
			impure = [78, 80, 82, 83, 84, 85, 86, 258, 88, 259, 260, 261]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 485
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				45:	some
				188:	const_prim(true)
				196:	some
			]
			equals = [
				39 == 197
			]
			prio = 8
			result = 263
			impure = [198, 262, 263]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 489
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Bxor)
				45:	some
				188:	const_prim(true)
				201:	some
			]
			equals = [
				40 == 202
			]
			prio = 9
			result = 265
			impure = [203, 264, 265]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 498
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = -1
			result = 268
			impure = [41, 266, 267, 268]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 537
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 272
			impure = [269, 270, 271, 272]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 549
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 284
			impure = [273, 274, 275, 276, 277, 280, 282, 283, 284]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 594
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 288
			impure = [68, 285, 286, 287, 288]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 597
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 290
			impure = [68, 285, 286, 289, 290]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 600
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ishl)
			]
			prio = 0
			result = 292
			impure = [68, 285, 286, 291, 292]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 607
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = -1
			result = 296
			impure = [294, 266, 295, 296]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 644
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 298
			impure = [269, 270, 297, 298]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 654
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 303
			impure = [273, 274, 275, 299, 300, 301, 302, 303]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 700
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 305
			impure = [68, 285, 286, 304, 305]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 703
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 307
			impure = [68, 285, 286, 306, 307]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 706
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Ushr)
			]
			prio = 0
			result = 309
			impure = [68, 285, 286, 308, 309]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 719
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = -1
			result = 313
			impure = [311, 266, 312, 313]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 756
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = 0
			result = 315
			impure = [269, 270, 314, 315]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 777
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = 0
			result = 325
			impure = [68, 285, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 806
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = 0
			result = 327
			impure = [68, 285, 286, 326, 327]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 809
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = 0
			result = 329
			impure = [68, 285, 286, 328, 329]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 815
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
				171:	some
				173:	variant(InstructionData::UnaryImm)
				330:	variant(Opcode::Iconst)
				332:	const_prim(true)
				333:	const_prim(true)
			]
			prio = 3
			result = 337
			impure = [334, 335, 336, 337]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 820
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
				332:	const_prim(true)
				333:	const_prim(true)
			]
			prio = 2
			result = 348
			impure = [60, 338, 341, 342, 343, 344, 345, 346, 347, 348]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 826
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
				171:	some
				173:	variant(InstructionData::UnaryImm)
				330:	variant(Opcode::Iconst)
				350:	some
			]
			prio = 1
			result = 355
			impure = [68, 354, 355]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 829
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sshr)
			]
			prio = 0
			result = 361
			impure = [68, 356, 358, 359, 360, 361]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 889
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Rotl)
			]
			prio = -1
			result = 363
			impure = [41, 266, 362, 363]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 895
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Rotl)
			]
			prio = 0
			result = 373
			impure = [78, 364, 365, 367, 368, 369, 370, 371, 372, 373]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 910
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Rotr)
			]
			prio = -1
			result = 375
			impure = [41, 266, 374, 375]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 916
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Rotr)
			]
			prio = 0
			result = 379
			impure = [78, 364, 376, 367, 368, 369, 370, 377, 378, 379]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 930
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = -1
			result = 384
			impure = [382, 383, 384]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 933
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = -2
			result = 394
			impure = [385, 386, 387, 388, 389, 390, 391, 392, 393, 394]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 944
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = 0
			result = 399
			impure = [395, 396, 397, 398, 399]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 947
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = 0
			result = 404
			impure = [401, 402, 397, 403, 404]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 950
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = 0
			result = 409
			impure = [406, 407, 397, 408, 409]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 953
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ineg)
			]
			prio = 0
			result = 414
			impure = [411, 412, 397, 413, 414]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 958
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::AvgRound)
				64:	some
				66:	const_int(8)
				67:	const_int(16)
			]
			prio = 0
			result = 416
			impure = [68, 69, 415, 416]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 962
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::AvgRound)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 418
			impure = [68, 69, 417, 418]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 972
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
			]
			prio = -7
			result = 420
			impure = [41, 110, 419, 420]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 973
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				58:	some
			]
			prio = -6
			result = 423
			impure = [60, 421, 422, 423]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 976
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				424:	some
			]
			prio = -5
			result = 427
			impure = [41, 110, 426, 427]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 978
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				58:	some
				424:	some
			]
			prio = -4
			result = 429
			impure = [60, 421, 428, 429]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 982
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				171:	some
				173:	variant(InstructionData::UnaryImm)
				330:	variant(Opcode::Iconst)
				424:	some
				430:	some
			]
			prio = -3
			result = 433
			impure = [198, 432, 433]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 984
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				180:	some
				182:	variant(InstructionData::UnaryImm)
				424:	some
				434:	variant(Opcode::Iconst)
				436:	some
			]
			prio = -2
			result = 439
			impure = [203, 438, 439]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1002
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
			]
			prio = 2
			result = 453
			impure = [78, 80, 82, 83, 84, 85, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1029
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(16)
				67:	const_int(8)
			]
			prio = 0
			result = 455
			impure = [68, 69, 454, 455]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1032
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				456:	const_prim(true)
			]
			prio = 0
			result = 458
			impure = [68, 69, 457, 458]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1039
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
			]
			prio = -1
			result = 475
			impure = [68, 459, 316, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1052
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				332:	const_prim(true)
				476:	const_prim(true)
			]
			prio = 3
			result = 478
			impure = [68, 69, 477, 478]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1077
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
			]
			prio = 0
			result = 495
			impure = [68, 459, 480, 481, 462, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1099
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenHigh)
				497:	some
				499:	const_int(16)
				500:	const_int(8)
				502:	some
				504:	const_int(16)
				505:	const_int(8)
			]
			prio = 1
			result = 513
			impure = [185, 506, 507, 508, 509, 510, 511, 512, 513]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1111
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenHigh)
				456:	const_prim(true)
				497:	some
				499:	const_int(32)
				500:	const_int(4)
				502:	some
				504:	const_int(32)
				505:	const_int(4)
			]
			prio = 1
			result = 521
			impure = [514, 516, 517, 518, 519, 520, 521]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1122
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenLow)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenLow)
				497:	some
				499:	const_int(16)
				500:	const_int(8)
				502:	some
				504:	const_int(16)
				505:	const_int(8)
			]
			prio = 1
			result = 523
			impure = [185, 506, 507, 508, 509, 510, 511, 522, 523]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1134
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenLow)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenLow)
				456:	const_prim(true)
				497:	some
				499:	const_int(32)
				500:	const_int(4)
				502:	some
				504:	const_int(32)
				505:	const_int(4)
			]
			prio = 1
			result = 529
			impure = [514, 525, 517, 526, 527, 528, 529]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1145
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenHigh)
				497:	some
				499:	const_int(16)
				500:	const_int(8)
				502:	some
				504:	const_int(16)
				505:	const_int(8)
			]
			prio = 1
			result = 533
			impure = [185, 506, 507, 508, 509, 530, 531, 532, 533]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1157
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenHigh)
				497:	some
				499:	const_int(32)
				500:	const_int(4)
				502:	some
				504:	const_int(32)
				505:	const_int(4)
			]
			prio = 1
			result = 535
			impure = [514, 516, 517, 518, 519, 534, 535]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1167
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenLow)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenLow)
				497:	some
				499:	const_int(16)
				500:	const_int(8)
				502:	some
				504:	const_int(16)
				505:	const_int(8)
			]
			prio = 1
			result = 537
			impure = [185, 506, 507, 508, 509, 530, 531, 536, 537]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1179
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Imul)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenLow)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenLow)
				497:	some
				499:	const_int(32)
				500:	const_int(4)
				502:	some
				504:	const_int(32)
				505:	const_int(4)
			]
			prio = 1
			result = 539
			impure = [514, 525, 517, 526, 527, 538, 539]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1190
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
				540:	const_prim(true)
			]
			prio = 1
			result = 543
			impure = [541, 542, 543]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1197
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = 0
			result = 550
			impure = [544, 545, 546, 547, 548, 549, 550]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1204
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
				540:	const_prim(true)
			]
			prio = 1
			result = 552
			impure = [541, 551, 552]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1208
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = 0
			result = 557
			impure = [544, 553, 546, 554, 555, 556, 557]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1215
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
				540:	const_prim(true)
			]
			prio = 1
			result = 559
			impure = [541, 558, 559]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1225
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = 0
			result = 567
			impure = [544, 561, 562, 563, 564, 565, 566, 567]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1234
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				332:	const_prim(true)
				333:	const_prim(true)
				380:	variant(Opcode::Iabs)
			]
			prio = 2
			result = 569
			impure = [541, 568, 569]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1243
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
				456:	const_prim(true)
			]
			prio = 1
			result = 576
			impure = [544, 570, 571, 572, 573, 574, 575, 576]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1252
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = 0
			result = 587
			impure = [544, 578, 579, 580, 582, 583, 584, 585, 586, 587]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1261
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = -1
			result = 596
			impure = [382, 588, 589, 590, 592, 593, 594, 595, 596]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1274
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Iabs)
			]
			prio = 0
			result = 614
			impure = [385, 386, 387, 388, 389, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1296
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fabs)
			]
			prio = 0
			result = 619
			impure = [544, 616, 617, 618, 619]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1299
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fabs)
			]
			prio = 0
			result = 624
			impure = [544, 621, 622, 623, 624]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1303
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fabs)
			]
			prio = 0
			result = 630
			impure = [544, 625, 626, 627, 628, 629, 630]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1308
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fabs)
			]
			prio = 0
			result = 634
			impure = [544, 625, 626, 631, 632, 633, 634]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1314
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fneg)
			]
			prio = 0
			result = 639
			impure = [544, 636, 637, 638, 639]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1317
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fneg)
			]
			prio = 0
			result = 644
			impure = [544, 641, 642, 643, 644]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1320
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fneg)
			]
			prio = 0
			result = 649
			impure = [544, 625, 645, 646, 647, 648, 649]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1324
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fneg)
			]
			prio = 0
			result = 654
			impure = [544, 625, 650, 651, 652, 653, 654]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1369
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bmask)
			]
			prio = 0
			result = 657
			impure = [385, 656, 657]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1376
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				152:	some
				380:	variant(Opcode::Bnot)
			]
			prio = -2
			result = 659
			impure = [382, 658, 659]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1391
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bnot)
			]
			prio = 0
			result = 661
			impure = [660, 661]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1396
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				162:	some
				380:	variant(Opcode::Bnot)
			]
			prio = -3
			result = 664
			impure = [544, 625, 662, 663, 664]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1401
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				64:	some
				380:	variant(Opcode::Bnot)
			]
			prio = -1
			result = 666
			impure = [544, 625, 662, 665, 666]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1406
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				64:	some
				667:	variant(Opcode::Bitselect)
			]
			prio = 0
			result = 681
			impure = [673, 674, 675, 676, 677, 678, 679, 680, 681]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1420
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				64:	some
				456:	const_prim(true)
				667:	variant(Opcode::Bitselect)
				682:	some
			]
			prio = 1
			result = 688
			impure = [684, 685, 686, 687, 688]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1442
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
				689:	some
				691:	variant(InstructionData::LoadNoOffset)
				692:	variant(Opcode::Bitcast)
				695:	some
				697:	variant(InstructionData::FloatCompare)
				698:	variant(Opcode::Fcmp)
				700:	variant(FloatCC::LessThan)
			]
			equals = [
				702 == 671
				703 == 672
			]
			prio = 2
			result = 707
			impure = [704, 705, 706, 707]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1444
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
				689:	some
				691:	variant(InstructionData::LoadNoOffset)
				692:	variant(Opcode::Bitcast)
				695:	some
				697:	variant(InstructionData::FloatCompare)
				698:	variant(Opcode::Fcmp)
				700:	variant(FloatCC::LessThan)
			]
			equals = [
				702 == 671
				703 == 672
			]
			prio = 2
			result = 709
			impure = [704, 705, 708, 709]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1447
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
				689:	some
				691:	variant(InstructionData::LoadNoOffset)
				692:	variant(Opcode::Bitcast)
				695:	some
				697:	variant(InstructionData::FloatCompare)
				698:	variant(Opcode::Fcmp)
				700:	variant(FloatCC::LessThan)
			]
			equals = [
				702 == 672
				703 == 671
			]
			prio = 3
			result = 713
			impure = [710, 711, 712, 713]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1449
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
				689:	some
				691:	variant(InstructionData::LoadNoOffset)
				692:	variant(Opcode::Bitcast)
				695:	some
				697:	variant(InstructionData::FloatCompare)
				698:	variant(Opcode::Fcmp)
				700:	variant(FloatCC::LessThan)
			]
			equals = [
				702 == 672
				703 == 671
			]
			prio = 3
			result = 715
			impure = [710, 711, 714, 715]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1454
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
			]
			prio = 3
			result = 723
			impure = [716, 717, 718, 719, 720, 721, 722, 723]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1459
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Bitselect)
				724:	some
			]
			prio = 4
			result = 735
			impure = [726, 727, 728, 729, 730, 731, 732, 733, 734, 735]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1464
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				162:	some
				667:	variant(Opcode::Bitselect)
			]
			prio = 5
			result = 745
			impure = [673, 685, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1472
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Ternary)
				456:	const_prim(true)
				667:	variant(Opcode::X86Blendv)
			]
			prio = 0
			result = 688
			impure = [684, 685, 686, 687, 688]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1477
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Ternary)
				456:	const_prim(true)
				667:	variant(Opcode::X86Blendv)
			]
			prio = 0
			result = 747
			impure = [684, 685, 686, 746, 747]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1482
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Ternary)
				456:	const_prim(true)
				667:	variant(Opcode::X86Blendv)
			]
			prio = 0
			result = 749
			impure = [684, 685, 686, 748, 749]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1489
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I8X16)
			]
			prio = 1
			result = 761
			impure = [758, 759, 760, 761]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1492
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I8X16)
				762:	some
			]
			prio = 2
			result = 766
			impure = [758, 764, 765, 766]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1520
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I8X16)
			]
			prio = 0
			result = 789
			impure = [758, 767, 768, 769, 771, 772, 778, 779, 780, 781, 782, 785, 786, 787, 788, 789]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1538
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I16X8)
			]
			prio = 0
			result = 791
			impure = [758, 759, 790, 791]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1540
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I16X8)
				762:	some
			]
			prio = 1
			result = 793
			impure = [758, 764, 792, 793]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1544
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I32X4)
			]
			prio = 1
			result = 795
			impure = [758, 759, 794, 795]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1548
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I32X4)
				757:	const_int(0)
			]
			prio = 0
			result = 798
			impure = [758, 759, 796, 797, 798]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1553
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I32X4)
				757:	const_int(1)
			]
			prio = 0
			result = 807
			impure = [799, 800, 801, 802, 803, 804, 806, 807]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1560
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I32X4)
				757:	const_int(2)
			]
			prio = 0
			result = 813
			impure = [799, 800, 801, 802, 809, 810, 812, 813]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1567
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I32X4)
				757:	const_int(3)
			]
			prio = 0
			result = 819
			impure = [799, 800, 801, 802, 815, 816, 818, 819]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1573
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I64X2)
			]
			prio = 1
			result = 821
			impure = [758, 759, 820, 821]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1576
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I64X2)
				757:	const_int(0)
			]
			prio = 0
			result = 824
			impure = [758, 759, 822, 823, 824]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1578
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(I64X2)
				757:	const_int(1)
			]
			prio = 0
			result = 827
			impure = [758, 759, 822, 825, 826, 827]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1584
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				757:	const_int(1)
				828:	some
				830:	some
				832:	const_prim(I64X2)
				833:	variant(InstructionData::Unary)
				834:	variant(Opcode::Splat)
			]
			prio = 3
			result = 841
			impure = [836, 837, 838, 840, 841]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1590
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				456:	const_prim(true)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(F32X4)
				842:	some
			]
			prio = 1
			result = 847
			impure = [758, 844, 845, 846, 847]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1593
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(F32X4)
			]
			prio = 0
			result = 850
			impure = [758, 848, 849, 850]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1638
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(F64X2)
				757:	const_int(0)
			]
			prio = 0
			result = 852
			impure = [758, 848, 851, 852]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1646
			constraints = [
				6:	variant(InstructionData::TernaryImm8)
				750:	variant(Opcode::Insertlane)
				756:	const_prim(F64X2)
				757:	const_int(1)
			]
			prio = 0
			result = 855
			impure = [758, 853, 854, 855]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1665
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umin)
			]
			prio = -1
			result = 857
			impure = [856, 857]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1668
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umax)
			]
			prio = -1
			result = 860
			impure = [859, 860]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1671
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smin)
			]
			prio = -1
			result = 863
			impure = [862, 863]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1674
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smax)
			]
			prio = -1
			result = 866
			impure = [865, 866]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1701
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smax)
				867:	some
			]
			prio = 0
			result = 870
			impure = [68, 459, 869, 870]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1721
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smin)
				867:	some
				871:	const_prim(true)
			]
			prio = 1
			result = 873
			impure = [68, 69, 872, 873]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1725
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smin)
				867:	some
			]
			prio = 0
			result = 879
			impure = [68, 459, 316, 874, 318, 875, 464, 876, 877, 878, 879]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1737
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umax)
				867:	some
				880:	const_prim(true)
			]
			prio = 2
			result = 882
			impure = [68, 69, 881, 882]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1743
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umax)
			]
			prio = 1
			result = 886
			impure = [68, 459, 316, 883, 884, 885, 886]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1750
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umax)
				867:	some
			]
			prio = 0
			result = 900
			impure = [68, 459, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1773
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umin)
				867:	some
				901:	const_prim(true)
			]
			prio = 2
			result = 903
			impure = [68, 69, 902, 903]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1779
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umin)
			]
			prio = 1
			result = 906
			impure = [68, 69, 150, 904, 905, 906]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1784
			constraints = [
				1:	some
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umin)
				867:	some
			]
			prio = 0
			result = 913
			impure = [68, 459, 887, 888, 889, 890, 891, 907, 908, 894, 909, 896, 910, 911, 912, 913]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1799
			constraints = [
				6:	variant(InstructionData::Trap)
				914:	variant(Opcode::Trap)
			]
			prio = 0
			result = 917
			impure = [916, 917]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1804
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::IntAddTrap)
				918:	variant(Opcode::UaddOverflowTrap)
			]
			prio = 0
			result = 929
			impure = [924, 925, 926, 927, 928, 929]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1812
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::IntAddTrap)
				918:	variant(Opcode::UaddOverflowTrap)
				930:	some
			]
			prio = 1
			result = 936
			impure = [932, 933, 934, 935, 936]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1818
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::IntAddTrap)
				918:	variant(Opcode::UaddOverflowTrap)
				937:	some
			]
			prio = 2
			result = 942
			impure = [932, 939, 940, 927, 941, 942]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1826
			constraints = [
				6:	variant(InstructionData::Trap)
				914:	variant(Opcode::ResumableTrap)
			]
			prio = 0
			result = 917
			impure = [916, 917]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1832
			constraints = [
				6:	variant(InstructionData::MultiAry)
				943:	variant(Opcode::Return)
			]
			prio = 0
			result = 946
			impure = [946]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1837
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				954:	some
			]
			prio = -2
			result = 958
			impure = [956, 957, 958]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1840
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				953:	const_prim(I128)
			]
			prio = -1
			result = 958
			impure = [956, 957, 958]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1844
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThan)
				953:	const_prim(I64)
				959:	some
				961:	variant(InstructionData::UnaryImm)
				962:	variant(Opcode::Iconst)
				964:	const_int(0)
			]
			prio = 2
			result = 970
			impure = [965, 968, 969, 970]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1848
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThan)
				971:	some
				973:	variant(InstructionData::UnaryImm)
				974:	variant(Opcode::Iconst)
				976:	const_int(0)
				977:	const_prim(I64)
			]
			prio = 2
			result = 980
			impure = [978, 968, 979, 980]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1852
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThanOrEqual)
				971:	some
				973:	variant(InstructionData::UnaryImm)
				974:	variant(Opcode::Iconst)
				976:	const_int(0)
				977:	const_prim(I64)
			]
			prio = 2
			result = 984
			impure = [978, 981, 982, 983, 984]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1856
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThanOrEqual)
				953:	const_prim(I64)
				959:	some
				961:	variant(InstructionData::UnaryImm)
				962:	variant(Opcode::Iconst)
				964:	const_int(0)
			]
			prio = 2
			result = 987
			impure = [965, 985, 982, 986, 987]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1860
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThan)
				953:	const_prim(I32)
				959:	some
				961:	variant(InstructionData::UnaryImm)
				962:	variant(Opcode::Iconst)
				964:	const_int(0)
			]
			prio = 2
			result = 992
			impure = [965, 990, 991, 992]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1864
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThan)
				971:	some
				973:	variant(InstructionData::UnaryImm)
				974:	variant(Opcode::Iconst)
				976:	const_int(0)
				977:	const_prim(I32)
			]
			prio = 2
			result = 994
			impure = [978, 990, 993, 994]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1868
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThanOrEqual)
				971:	some
				973:	variant(InstructionData::UnaryImm)
				974:	variant(Opcode::Iconst)
				976:	const_int(0)
				977:	const_prim(I32)
			]
			prio = 2
			result = 997
			impure = [978, 981, 995, 996, 997]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1872
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThanOrEqual)
				953:	const_prim(I32)
				959:	some
				961:	variant(InstructionData::UnaryImm)
				962:	variant(Opcode::Iconst)
				964:	const_int(0)
			]
			prio = 2
			result = 999
			impure = [965, 985, 995, 998, 999]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1880
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::Equal)
				1000:	some
			]
			prio = 0
			result = 1005
			impure = [1002, 1003, 1004, 1005]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1885
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::NotEqual)
				1000:	some
			]
			prio = 0
			result = 1009
			impure = [1002, 1003, 1004, 1006, 1007, 1008, 1009]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1892
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThan)
				1000:	some
			]
			prio = 0
			result = 1011
			impure = [1002, 1003, 1010, 1011]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1897
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThan)
				1000:	some
			]
			prio = 0
			result = 1015
			impure = [1012, 1013, 1014, 1015]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1904
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedGreaterThan)
				1000:	some
				1016:	const_prim(true)
			]
			prio = 1
			result = 1025
			impure = [1002, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1914
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedGreaterThan)
				1000:	some
			]
			prio = 0
			result = 1035
			impure = [1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1922
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedLessThan)
				1000:	some
				1036:	const_prim(true)
			]
			prio = 1
			result = 1040
			impure = [1002, 1017, 1018, 1037, 1020, 1038, 1022, 1023, 1039, 1040]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1933
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedLessThan)
				1000:	some
			]
			prio = 0
			result = 1043
			impure = [1026, 1027, 1028, 1029, 1030, 1031, 1032, 1041, 1042, 1043]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1942
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThanOrEqual)
				1000:	some
				1044:	const_prim(true)
			]
			prio = 1
			result = 1049
			impure = [1002, 1027, 1045, 1046, 1047, 1048, 1049]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1948
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedGreaterThanOrEqual)
				1000:	some
			]
			prio = 0
			result = 1051
			impure = [1012, 1013, 1014, 1006, 1007, 1050, 1051]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1954
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThanOrEqual)
				1000:	some
				1052:	const_prim(true)
			]
			prio = 1
			result = 1056
			impure = [1002, 1027, 1045, 1053, 1054, 1055, 1056]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1959
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::SignedLessThanOrEqual)
				1000:	some
			]
			prio = 0
			result = 1058
			impure = [1002, 1003, 1010, 1006, 1007, 1057, 1058]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1964
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedGreaterThanOrEqual)
				1000:	some
				1016:	const_prim(true)
			]
			prio = 2
			result = 1062
			impure = [1002, 1027, 1045, 1059, 1060, 1061, 1062]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1970
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedGreaterThanOrEqual)
				953:	const_prim(I16X8)
			]
			prio = 1
			result = 1067
			impure = [1012, 1013, 1063, 1064, 1065, 1066, 1067]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1976
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedGreaterThanOrEqual)
				1000:	some
			]
			prio = 0
			result = 1071
			impure = [1026, 1027, 1028, 1029, 1030, 1031, 1032, 1041, 1042, 1068, 1069, 1070, 1071]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1987
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedLessThanOrEqual)
				1000:	some
				1036:	const_prim(true)
			]
			prio = 2
			result = 1075
			impure = [1002, 1027, 1045, 1072, 1073, 1074, 1075]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1994
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedLessThanOrEqual)
				953:	const_prim(I16X8)
			]
			prio = 1
			result = 1080
			impure = [1002, 1003, 1076, 1077, 1078, 1079, 1080]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2002
			constraints = [
				6:	variant(InstructionData::IntCompare)
				947:	variant(Opcode::Icmp)
				949:	variant(IntCC::UnsignedLessThanOrEqual)
				1000:	some
			]
			prio = 0
			result = 1082
			impure = [1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1068, 1069, 1081, 1082]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2030
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1090:	some
			]
			prio = -1
			result = 1094
			impure = [1092, 1093, 1094]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2037
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::Equal)
				1095:	some
			]
			prio = 0
			result = 1101
			impure = [1097, 1098, 1100, 1101]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2039
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::NotEqual)
				1095:	some
			]
			prio = 0
			result = 1104
			impure = [1097, 1098, 1103, 1104]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2041
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::LessThan)
				1095:	some
			]
			prio = 0
			result = 1107
			impure = [1097, 1098, 1106, 1107]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2043
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::LessThanOrEqual)
				1095:	some
			]
			prio = 0
			result = 1110
			impure = [1097, 1098, 1109, 1110]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2045
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::Ordered)
				1095:	some
			]
			prio = 0
			result = 1113
			impure = [1097, 1098, 1112, 1113]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2047
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::Unordered)
				1095:	some
			]
			prio = 0
			result = 1116
			impure = [1097, 1098, 1115, 1116]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2049
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::UnorderedOrGreaterThan)
				1095:	some
			]
			prio = 0
			result = 1119
			impure = [1097, 1098, 1118, 1119]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2051
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::UnorderedOrGreaterThanOrEqual)
				1095:	some
			]
			prio = 0
			result = 1122
			impure = [1097, 1098, 1121, 1122]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2057
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::GreaterThan)
				1095:	some
			]
			prio = 0
			result = 1126
			impure = [1123, 1124, 1125, 1126]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2059
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::GreaterThanOrEqual)
				1095:	some
			]
			prio = 0
			result = 1128
			impure = [1123, 1124, 1127, 1128]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2061
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::UnorderedOrLessThan)
				1095:	some
			]
			prio = 0
			result = 1130
			impure = [1123, 1124, 1129, 1130]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2063
			constraints = [
				6:	variant(InstructionData::FloatCompare)
				1083:	variant(Opcode::Fcmp)
				1085:	variant(FloatCC::UnorderedOrLessThanOrEqual)
				1095:	some
			]
			prio = 0
			result = 1132
			impure = [1123, 1124, 1131, 1132]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2081
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
			]
			prio = 0
			result = 1145
			impure = [1144, 1145]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2083
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
				1140:	variant(FloatCC::Equal)
			]
			prio = 1
			result = 1148
			impure = [1147, 1148]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2097
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::IntCompare)
				1149:	variant(Opcode::Icmp)
				1156:	some
			]
			prio = 0
			result = 1159
			impure = [1158, 1159]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2103
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1161:	some
			]
			prio = -1
			result = 1170
			impure = [1163, 1164, 1165, 1166, 1168, 1169, 1170]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2110
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1160:	const_prim(I128)
			]
			prio = -2
			result = 1174
			impure = [716, 1172, 1173, 1174]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2121
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
				1140:	variant(FloatCC::LessThan)
			]
			equals = [
				1142 == 671
				1143 == 672
			]
			prio = 2
			result = 1178
			impure = [1175, 1176, 1177, 1178]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2123
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
				1140:	variant(FloatCC::LessThan)
			]
			equals = [
				1142 == 671
				1143 == 672
			]
			prio = 2
			result = 1180
			impure = [1175, 1176, 1179, 1180]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2125
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
				1140:	variant(FloatCC::LessThan)
			]
			equals = [
				1142 == 672
				1143 == 671
			]
			prio = 3
			result = 1184
			impure = [1181, 1182, 1183, 1184]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2127
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Select)
				1133:	some
				1135:	some
				1137:	variant(InstructionData::FloatCompare)
				1138:	variant(Opcode::Fcmp)
				1140:	variant(FloatCC::LessThan)
			]
			equals = [
				1142 == 672
				1143 == 671
			]
			prio = 3
			result = 1186
			impure = [1181, 1182, 1185, 1186]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2136
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				380:	variant(Opcode::Clz)
				1187:	const_prim(true)
			]
			prio = 3
			result = 1189
			impure = [382, 1188, 1189]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2140
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				380:	variant(Opcode::Clz)
			]
			prio = 2
			result = 1191
			impure = [382, 1190, 1191]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2143
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Clz)
				1192:	some
			]
			prio = 1
			result = 1196
			impure = [1194, 1195, 1196]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2148
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Clz)
			]
			prio = 0
			result = 1215
			impure = [385, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2173
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				188:	const_prim(true)
				380:	variant(Opcode::Ctz)
			]
			prio = 3
			result = 1217
			impure = [382, 1216, 1217]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2177
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				380:	variant(Opcode::Ctz)
			]
			prio = 2
			result = 1219
			impure = [382, 1218, 1219]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2180
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ctz)
				1192:	some
			]
			prio = 1
			result = 1221
			impure = [1194, 1220, 1221]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2185
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ctz)
			]
			prio = 0
			result = 1233
			impure = [385, 386, 1222, 1199, 1223, 1224, 1204, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1213, 1232, 1233]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2204
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				380:	variant(Opcode::Popcnt)
				1234:	const_prim(true)
			]
			prio = 4
			result = 1236
			impure = [382, 1235, 1236]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2208
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
				1192:	some
				1234:	const_prim(true)
			]
			prio = 3
			result = 1238
			impure = [1194, 1237, 1238]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2212
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
				1234:	const_prim(true)
			]
			prio = 1
			result = 1246
			impure = [385, 386, 1239, 1199, 1223, 1240, 1241, 1242, 1243, 1244, 1245, 1246]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2218
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				45:	some
				380:	variant(Opcode::Popcnt)
			]
			prio = -1
			result = 1248
			impure = [382, 1247, 1248]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2223
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
				1192:	some
			]
			prio = -2
			result = 1250
			impure = [1194, 1249, 1250]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2228
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
			]
			prio = 0
			result = 1257
			impure = [385, 386, 1251, 1199, 1223, 1252, 1253, 1254, 1255, 1244, 1256, 1257]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2301
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				332:	const_prim(true)
				380:	variant(Opcode::Popcnt)
				1258:	const_prim(true)
			]
			prio = 2
			result = 1260
			impure = [541, 1259, 1260]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2327
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
				540:	const_prim(true)
			]
			prio = 1
			result = 1280
			impure = [1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2343
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Popcnt)
			]
			prio = 0
			result = 1306
			impure = [1282, 1283, 1264, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2357
			constraints = [
				1:	some
				3:	const_prim(I8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bitrev)
			]
			prio = 0
			result = 1308
			impure = [382, 1307, 1308]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2360
			constraints = [
				1:	some
				3:	const_prim(I16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bitrev)
			]
			prio = 0
			result = 1310
			impure = [382, 1309, 1310]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2363
			constraints = [
				1:	some
				3:	const_prim(I32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bitrev)
			]
			prio = 0
			result = 1312
			impure = [382, 1311, 1312]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2366
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bitrev)
			]
			prio = 0
			result = 1314
			impure = [382, 1313, 1314]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2369
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bitrev)
			]
			prio = 0
			result = 1322
			impure = [385, 1197, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2436
			constraints = [
				1:	some
				3:	const_prim(I16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bswap)
			]
			prio = 0
			result = 1327
			impure = [382, 1325, 1326, 1327]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2439
			constraints = [
				1:	some
				3:	const_prim(I32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bswap)
			]
			prio = 0
			result = 1329
			impure = [382, 1328, 1329]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2442
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bswap)
			]
			prio = 0
			result = 1331
			impure = [382, 1330, 1331]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2445
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Bswap)
			]
			prio = 0
			result = 1337
			impure = [385, 1197, 1332, 1333, 1317, 1318, 1334, 1335, 1336, 1337]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2453
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::IsNull)
				655:	const_prim(R64)
			]
			prio = 0
			result = 1342
			impure = [382, 1339, 1340, 1341, 1342]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2461
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::IsInvalid)
				655:	const_prim(R64)
			]
			prio = 0
			result = 1346
			impure = [382, 1344, 1340, 1345, 1346]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2470
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Uextend)
			]
			prio = 0
			result = 1351
			impure = [1347, 1348, 1349, 1350, 1351]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2474
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Uextend)
			]
			prio = 0
			result = 1352
			impure = [1347, 1352]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2479
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Uextend)
				1353:	some
			]
			prio = -1
			result = 1355
			impure = [1194, 1355]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2488
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sextend)
			]
			prio = 0
			result = 1361
			impure = [1356, 968, 1357, 1358, 1359, 1360, 1361]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2494
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sextend)
			]
			prio = 0
			result = 1362
			impure = [1356, 1362]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2499
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sextend)
				1353:	some
			]
			prio = -1
			result = 1364
			impure = [1363, 1364]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2505
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ireduce)
			]
			equals = [
				3 == 655
			]
			prio = 0
			result = 1365
			impure = [1365]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2511
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ireduce)
			]
			prio = 1
			result = 1366
			impure = [385, 386, 1366]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2516
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::Debugtrap)
			]
			prio = 0
			result = 1368
			impure = [1367, 1368]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2521
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::X86Pmaddubsw)
				540:	const_prim(true)
			]
			prio = 0
			result = 1371
			impure = [1369, 177, 1370, 1371]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2527
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
			]
			prio = 0
			result = 1373
			impure = [68, 69, 1372, 1373]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2529
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
			]
			prio = 0
			result = 1375
			impure = [68, 69, 1374, 1375]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2531
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
			]
			prio = 0
			result = 1377
			impure = [68, 69, 1376, 1377]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2533
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
			]
			prio = 0
			result = 1379
			impure = [68, 69, 1378, 1379]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2538
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
				58:	some
			]
			prio = 1
			result = 1382
			impure = [1369, 1380, 1381, 1382]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2540
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
				58:	some
			]
			prio = 1
			result = 1384
			impure = [1369, 1380, 1383, 1384]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2542
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
				58:	some
			]
			prio = 1
			result = 1386
			impure = [1369, 1380, 1385, 1386]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2544
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fadd)
				58:	some
			]
			prio = 1
			result = 1388
			impure = [1369, 1380, 1387, 1388]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2549
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fsub)
			]
			prio = 0
			result = 1390
			impure = [68, 69, 1389, 1390]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2551
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fsub)
			]
			prio = 0
			result = 1392
			impure = [68, 69, 1391, 1392]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2553
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fsub)
			]
			prio = 0
			result = 1394
			impure = [68, 69, 1393, 1394]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2555
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fsub)
			]
			prio = 0
			result = 1396
			impure = [68, 69, 1395, 1396]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2560
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
			]
			prio = 0
			result = 1398
			impure = [68, 69, 1397, 1398]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2562
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
			]
			prio = 0
			result = 1400
			impure = [68, 69, 1399, 1400]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2564
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
			]
			prio = 0
			result = 1402
			impure = [68, 69, 1401, 1402]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2566
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
			]
			prio = 0
			result = 1404
			impure = [68, 69, 1403, 1404]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2571
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
				58:	some
			]
			prio = 1
			result = 1406
			impure = [1369, 1380, 1405, 1406]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2573
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
				58:	some
			]
			prio = 1
			result = 1408
			impure = [1369, 1380, 1407, 1408]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2575
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
				58:	some
			]
			prio = 1
			result = 1410
			impure = [1369, 1380, 1409, 1410]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2577
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmul)
				58:	some
			]
			prio = 1
			result = 1412
			impure = [1369, 1380, 1411, 1412]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2582
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fdiv)
			]
			prio = 0
			result = 1414
			impure = [68, 69, 1413, 1414]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2584
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fdiv)
			]
			prio = 0
			result = 1416
			impure = [68, 69, 1415, 1416]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2586
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fdiv)
			]
			prio = 0
			result = 1418
			impure = [68, 69, 1417, 1418]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2588
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fdiv)
			]
			prio = 0
			result = 1420
			impure = [68, 69, 1419, 1420]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2592
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sqrt)
			]
			prio = 0
			result = 1425
			impure = [1422, 1423, 1424, 1425]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2594
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sqrt)
			]
			prio = 0
			result = 1429
			impure = [1427, 1423, 1428, 1429]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2596
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sqrt)
			]
			prio = 0
			result = 1431
			impure = [541, 1430, 1431]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2598
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Sqrt)
			]
			prio = 0
			result = 1433
			impure = [541, 1432, 1433]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2602
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fpromote)
			]
			prio = 0
			result = 1435
			impure = [1427, 1423, 1434, 1435]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2606
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FvpromoteLow)
			]
			prio = 0
			result = 1438
			impure = [544, 1436, 1437, 1438]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2610
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fdemote)
			]
			prio = 0
			result = 1440
			impure = [1422, 1423, 1439, 1440]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2614
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Fvdemote)
			]
			prio = 0
			result = 1442
			impure = [541, 1441, 1442]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2619
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmin)
			]
			prio = 0
			result = 1444
			impure = [68, 459, 1443, 1444]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2621
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmin)
			]
			prio = 0
			result = 1446
			impure = [68, 459, 1445, 1446]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2636
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmin)
			]
			prio = 0
			result = 1462
			impure = [68, 69, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2679
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmin)
			]
			prio = 0
			result = 1476
			impure = [68, 69, 1463, 1448, 1449, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2691
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmax)
			]
			prio = 0
			result = 1478
			impure = [68, 459, 1477, 1478]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2693
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmax)
			]
			prio = 0
			result = 1480
			impure = [68, 459, 1479, 1480]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2699
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmax)
			]
			prio = 0
			result = 1495
			impure = [68, 69, 1481, 1448, 1449, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2742
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fmax)
			]
			prio = 0
			result = 1510
			impure = [68, 69, 1496, 1448, 1449, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2791
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Fma)
			]
			prio = 0
			result = 1516
			impure = [1512, 1513, 1514, 1515, 1516]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2793
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Fma)
			]
			prio = 0
			result = 1519
			impure = [1512, 1513, 1514, 1518, 1519]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2796
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Fma)
			]
			prio = 0
			result = 1562
			impure = [673, 674, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2820
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Fma)
			]
			prio = 0
			result = 1576
			impure = [673, 674, 1520, 1521, 1522, 1523, 1563, 1564, 1526, 1566, 1567, 1529, 1568, 1569, 1532, 1570, 1571, 1572, 1573, 1574, 1575, 1576]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2836
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::Fma)
				1577:	const_prim(true)
			]
			prio = 1
			result = 1579
			impure = [1578, 1579]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2874
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1353:	some
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Load)
			]
			prio = -4
			result = 1593
			impure = [1589, 1590, 1591, 1592, 1593]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2878
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
				1594:	some
			]
			prio = -1
			result = 1598
			impure = [1596, 1597, 1598]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2883
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Uload8)
			]
			prio = 0
			result = 1602
			impure = [1596, 1600, 1601, 1602]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2885
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Sload8)
			]
			prio = 0
			result = 1604
			impure = [1596, 1600, 1603, 1604]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2887
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Uload16)
			]
			prio = 0
			result = 1607
			impure = [1596, 1600, 1606, 1607]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2889
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Sload16)
			]
			prio = 0
			result = 1609
			impure = [1596, 1600, 1608, 1609]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2891
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Uload32)
			]
			prio = 0
			result = 1612
			impure = [1596, 1600, 1611, 1612]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2893
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1583:	variant(Opcode::Sload32)
			]
			prio = 0
			result = 1614
			impure = [1596, 1600, 1613, 1614]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2900
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
			]
			prio = 0
			result = 1617
			impure = [1596, 1615, 1616, 1617]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2902
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
			]
			prio = 0
			result = 1619
			impure = [1596, 1615, 1618, 1619]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2904
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
			]
			prio = 0
			result = 1621
			impure = [1596, 1615, 1620, 1621]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2906
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
			]
			prio = 0
			result = 1623
			impure = [1596, 1615, 1622, 1623]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2908
			constraints = [
				1:	some
				6:	variant(InstructionData::Load)
				867:	some
				1583:	variant(Opcode::Load)
			]
			prio = -2
			result = 1626
			impure = [1596, 1624, 1625, 1626]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2912
			constraints = [
				1:	some
				3:	const_prim(I128)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Load)
			]
			prio = -3
			result = 1632
			impure = [1596, 1628, 1629, 1630, 1631, 1632]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2922
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Sload8x8)
			]
			prio = 1
			result = 1634
			impure = [1596, 1624, 1633, 1634]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2925
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Uload8x8)
			]
			prio = 1
			result = 1636
			impure = [1596, 1624, 1635, 1636]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2928
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Sload16x4)
			]
			prio = 1
			result = 1638
			impure = [1596, 1624, 1637, 1638]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2931
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Uload16x4)
			]
			prio = 1
			result = 1640
			impure = [1596, 1624, 1639, 1640]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2934
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Sload32x2)
			]
			prio = 1
			result = 1642
			impure = [1596, 1624, 1641, 1642]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2937
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Load)
				456:	const_prim(true)
				1583:	variant(Opcode::Uload32x2)
			]
			prio = 1
			result = 1644
			impure = [1596, 1624, 1643, 1644]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2941
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Sload8x8)
			]
			prio = 0
			result = 1647
			impure = [1596, 1600, 1645, 1646, 1647]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2943
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Uload8x8)
			]
			prio = 0
			result = 1649
			impure = [1596, 1600, 1645, 1648, 1649]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2945
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Sload16x4)
			]
			prio = 0
			result = 1651
			impure = [1596, 1600, 1645, 1650, 1651]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2947
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Uload16x4)
			]
			prio = 0
			result = 1653
			impure = [1596, 1600, 1645, 1652, 1653]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2949
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Sload32x2)
			]
			prio = 0
			result = 1655
			impure = [1596, 1600, 1645, 1654, 1655]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2951
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Load)
				1583:	variant(Opcode::Uload32x2)
			]
			prio = 0
			result = 1657
			impure = [1596, 1600, 1645, 1656, 1657]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2957
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1666:	some
				1667:	variant(RegisterClass::Gpr)
			]
			prio = -2
			result = 1673
			impure = [1669, 1670, 1671, 1672, 1673]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2965
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Istore8)
			]
			prio = 0
			result = 1676
			impure = [1669, 1670, 1671, 1675, 1676]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2968
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Istore16)
			]
			prio = 0
			result = 1678
			impure = [1669, 1670, 1671, 1677, 1678]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2971
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Istore32)
			]
			prio = 0
			result = 1680
			impure = [1669, 1670, 1671, 1679, 1680]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2976
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1686:	some
				1688:	variant(InstructionData::UnaryImm)
				1689:	variant(Opcode::Iconst)
				1691:	some
			]
			prio = 2
			result = 1694
			impure = [1669, 1670, 1693, 1694]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2981
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1665:	const_prim(F32)
			]
			prio = 1
			result = 1697
			impure = [1669, 1670, 1695, 1696, 1697]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2989
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1665:	const_prim(F64)
			]
			prio = 1
			result = 1699
			impure = [1669, 1670, 1695, 1698, 1699]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2997
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1665:	const_prim(F32X4)
			]
			prio = 1
			result = 1701
			impure = [1669, 1670, 1695, 1700, 1701]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3005
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1665:	const_prim(F64X2)
			]
			prio = 1
			result = 1703
			impure = [1669, 1670, 1695, 1702, 1703]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3013
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1704:	some
			]
			prio = -1
			result = 1707
			impure = [1669, 1670, 1695, 1706, 1707]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3021
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1665:	const_prim(I128)
			]
			prio = 0
			result = 1718
			impure = [1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3040
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(F32)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
				1722:	const_int(0)
			]
			prio = 2
			result = 1725
			impure = [1669, 1670, 1723, 1724, 1725]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3046
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(F64)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
				1722:	const_int(0)
			]
			prio = 2
			result = 1727
			impure = [1669, 1670, 1723, 1726, 1727]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3052
			constraints = [
				6:	variant(InstructionData::Store)
				456:	const_prim(true)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(I8)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
			]
			prio = 2
			result = 1729
			impure = [1669, 1670, 1723, 1728, 1729]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3059
			constraints = [
				6:	variant(InstructionData::Store)
				456:	const_prim(true)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(I16)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
			]
			prio = 2
			result = 1731
			impure = [1669, 1670, 1723, 1730, 1731]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3066
			constraints = [
				6:	variant(InstructionData::Store)
				456:	const_prim(true)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(I32)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
			]
			prio = 2
			result = 1733
			impure = [1669, 1670, 1723, 1732, 1733]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3073
			constraints = [
				6:	variant(InstructionData::Store)
				456:	const_prim(true)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1685:	const_prim(I64)
				1688:	variant(InstructionData::BinaryImm8)
				1719:	variant(Opcode::Extractlane)
			]
			prio = 2
			result = 1735
			impure = [1669, 1670, 1723, 1734, 1735]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3084
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Iadd)
				1743:	some
				1745:	some
				1747:	variant(InstructionData::Load)
				1748:	variant(Opcode::Load)
			]
			equals = [
				1749 == 1664
				1750 == 1660
				1751 == 1661
			]
			prio = 3
			result = 1756
			impure = [1752, 1753, 1754, 1755, 1756]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3098
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Iadd)
				1757:	some
				1759:	some
				1761:	variant(InstructionData::Load)
				1762:	variant(Opcode::Load)
			]
			equals = [
				1763 == 1664
				1764 == 1660
				1765 == 1661
			]
			prio = 2
			result = 1770
			impure = [1766, 1767, 1768, 1769, 1770]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3112
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Isub)
				1743:	some
				1745:	some
				1747:	variant(InstructionData::Load)
				1748:	variant(Opcode::Load)
			]
			equals = [
				1749 == 1664
				1750 == 1660
				1751 == 1661
			]
			prio = 2
			result = 1772
			impure = [1752, 1753, 1754, 1771, 1772]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3126
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Band)
				1743:	some
				1745:	some
				1747:	variant(InstructionData::Load)
				1748:	variant(Opcode::Load)
			]
			equals = [
				1749 == 1664
				1750 == 1660
				1751 == 1661
			]
			prio = 3
			result = 1774
			impure = [1752, 1753, 1754, 1773, 1774]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3140
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Band)
				1757:	some
				1759:	some
				1761:	variant(InstructionData::Load)
				1762:	variant(Opcode::Load)
			]
			equals = [
				1763 == 1664
				1764 == 1660
				1765 == 1661
			]
			prio = 2
			result = 1776
			impure = [1766, 1767, 1768, 1775, 1776]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3154
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Bor)
				1743:	some
				1745:	some
				1747:	variant(InstructionData::Load)
				1748:	variant(Opcode::Load)
			]
			equals = [
				1749 == 1664
				1750 == 1660
				1751 == 1661
			]
			prio = 3
			result = 1778
			impure = [1752, 1753, 1754, 1777, 1778]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3168
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Bor)
				1757:	some
				1759:	some
				1761:	variant(InstructionData::Load)
				1762:	variant(Opcode::Load)
			]
			equals = [
				1763 == 1664
				1764 == 1660
				1765 == 1661
			]
			prio = 2
			result = 1780
			impure = [1766, 1767, 1768, 1779, 1780]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3182
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Bxor)
				1743:	some
				1745:	some
				1747:	variant(InstructionData::Load)
				1748:	variant(Opcode::Load)
			]
			equals = [
				1749 == 1664
				1750 == 1660
				1751 == 1661
			]
			prio = 3
			result = 1782
			impure = [1752, 1753, 1754, 1781, 1782]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3196
			constraints = [
				6:	variant(InstructionData::Store)
				1658:	variant(Opcode::Store)
				1681:	some
				1683:	some
				1688:	variant(InstructionData::Binary)
				1736:	some
				1738:	variant(Opcode::Bxor)
				1757:	some
				1759:	some
				1761:	variant(InstructionData::Load)
				1762:	variant(Opcode::Load)
			]
			equals = [
				1763 == 1664
				1764 == 1660
				1765 == 1661
			]
			prio = 2
			result = 1784
			impure = [1766, 1767, 1768, 1783, 1784]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3211
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::Fence)
			]
			prio = 0
			result = 1786
			impure = [1785, 1786]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3216
			constraints = [
				6:	variant(InstructionData::FuncAddr)
				1787:	variant(Opcode::FuncAddr)
			]
			prio = 0
			result = 1795
			impure = [1794, 1795]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3221
			constraints = [
				6:	variant(InstructionData::UnaryGlobalValue)
				1796:	variant(Opcode::SymbolValue)
				1798:	some
			]
			prio = 0
			result = 1804
			impure = [1803, 1804]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3233
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::LoadNoOffset)
				1805:	variant(Opcode::AtomicLoad)
			]
			prio = 1
			result = 1810
			impure = [48, 1808, 1809, 1810]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3235
			constraints = [
				1:	some
				6:	variant(InstructionData::LoadNoOffset)
				1353:	some
				1805:	variant(Opcode::AtomicLoad)
				1811:	some
			]
			prio = 0
			result = 1817
			impure = [1589, 1813, 1814, 1815, 1816, 1817]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3243
			constraints = [
				6:	variant(InstructionData::StoreNoOffset)
				1818:	variant(Opcode::AtomicStore)
				1825:	some
				1827:	some
			]
			prio = 0
			result = 1835
			impure = [48, 1829, 1830, 1831, 1832, 1833, 1834, 1835]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3252
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::AtomicCas)
				1811:	some
				1836:	variant(Opcode::AtomicCas)
			]
			prio = 0
			result = 1849
			impure = [1843, 1844, 1845, 1846, 1847, 1848, 1849]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3268
			constraints = [
				1:	some
				4:	some
				6:	variant(InstructionData::AtomicRmw)
				1811:	some
				1850:	variant(Opcode::AtomicRmw)
			]
			prio = 0
			result = 1862
			impure = [1857, 1813, 1858, 1859, 1860, 1861, 1862]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3274
			constraints = [
				6:	variant(InstructionData::Call)
				1863:	variant(Opcode::Call)
			]
			prio = 0
			result = 1871
			impure = [1871]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3277
			constraints = [
				6:	variant(InstructionData::CallIndirect)
				1872:	variant(Opcode::CallIndirect)
				1876:	some
			]
			prio = 0
			result = 1880
			impure = [1880]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3282
			constraints = [
				6:	variant(InstructionData::Call)
				1863:	variant(Opcode::ReturnCall)
			]
			prio = 0
			result = 1881
			impure = [1881]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3285
			constraints = [
				6:	variant(InstructionData::CallIndirect)
				1872:	variant(Opcode::ReturnCallIndirect)
				1876:	some
			]
			prio = 0
			result = 1882
			impure = [1882]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3290
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::GetFramePointer)
			]
			prio = 0
			result = 1884
			impure = [1883, 1884]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3293
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::GetStackPointer)
			]
			prio = 0
			result = 1886
			impure = [1885, 1886]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3296
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::GetReturnAddress)
			]
			prio = 0
			result = 1890
			impure = [1883, 1888, 1889, 1890]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3360
			constraints = [
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::SelectSpectreGuard)
				689:	some
				691:	variant(InstructionData::IntCompare)
				1891:	variant(Opcode::Icmp)
			]
			prio = 0
			result = 1899
			impure = [1897, 1898, 1899]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3363
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::SelectSpectreGuard)
				1161:	some
			]
			prio = -1
			result = 1170
			impure = [1163, 1164, 1165, 1166, 1168, 1169, 1170]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3368
			constraints = [
				1:	some
				6:	variant(InstructionData::Ternary)
				667:	variant(Opcode::SelectSpectreGuard)
				1160:	const_prim(I128)
			]
			prio = -2
			result = 1174
			impure = [716, 1172, 1173, 1174]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3391
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I8)
			]
			prio = 2
			result = 1903
			impure = [1422, 1900, 1901, 1902, 1903]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3394
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I16)
			]
			prio = 2
			result = 1903
			impure = [1422, 1900, 1901, 1902, 1903]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3397
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				1904:	some
				1906:	some
			]
			prio = 1
			result = 1910
			impure = [1422, 1908, 1909, 1910]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3400
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I8)
			]
			prio = 2
			result = 1912
			impure = [1427, 1900, 1901, 1911, 1912]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3403
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I16)
			]
			prio = 2
			result = 1912
			impure = [1427, 1900, 1901, 1911, 1912]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3406
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				1904:	some
				1906:	some
			]
			prio = 1
			result = 1914
			impure = [1427, 1908, 1913, 1914]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3409
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I32X4)
			]
			prio = 0
			result = 1916
			impure = [541, 1915, 1916]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3415
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				655:	const_prim(I64X2)
			]
			prio = 0
			result = 1927
			impure = [544, 1917, 1918, 1919, 1920, 574, 1921, 1922, 1923, 1924, 1925, 1926, 1927]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3424
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromSint)
				1928:	some
				1930:	variant(InstructionData::Unary)
				1931:	variant(Opcode::SwidenLow)
				1933:	const_prim(I32X4)
			]
			prio = 1
			result = 1936
			impure = [1934, 1935, 1936]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3429
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
				1937:	some
				1939:	some
			]
			prio = 1
			result = 1944
			impure = [1422, 1941, 1942, 1943, 1944]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3432
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
				1937:	some
				1939:	some
			]
			prio = 1
			result = 1946
			impure = [1427, 1941, 1942, 1945, 1946]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3435
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
				655:	const_prim(I64)
			]
			prio = 0
			result = 1948
			impure = [382, 1947, 1948]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3466
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
				655:	const_prim(I64X2)
			]
			prio = -1
			result = 1970
			impure = [1950, 1951, 1953, 1954, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 489, 1965, 1966, 1967, 1968, 1969, 1970]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3481
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
				1928:	some
				1930:	variant(InstructionData::Unary)
				1931:	variant(Opcode::UwidenLow)
				1933:	const_prim(I32X4)
			]
			prio = 1
			result = 1979
			impure = [1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3489
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				332:	const_prim(true)
				333:	const_prim(true)
				380:	variant(Opcode::FcvtFromUint)
			]
			prio = 2
			result = 1981
			impure = [541, 1980, 1981]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3517
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtFromUint)
			]
			prio = 1
			result = 1999
			impure = [544, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3541
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToUint)
				2000:	some
			]
			prio = 0
			result = 2003
			impure = [2002, 2003]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3544
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToUintSat)
				2000:	some
			]
			prio = 0
			result = 2005
			impure = [2004, 2005]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3547
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToSint)
				2000:	some
			]
			prio = 0
			result = 2007
			impure = [2006, 2007]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3550
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToSintSat)
				2000:	some
			]
			prio = 0
			result = 2009
			impure = [2008, 2009]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3554
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToSintSat)
				655:	const_prim(F32X4)
			]
			prio = 1
			result = 2023
			impure = [544, 1436, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3625
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::FcvtToUintSat)
				655:	const_prim(F32X4)
			]
			prio = 1
			result = 2047
			impure = [544, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3672
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::X86Cvtt2dq)
				655:	const_prim(F32X4)
			]
			prio = 0
			result = 2049
			impure = [541, 2048, 2049]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3677
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
			]
			prio = 0
			result = 2073
			impure = [2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3693
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				540:	const_prim(true)
			]
			prio = 1
			result = 2075
			impure = [68, 69, 2074, 2075]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3697
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
			]
			prio = 0
			result = 2098
			impure = [68, 459, 316, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3723
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				540:	const_prim(true)
			]
			prio = 1
			result = 2100
			impure = [68, 69, 2099, 2100]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3727
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
			]
			prio = 0
			result = 2108
			impure = [68, 459, 2101, 2103, 462, 2105, 2106, 2107, 2108]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3739
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenLow)
				496:	const_prim(I8X16)
				540:	const_prim(true)
			]
			equals = [
				184 == 175
			]
			prio = 2
			result = 2114
			impure = [2110, 2111, 2112, 2113, 2114]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3749
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::SwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::SwidenLow)
				496:	const_prim(I16X8)
			]
			equals = [
				184 == 175
			]
			prio = 2
			result = 2120
			impure = [2116, 2117, 2118, 2119, 2120]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3757
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenLow)
				496:	const_prim(I8X16)
				540:	const_prim(true)
			]
			equals = [
				184 == 175
			]
			prio = 2
			result = 2123
			impure = [2110, 2121, 2118, 2122, 2123]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3766
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				171:	some
				173:	variant(InstructionData::Unary)
				174:	variant(Opcode::UwidenHigh)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::UwidenLow)
				496:	const_prim(I16X8)
			]
			equals = [
				184 == 175
			]
			prio = 2
			result = 2135
			impure = [2125, 2126, 2118, 2127, 2128, 2129, 2130, 2132, 2133, 2134, 2135]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3780
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::IaddPairwise)
				171:	some
				173:	variant(InstructionData::Binary)
				180:	some
				182:	variant(InstructionData::Binary)
				2136:	variant(Opcode::Imul)
				2141:	some
				2143:	variant(InstructionData::Unary)
				2144:	variant(Opcode::SwidenLow)
				2146:	some
				2148:	variant(InstructionData::Unary)
				2149:	variant(Opcode::SwidenLow)
				2151:	variant(Opcode::Imul)
				2156:	some
				2158:	variant(InstructionData::Unary)
				2159:	variant(Opcode::SwidenHigh)
				2161:	some
				2163:	variant(InstructionData::Unary)
				2164:	variant(Opcode::SwidenHigh)
			]
			equals = [
				2145 == 2160
				2150 == 2165
			]
			prio = 2
			result = 2169
			impure = [2166, 2167, 2168, 2169]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3789
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenLow)
				456:	const_prim(true)
				655:	const_prim(I8X16)
			]
			prio = 1
			result = 2171
			impure = [541, 2170, 2171]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3792
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenLow)
				456:	const_prim(true)
				655:	const_prim(I16X8)
			]
			prio = 1
			result = 2173
			impure = [541, 2172, 2173]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3795
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenLow)
				456:	const_prim(true)
				655:	const_prim(I32X4)
			]
			prio = 1
			result = 2175
			impure = [541, 2174, 2175]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3799
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenLow)
			]
			prio = 0
			result = 2177
			impure = [544, 2176, 2177]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3822
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				456:	const_prim(true)
				540:	const_prim(true)
				655:	const_prim(I8X16)
			]
			prio = 1
			result = 2181
			impure = [544, 1436, 2178, 2179, 2180, 2181]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3827
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				456:	const_prim(true)
				540:	const_prim(true)
				655:	const_prim(I16X8)
			]
			prio = 1
			result = 2183
			impure = [544, 1436, 2178, 2179, 2182, 2183]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3832
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				456:	const_prim(true)
				655:	const_prim(I32X4)
			]
			prio = 1
			result = 2187
			impure = [541, 2184, 2185, 2186, 2187]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3838
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				655:	const_prim(I8X16)
			]
			prio = 0
			result = 2191
			impure = [544, 1436, 2188, 2189, 2190, 2191]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3841
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				655:	const_prim(I16X8)
			]
			prio = 0
			result = 2194
			impure = [544, 1436, 2192, 1985, 2193, 2194]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3846
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SwidenHigh)
				655:	const_prim(I32X4)
			]
			prio = 0
			result = 2202
			impure = [541, 2196, 2197, 2198, 2199, 2200, 2201, 2202]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3854
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenLow)
				456:	const_prim(true)
				655:	const_prim(I8X16)
			]
			prio = 1
			result = 2204
			impure = [541, 2203, 2204]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3857
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenLow)
				456:	const_prim(true)
				655:	const_prim(I16X8)
			]
			prio = 1
			result = 2206
			impure = [541, 2205, 2206]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3860
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenLow)
				456:	const_prim(true)
				655:	const_prim(I32X4)
			]
			prio = 1
			result = 2208
			impure = [541, 2207, 2208]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3864
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenLow)
			]
			prio = 0
			result = 2210
			impure = [544, 2209, 2210]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3879
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenHigh)
				655:	const_prim(I8X16)
			]
			prio = 0
			result = 2213
			impure = [544, 545, 2211, 2212, 2213]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3881
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenHigh)
				655:	const_prim(I16X8)
			]
			prio = 0
			result = 2215
			impure = [544, 545, 2211, 2214, 2215]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3883
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::UwidenHigh)
				655:	const_prim(I32X4)
			]
			prio = 0
			result = 2217
			impure = [544, 2024, 2025, 2216, 2217]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3888
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Snarrow)
				2218:	const_prim(I16X8)
			]
			prio = 0
			result = 2220
			impure = [68, 69, 2219, 2220]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3891
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Snarrow)
				2218:	const_prim(I32X4)
			]
			prio = 0
			result = 2222
			impure = [68, 69, 2221, 2222]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3900
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Snarrow)
				171:	some
				173:	variant(InstructionData::UnaryConst)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::FcvtToSintSat)
				2223:	some
				2225:	const_prim(I64X2)
				2226:	variant(Opcode::Vconst)
				2228:	some
				2229:	const_int(0)
			]
			prio = 0
			result = 2240
			impure = [185, 2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3924
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Snarrow)
				171:	some
				173:	variant(InstructionData::UnaryConst)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::X86Cvtt2dq)
				2223:	some
				2225:	const_prim(I64X2)
				2226:	variant(Opcode::Vconst)
				2228:	some
				2229:	const_int(0)
			]
			prio = 0
			result = 2242
			impure = [514, 2241, 2242]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3930
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Unarrow)
				2218:	const_prim(I16X8)
			]
			prio = 0
			result = 2244
			impure = [68, 69, 2243, 2244]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3933
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Unarrow)
				456:	const_prim(true)
				2218:	const_prim(I32X4)
			]
			prio = 1
			result = 2246
			impure = [68, 69, 2245, 2246]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3943
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Unarrow)
				2218:	const_prim(I32X4)
			]
			prio = 0
			result = 2252
			impure = [68, 2247, 2248, 2249, 2250, 2251, 2252]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3980
			constraints = [
				1:	some
				3:	const_prim(I32)
				6:	variant(InstructionData::LoadNoOffset)
				1805:	variant(Opcode::Bitcast)
				2253:	const_prim(F32)
			]
			prio = 0
			result = 2256
			impure = [2254, 2255, 2256]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3983
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::LoadNoOffset)
				1805:	variant(Opcode::Bitcast)
				2253:	const_prim(I32)
			]
			prio = 0
			result = 2259
			impure = [2257, 2258, 2259]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3986
			constraints = [
				1:	some
				3:	const_prim(I64)
				6:	variant(InstructionData::LoadNoOffset)
				1805:	variant(Opcode::Bitcast)
				2253:	const_prim(F64)
			]
			prio = 0
			result = 2261
			impure = [2254, 2260, 2261]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3989
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::LoadNoOffset)
				1805:	variant(Opcode::Bitcast)
				2253:	const_prim(I64)
			]
			prio = 0
			result = 2263
			impure = [2257, 2262, 2263]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3993
			constraints = [
				1:	some
				6:	variant(InstructionData::LoadNoOffset)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1805:	variant(Opcode::Bitcast)
				2264:	some
				2265:	variant(RegisterClass::Gpr)
			]
			prio = 1
			result = 2267
			impure = [2267]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4000
			constraints = [
				1:	some
				6:	variant(InstructionData::LoadNoOffset)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1805:	variant(Opcode::Bitcast)
				2264:	some
				2265:	variant(RegisterClass::Gpr)
				2268:	const_prim(true)
				2269:	const_prim(false)
			]
			prio = 2
			result = 2271
			impure = [2257, 2270, 2271]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4005
			constraints = [
				1:	some
				6:	variant(InstructionData::LoadNoOffset)
				1580:	some
				1581:	variant(RegisterClass::Gpr)
				1805:	variant(Opcode::Bitcast)
				2264:	some
				2265:	variant(RegisterClass::Gpr)
				2268:	const_prim(false)
				2269:	const_prim(true)
			]
			prio = 2
			result = 2271
			impure = [2257, 2270, 2271]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4012
			constraints = [
				1:	some
				6:	variant(InstructionData::LoadNoOffset)
				1580:	some
				1581:	variant(RegisterClass::Xmm)
				1805:	variant(Opcode::Bitcast)
				2264:	some
				2265:	variant(RegisterClass::Xmm)
			]
			prio = 3
			result = 2267
			impure = [2267]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4018
			constraints = [
				1:	some
				3:	const_prim(F32)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fcopysign)
				2218:	const_prim(F32)
			]
			prio = 0
			result = 2280
			impure = [2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4024
			constraints = [
				1:	some
				3:	const_prim(F64)
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Fcopysign)
				2218:	const_prim(F64)
			]
			prio = 0
			result = 2287
			impure = [2281, 2282, 2274, 2283, 2276, 2284, 2285, 2286, 2287]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4084
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Ceil)
			]
			prio = 0
			result = 2291
			impure = [2288, 2290, 2291]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4089
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Floor)
			]
			prio = 0
			result = 2294
			impure = [2288, 2293, 2294]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4094
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Nearest)
			]
			prio = 0
			result = 2297
			impure = [2288, 2296, 2297]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4099
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Trunc)
			]
			prio = 0
			result = 2300
			impure = [2288, 2299, 2300]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4104
			constraints = [
				6:	variant(InstructionData::StackLoad)
				2301:	variant(Opcode::StackAddr)
			]
			prio = 0
			result = 2305
			impure = [2304, 2305]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4118
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Udiv)
				2218:	const_prim(I8)
			]
			prio = 2
			result = 2311
			impure = [2306, 356, 2307, 2310, 2311]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4127
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Udiv)
				2312:	some
			]
			prio = 1
			result = 2319
			impure = [41, 15, 2314, 2315, 2316, 2317, 2318, 2319]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4137
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sdiv)
				2218:	const_prim(I8)
			]
			prio = 2
			result = 2327
			impure = [41, 2321, 2322, 2323, 2326, 2327]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4143
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Sdiv)
				2312:	some
			]
			prio = 1
			result = 2333
			impure = [41, 2328, 2329, 2330, 2331, 2332, 2333]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4176
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Urem)
				2218:	const_prim(I8)
			]
			prio = 2
			result = 2336
			impure = [2306, 356, 2307, 2310, 2334, 2335, 2336]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4185
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Urem)
				2312:	some
			]
			prio = 1
			result = 2338
			impure = [41, 15, 2314, 2315, 2316, 2317, 2337, 2338]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4200
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Srem)
				171:	some
				173:	variant(InstructionData::UnaryImm)
				330:	variant(Opcode::Iconst)
				2218:	const_prim(I8)
				2339:	some
			]
			prio = 3
			result = 2346
			impure = [41, 2321, 2341, 2342, 2343, 2344, 2345, 2346]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4209
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Srem)
				171:	some
				173:	variant(InstructionData::UnaryImm)
				330:	variant(Opcode::Iconst)
				2347:	some
			]
			prio = 2
			result = 2354
			impure = [41, 2349, 2350, 2351, 2352, 2353, 2354]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4222
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Srem)
				2218:	const_prim(I8)
			]
			prio = 1
			result = 2358
			impure = [41, 2321, 2355, 2356, 2334, 2357, 2358]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4228
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Srem)
			]
			prio = 0
			result = 2361
			impure = [41, 2349, 2350, 2315, 2359, 2360, 2361]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4239
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umulhi)
				2218:	const_prim(I8)
			]
			prio = 0
			result = 2364
			impure = [41, 110, 419, 2362, 2363, 2364]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4242
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Umulhi)
				2365:	some
			]
			prio = 1
			result = 2369
			impure = [41, 110, 2367, 2368, 2369]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4247
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smulhi)
				2218:	const_prim(I8)
			]
			prio = 0
			result = 2372
			impure = [41, 110, 2370, 2362, 2371, 2372]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4250
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Smulhi)
				2365:	some
			]
			prio = 1
			result = 2375
			impure = [41, 110, 2373, 2374, 2375]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4255
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::GetPinnedReg)
			]
			prio = 0
			result = 2377
			impure = [2376, 2377]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4260
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::SetPinnedReg)
			]
			prio = 0
			result = 2379
			impure = [382, 2378, 2379]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4265
			constraints = [
				1:	some
				6:	variant(InstructionData::UnaryConst)
				2380:	variant(Opcode::Vconst)
			]
			prio = 0
			result = 2384
			impure = [2382, 2383, 2384]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4270
			constraints = [
				1:	some
				6:	variant(InstructionData::UnaryConst)
				2380:	variant(Opcode::Vconst)
				2385:	some
				2386:	const_int(0)
			]
			prio = 1
			result = 2390
			impure = [2387, 2388, 2389, 2390]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4280
			constraints = [
				6:	variant(InstructionData::Shuffle)
				456:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2397:	some
			]
			prio = 14
			result = 2402
			impure = [2399, 2400, 2401, 2402]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4291
			constraints = [
				6:	variant(InstructionData::Shuffle)
				540:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2403:	some
			]
			prio = 13
			result = 2408
			impure = [2405, 2406, 2407, 2408]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4303
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2409:	some
			]
			prio = 12
			result = 2413
			impure = [2411, 2412, 2413]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4305
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2414:	some
			]
			prio = 11
			result = 2418
			impure = [2416, 2417, 2418]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4307
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2419:	some
			]
			prio = 10
			result = 2422
			impure = [2411, 2421, 2422]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4309
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2423:	some
			]
			prio = 9
			result = 2426
			impure = [2416, 2425, 2426]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4326
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2427:	some
			]
			prio = 8
			result = 2430
			impure = [2411, 2429, 2430]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4328
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2431:	some
			]
			prio = 7
			result = 2434
			impure = [2416, 2433, 2434]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4337
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(41284561912683712994304547342093195272)
			]
			prio = 6
			result = 2438
			impure = [2399, 2400, 2437, 2438]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4339
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(30609036675948388650355540050116153344)
			]
			prio = 6
			result = 2440
			impure = [2399, 2400, 2439, 2440]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4343
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(41362142129435743685477327603181816072)
			]
			prio = 6
			result = 2442
			impure = [2399, 2400, 2441, 2442]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4345
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(30686616892700419341528320311204774144)
			]
			prio = 6
			result = 2444
			impure = [2399, 2400, 2443, 2444]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4349
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(41362427188014754909590568856778836232)
			]
			prio = 6
			result = 2446
			impure = [2399, 2400, 2445, 2446]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4351
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(30686901951279430565641561564801794304)
			]
			prio = 6
			result = 2448
			impure = [2399, 2400, 2447, 2448]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4355
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(41362427191743139026172726477975062792)
			]
			prio = 6
			result = 2450
			impure = [2399, 2400, 2449, 2450]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4357
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(30686901955007814682223719185998020864)
			]
			prio = 6
			result = 2452
			impure = [2399, 2400, 2451, 2452]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4365
			constraints = [
				6:	variant(InstructionData::Shuffle)
				540:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2435:	some
				2436:	const_int(0)
			]
			prio = 6
			result = 2454
			impure = [2399, 545, 2211, 2453, 2454]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4379
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2455:	some
			]
			prio = 5
			result = 2458
			impure = [2399, 2400, 2457, 2458]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4381
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2459:	some
			]
			prio = 4
			result = 2462
			impure = [2405, 2406, 2461, 2462]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4394
			constraints = [
				6:	variant(InstructionData::Shuffle)
				540:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2463:	some
			]
			equals = [
				2395 == 2396
			]
			prio = 3
			result = 2468
			impure = [2399, 2465, 2466, 2467, 2468]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4401
			constraints = [
				6:	variant(InstructionData::Shuffle)
				332:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2463:	some
				2469:	some
				2473:	const_prim(true)
			]
			prio = 2
			result = 2480
			impure = [2474, 2475, 2476, 2477, 2478, 2479, 2480]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4408
			constraints = [
				6:	variant(InstructionData::Shuffle)
				332:	const_prim(true)
				2391:	variant(Opcode::Shuffle)
				2463:	some
				2473:	const_prim(true)
			]
			prio = 1
			result = 2486
			impure = [2481, 2482, 2483, 2484, 2485, 2486]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4416
			constraints = [
				6:	variant(InstructionData::Shuffle)
				2391:	variant(Opcode::Shuffle)
				2463:	some
			]
			prio = 0
			result = 2496
			impure = [2399, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4429
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Swizzle)
			]
			prio = 0
			result = 2505
			impure = [1369, 2498, 2499, 2500, 343, 2501, 2502, 2504, 2505]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4435
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::X86Pshufb)
				540:	const_prim(true)
			]
			prio = 0
			result = 2507
			impure = [68, 69, 2506, 2507]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4458
			constraints = [
				1:	some
				6:	variant(InstructionData::BinaryImm8)
				162:	some
				2508:	variant(Opcode::Extractlane)
				2510:	const_int(0)
			]
			prio = 3
			result = 2511
			impure = [2511]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4462
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(F32X4)
			]
			prio = 1
			result = 2516
			impure = [2514, 2515, 2516]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4466
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2510:	const_int(1)
				2512:	const_prim(F64X2)
			]
			prio = 0
			result = 2518
			impure = [2514, 2517, 2518]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4473
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				456:	const_prim(true)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I8X16)
			]
			prio = 2
			result = 2521
			impure = [2519, 2520, 2521]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4477
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I8X16)
				2522:	const_int(1)
			]
			prio = 1
			result = 2527
			impure = [2519, 2524, 2525, 2526, 2527]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4484
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I8X16)
				2522:	const_int(0)
			]
			prio = 0
			result = 2528
			impure = [2519, 2524, 2528]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4489
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I16X8)
			]
			prio = 0
			result = 2530
			impure = [2519, 2529, 2530]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4493
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				456:	const_prim(true)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I32X4)
			]
			prio = 2
			result = 2532
			impure = [2519, 2531, 2532]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4496
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2510:	const_int(0)
				2512:	const_prim(I32X4)
			]
			prio = 1
			result = 2534
			impure = [2519, 2533, 2534]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4498
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I32X4)
			]
			prio = 0
			result = 2536
			impure = [2514, 2515, 2535, 2536]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4502
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				456:	const_prim(true)
				2508:	variant(Opcode::Extractlane)
				2512:	const_prim(I64X2)
			]
			prio = 1
			result = 2538
			impure = [2519, 2537, 2538]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4505
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2510:	const_int(0)
				2512:	const_prim(I64X2)
			]
			prio = 0
			result = 2540
			impure = [2519, 2539, 2540]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4507
			constraints = [
				6:	variant(InstructionData::BinaryImm8)
				2508:	variant(Opcode::Extractlane)
				2510:	const_int(1)
				2512:	const_prim(I64X2)
			]
			prio = 0
			result = 2543
			impure = [2514, 2541, 2542, 2543]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4516
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::ScalarToVector)
				2000:	some
			]
			prio = 1
			result = 1365
			impure = [1365]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4521
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::ScalarToVector)
			]
			prio = 0
			result = 2545
			impure = [382, 2544, 2545]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4526
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::ScalarToVector)
				2546:	some
				2548:	some
			]
			prio = 2
			result = 2552
			impure = [2550, 2551, 2552]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4528
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::ScalarToVector)
				2546:	some
				2553:	some
			]
			prio = 3
			result = 2556
			impure = [2550, 2555, 2556]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4544
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2566
			impure = [2557, 2558, 2559, 2560, 2561, 2563, 2564, 2565, 2566]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4547
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				540:	const_prim(true)
			]
			prio = 1
			result = 2571
			impure = [382, 2567, 2568, 2569, 2570, 2571]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4550
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
			]
			prio = 2
			result = 2575
			impure = [382, 2567, 2573, 2574, 2575]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4553
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				456:	const_prim(true)
				540:	const_prim(true)
				2576:	some
			]
			prio = 3
			result = 2581
			impure = [2387, 2578, 2579, 1077, 1078, 2580, 2581]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4557
			constraints = [
				1:	some
				3:	const_prim(I8X16)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
				2576:	some
			]
			prio = 4
			result = 2584
			impure = [2582, 2583, 2584]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4566
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2588
			impure = [382, 2567, 2573, 2585, 2586, 2587, 2588]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4568
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
			]
			prio = 1
			result = 2590
			impure = [382, 2567, 2573, 2589, 2590]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4571
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2576:	some
			]
			prio = 2
			result = 2596
			impure = [2387, 2578, 2591, 2592, 2593, 2594, 2595, 2596]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4573
			constraints = [
				1:	some
				3:	const_prim(I16X8)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
				2576:	some
			]
			prio = 3
			result = 2598
			impure = [2582, 2597, 2598]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4581
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2600
			impure = [382, 2567, 2573, 2599, 2600]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4583
			constraints = [
				1:	some
				3:	const_prim(I32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
			]
			prio = 1
			result = 2602
			impure = [382, 2567, 2573, 2601, 2602]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4590
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2605
			impure = [544, 2603, 397, 2604, 2605]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4593
			constraints = [
				1:	some
				3:	const_prim(F32X4)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
				2572:	const_prim(true)
			]
			prio = 1
			result = 2607
			impure = [541, 2606, 2607]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4606
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				380:	variant(Opcode::Splat)
				2546:	some
			]
			prio = 5
			result = 2610
			impure = [2550, 2551, 2608, 2609, 2610]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4609
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				64:	some
				66:	const_int(32)
				67:	const_int(4)
				380:	variant(Opcode::Splat)
				2546:	some
				2611:	const_prim(true)
			]
			prio = 6
			result = 2614
			impure = [2612, 2613, 2614]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4616
			constraints = [
				1:	some
				3:	const_prim(I64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2619
			impure = [382, 2615, 2616, 2618, 2619]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4618
			constraints = [
				1:	some
				3:	const_prim(F64X2)
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Splat)
			]
			prio = 0
			result = 2621
			impure = [541, 2620, 2621]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4620
			constraints = [
				1:	some
				6:	variant(InstructionData::Unary)
				64:	some
				66:	const_int(64)
				67:	const_int(2)
				380:	variant(Opcode::Splat)
				540:	const_prim(true)
				2546:	some
			]
			prio = 6
			result = 2623
			impure = [2612, 2622, 2623]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4626
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VanyTrue)
				456:	const_prim(true)
			]
			prio = 1
			result = 2627
			impure = [544, 1436, 2624, 2625, 2626, 2627]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4635
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VanyTrue)
			]
			prio = 0
			result = 2635
			impure = [544, 545, 2211, 2628, 2630, 2632, 2633, 2634, 2635]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4645
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VallTrue)
				456:	const_prim(true)
			]
			prio = 1
			result = 2644
			impure = [544, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4655
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VallTrue)
			]
			prio = 0
			result = 2654
			impure = [2645, 2603, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4672
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VhighBits)
				2655:	some
				2657:	const_int(8)
				2658:	const_int(16)
			]
			prio = 0
			result = 2660
			impure = [544, 2659, 2660]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4675
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VhighBits)
				2655:	some
				2657:	const_int(32)
				2658:	const_int(4)
			]
			prio = 0
			result = 2662
			impure = [544, 2661, 2662]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4678
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VhighBits)
				2655:	some
				2657:	const_int(64)
				2658:	const_int(2)
			]
			prio = 0
			result = 2664
			impure = [544, 2663, 2664]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4687
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::VhighBits)
				2655:	some
				2657:	const_int(16)
				2658:	const_int(8)
			]
			prio = 0
			result = 2668
			impure = [544, 1436, 2665, 2666, 2334, 2667, 2668]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4695
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Iconcat)
				2218:	const_prim(I64)
			]
			prio = 0
			result = 2672
			impure = [2669, 2670, 2671, 2672]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4700
			constraints = [
				6:	variant(InstructionData::Unary)
				380:	variant(Opcode::Isplit)
				655:	const_prim(I128)
			]
			prio = 0
			result = 2677
			impure = [385, 2673, 2674, 2675, 2676, 2677]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4708
			constraints = [
				1:	some
				6:	variant(InstructionData::UnaryGlobalValue)
				1796:	variant(Opcode::TlsValue)
				1798:	some
				2678:	variant(TlsModel::ElfGd)
			]
			prio = 0
			result = 2680
			impure = [2679, 2680]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4711
			constraints = [
				1:	some
				6:	variant(InstructionData::UnaryGlobalValue)
				1796:	variant(Opcode::TlsValue)
				1798:	some
				2678:	variant(TlsModel::Macho)
			]
			prio = 0
			result = 2682
			impure = [2681, 2682]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4714
			constraints = [
				1:	some
				6:	variant(InstructionData::UnaryGlobalValue)
				1796:	variant(Opcode::TlsValue)
				1798:	some
				2678:	variant(TlsModel::Coff)
			]
			prio = 0
			result = 2684
			impure = [2683, 2684]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4719
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SqmulRoundSat)
				540:	const_prim(true)
				2218:	const_prim(I16X8)
			]
			prio = 1
			result = 2691
			impure = [68, 459, 2685, 2686, 462, 2687, 2688, 2689, 2690, 2691]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4735
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::SqmulRoundSat)
				2218:	const_prim(I16X8)
			]
			prio = 0
			result = 2713
			impure = [68, 459, 2101, 2692, 462, 2693, 2694, 2695, 2696, 2697, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2707, 2708, 2709, 2710, 2711, 2712, 2713]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4761
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::X86Pmulhrsw)
				540:	const_prim(true)
				2218:	const_prim(I16X8)
			]
			prio = 0
			result = 2715
			impure = [68, 69, 2714, 2715]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4779
			constraints = [
				6:	variant(InstructionData::Binary)
				36:	variant(Opcode::Uunarrow)
				171:	some
				173:	variant(InstructionData::UnaryConst)
				180:	some
				182:	variant(InstructionData::Unary)
				183:	variant(Opcode::FcvtToUintSat)
				496:	const_prim(F64X2)
				2226:	variant(Opcode::Vconst)
				2228:	some
				2229:	const_int(0)
			]
			prio = 0
			result = 2731
			impure = [185, 1917, 2716, 2717, 2719, 2720, 2721, 2722, 2723, 2725, 2726, 2727, 2728, 2729, 2730, 2731]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4807
			constraints = [
				6:	variant(InstructionData::NullAry)
				31:	variant(Opcode::Nop)
			]
			prio = 0
			result = 2733
			impure = [2732, 2733]
		}
	]
}
term {
	name = lower_branch
	bindings = [
		0: Inst	argument(0)
		1: InstructionData	extractor(inst_data, 0)
		2: Opcode	match_variant(1, InstructionData::Jump, opcode)
		3: BlockCall	match_variant(1, InstructionData::Jump, destination)
		4: MachLabelSlice	argument(1)
		5: Option(MachLabel)	extractor(single_target, 4)
		6: MachLabel	match_some(5)
		7: SideEffectNoResult	constructor(jmp_known, [6], 1)
		8: Unit	constructor(emit_side_effect, [7], 2)
		9: Opcode	match_variant(1, InstructionData::Brif, opcode)
		10: Value	match_variant(1, InstructionData::Brif, arg)
		11: BlockArray2	match_variant(1, InstructionData::Brif, blocks)
		12: Option(Value)	extractor(maybe_uextend, 10)
		13: Value	match_some(12)
		14: Option(Inst)	extractor(def_inst, 13)
		15: Inst	match_some(14)
		16: InstructionData	extractor(inst_data, 15)
		17: Opcode	match_variant(16, InstructionData::IntCompare, opcode)
		18: ValueArray2	match_variant(16, InstructionData::IntCompare, args)
		19: IntCC	match_variant(16, InstructionData::IntCompare, cond)
		20: (Value, Value)	extractor(value_array_2, 18)
		21: Value	match_tuple(20, 0)
		22: Value	match_tuple(20, 1)
		23: (BlockCall, BlockCall)	extractor(block_array_2, 11)
		24: BlockCall	match_tuple(23, 0)
		25: BlockCall	match_tuple(23, 1)
		26: Option((MachLabel, MachLabel))	extractor(two_targets, 4)
		27: (MachLabel, MachLabel)	match_some(26)
		28: MachLabel	match_tuple(27, 0)
		29: MachLabel	match_tuple(27, 1)
		30: IcmpCondResult	constructor(emit_cmp, [19, 21, 22], 1)
		31: SideEffectNoResult	constructor(jmp_cond_icmp, [30, 28, 29], 2)
		32: Unit	constructor(emit_side_effect, [31], 3)
		33: Opcode	match_variant(16, InstructionData::FloatCompare, opcode)
		34: ValueArray2	match_variant(16, InstructionData::FloatCompare, args)
		35: FloatCC	match_variant(16, InstructionData::FloatCompare, cond)
		36: (Value, Value)	extractor(value_array_2, 34)
		37: Value	match_tuple(36, 0)
		38: Value	match_tuple(36, 1)
		39: FcmpCondResult	constructor(emit_fcmp, [35, 37, 38], 1)
		40: SideEffectNoResult	constructor(jmp_cond_fcmp, [39, 28, 29], 2)
		41: Unit	constructor(emit_side_effect, [40], 3)
		42: Type	extractor(value_type, 10)
		43: CC	make_variant(CC::Z, [])
		44: ValueRegs	constructor(put_in_regs, [10], 1)
		45: IcmpCondResult	constructor(cmp_zero_i128, [43, 44], 2)
		46: SideEffectNoResult	constructor(jmp_cond_icmp, [45, 28, 29], 3)
		47: Unit	constructor(emit_side_effect, [46], 4)
		48: Option(())	extractor(ty_int_bool_or_ref, 42)
		49: ()	match_some(48)
		50: ProducesFlags	constructor(cmp_zero_int_bool_ref, [10], 1)
		51: CC	make_variant(CC::NZ, [])
		52: ConsumesFlags	constructor(jmp_cond, [51, 28, 29], 2)
		53: SideEffectNoResult	constructor(with_flags_side_effect, [50, 52], 3)
		54: Unit	constructor(emit_side_effect, [53], 4)
		55: Opcode	match_variant(1, InstructionData::BranchTable, opcode)
		56: Value	match_variant(1, InstructionData::BranchTable, arg)
		57: JumpTable	match_variant(1, InstructionData::BranchTable, table)
		58: Type	extractor(value_type, 56)
		59: Option((MachLabel, BoxVecMachLabel))	extractor(jump_table_targets, 4)
		60: (MachLabel, BoxVecMachLabel)	match_some(59)
		61: MachLabel	match_tuple(60, 0)
		62: BoxVecMachLabel	match_tuple(60, 1)
		63: OperandSize	constructor(raw_operand_size_of_type, [58], 1)
		64: u32	constructor(jump_table_size, [62], 2)
		65: u64	constructor(u32_as_u64, [64], 0)
		66: Reg	constructor(imm, [58, 65], 3)
		67: Type	const_prim(I64)
		68: ExtendKind	make_variant(ExtendKind::Zero, [])
		69: Gpr	constructor(extend_to_gpr, [56, 67, 68], 4)
		70: GprMemImm	constructor(reg_to_gpr_mem_imm, [66], 5)
		71: ProducesFlags	constructor(x64_cmp, [63, 69, 70], 6)
		72: CC	make_variant(CC::B, [])
		73: GprMem	constructor(gpr_to_gpr_mem, [69], 7)
		74: Gpr	constructor(gpr_new, [66], 8)
		75: ConsumesFlags	constructor(cmove, [58, 72, 73, 74], 9)
		76: Reg	constructor(with_flags_reg, [71, 75], 10)
		77: Gpr	constructor(gpr_new, [76], 11)
		78: SideEffectNoResult	constructor(jmp_table_seq, [58, 77, 61, 62], 12)
		79: Unit	constructor(emit_side_effect, [78], 13)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3303
			constraints = [
				1:	variant(InstructionData::Jump)
				2:	variant(Opcode::Jump)
				5:	some
			]
			prio = 0
			result = 8
			impure = [7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3308
			constraints = [
				1:	variant(InstructionData::Brif)
				9:	variant(Opcode::Brif)
				12:	some
				14:	some
				16:	variant(InstructionData::IntCompare)
				17:	variant(Opcode::Icmp)
				26:	some
			]
			prio = 2
			result = 32
			impure = [30, 31, 32]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3311
			constraints = [
				1:	variant(InstructionData::Brif)
				9:	variant(Opcode::Brif)
				12:	some
				14:	some
				16:	variant(InstructionData::FloatCompare)
				26:	some
				33:	variant(Opcode::Fcmp)
			]
			prio = 2
			result = 41
			impure = [39, 40, 41]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3314
			constraints = [
				1:	variant(InstructionData::Brif)
				9:	variant(Opcode::Brif)
				26:	some
				42:	const_prim(I128)
			]
			prio = 1
			result = 47
			impure = [44, 45, 46, 47]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3318
			constraints = [
				1:	variant(InstructionData::Brif)
				9:	variant(Opcode::Brif)
				26:	some
				48:	some
			]
			prio = 0
			result = 54
			impure = [50, 52, 53, 54]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3348
			constraints = [
				1:	variant(InstructionData::BranchTable)
				55:	variant(Opcode::BrTable)
				59:	some
			]
			prio = 0
			result = 79
			impure = [63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79]
		}
	]
}
term {
	name = construct_overflow_op
	bindings = [
		0: CC	argument(0)
		1: ProducesFlags	argument(1)
		2: ConsumesFlags	constructor(x64_setcc_paired, [0], 1)
		3: ValueRegs	constructor(with_flags, [1, 2], 2)
		4: usize	const_int(0, usize)
		5: Reg	constructor(value_regs_get, [3, 4], 3)
		6: ValueRegs	constructor(value_reg, [5], 4)
		7: usize	const_int(1, usize)
		8: Reg	constructor(value_regs_get, [3, 7], 5)
		9: ValueRegs	constructor(value_reg, [8], 6)
		10: InstOutput	constructor(output_pair, [6, 9], 7)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 104
			constraints = [
			]
			prio = 0
			result = 10
			impure = [2, 3, 5, 6, 8, 9, 10]
		}
	]
}
term {
	name = construct_overflow_op_alu
	bindings = [
		0: Type	argument(0)
		1: CC	argument(1)
		2: AluRmiROpcode	argument(2)
		3: Gpr	argument(3)
		4: GprMemImm	argument(4)
		5: ProducesFlags	constructor(x64_alurmi_with_flags_paired, [2, 0, 3, 4], 1)
		6: InstOutput	constructor(construct_overflow_op, [1, 5], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 111
			constraints = [
			]
			prio = 0
			result = 6
			impure = [5, 6]
		}
	]
}
term {
	name = construct_overflow_op_alu_128
	bindings = [
		0: CC	argument(0)
		1: AluRmiROpcode	argument(1)
		2: AluRmiROpcode	argument(2)
		3: Value	argument(3)
		4: Value	argument(4)
		5: ValueRegs	constructor(put_in_regs, [3], 1)
		6: usize	const_int(0, usize)
		7: Gpr	constructor(value_regs_get_gpr, [5, 6], 2)
		8: usize	const_int(1, usize)
		9: Gpr	constructor(value_regs_get_gpr, [5, 8], 3)
		10: ValueRegs	constructor(put_in_regs, [4], 4)
		11: Gpr	constructor(value_regs_get_gpr, [10, 6], 5)
		12: Gpr	constructor(value_regs_get_gpr, [10, 8], 6)
		13: Type	const_prim(I64)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [11], 7)
		15: ProducesFlags	constructor(x64_alurmi_with_flags_paired, [1, 13, 7, 14], 8)
		16: GprMemImm	constructor(gpr_to_gpr_mem_imm, [12], 9)
		17: ConsumesAndProducesFlags	constructor(x64_alurmi_with_flags_chained, [2, 13, 9, 16], 10)
		18: ConsumesFlags	constructor(x64_setcc_paired, [0], 11)
		19: MultiReg	constructor(with_flags_chained, [15, 17, 18], 12)
		20: InstOutput	constructor(multi_reg_to_pair_and_single, [19], 13)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 119
			constraints = [
			]
			prio = 0
			result = 20
			impure = [5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20]
		}
	]
}
term {
	name = sse_and
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_andps, [1, 2], 1)
		4: Xmm	constructor(x64_andpd, [1, 2], 1)
		5: Option((u32, u32))	extractor(multi_lane, 0)
		6: (u32, u32)	match_some(5)
		7: u32	match_tuple(6, 0)
		8: u32	match_tuple(6, 1)
		9: Xmm	constructor(x64_pand, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 293
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 294
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 295
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 296
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 297
			constraints = [
				5:	some
			]
			prio = -1
			result = 9
			impure = [9]
		}
	]
}
term {
	name = and_i128
	bindings = [
		0: ValueRegs	argument(0)
		1: ValueRegs	argument(1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [0, 2], 1)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [0, 4], 2)
		6: Gpr	constructor(value_regs_get_gpr, [1, 2], 3)
		7: Gpr	constructor(value_regs_get_gpr, [1, 4], 4)
		8: Type	const_prim(I64)
		9: GprMemImm	constructor(gpr_to_gpr_mem_imm, [6], 5)
		10: Gpr	constructor(x64_and, [8, 3, 9], 6)
		11: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 7)
		12: Gpr	constructor(x64_and, [8, 5, 11], 8)
		13: ValueRegs	constructor(value_gprs, [10, 12], 9)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 306
			constraints = [
			]
			prio = 0
			result = 13
			impure = [3, 5, 6, 7, 9, 10, 11, 12, 13]
		}
	]
}
term {
	name = sse_and_not
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_andnps, [1, 2], 1)
		4: Xmm	constructor(x64_andnpd, [1, 2], 1)
		5: Option((u32, u32))	extractor(multi_lane, 0)
		6: (u32, u32)	match_some(5)
		7: u32	match_tuple(6, 0)
		8: u32	match_tuple(6, 1)
		9: Xmm	constructor(x64_pandn, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 324
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 325
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 326
			constraints = [
				5:	some
			]
			prio = -1
			result = 9
			impure = [9]
		}
	]
}
term {
	name = val_minus_one
	bindings = [
		0: Value	argument(0)
		1: Option(Inst)	extractor(def_inst, 0)
		2: Inst	match_some(1)
		3: InstructionData	extractor(inst_data, 2)
		4: Opcode	match_variant(3, InstructionData::Binary, opcode)
		5: ValueArray2	match_variant(3, InstructionData::Binary, args)
		6: (Value, Value)	extractor(value_array_2, 5)
		7: Value	match_tuple(6, 0)
		8: Value	match_tuple(6, 1)
		9: Option(Inst)	extractor(def_inst, 8)
		10: Inst	match_some(9)
		11: InstructionData	extractor(inst_data, 10)
		12: Opcode	match_variant(11, InstructionData::UnaryImm, opcode)
		13: Imm64	match_variant(11, InstructionData::UnaryImm, imm)
		14: u64	extractor(u64_from_imm64, 13)
		15: Option(i64)	extractor(i64_from_iconst, 8)
		16: i64	match_some(15)
		17: Option(i64)	extractor(i64_from_iconst, 7)
		18: i64	match_some(17)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 353
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Isub)
				9:	some
				11:	variant(InstructionData::UnaryImm)
				12:	variant(Opcode::Iconst)
				14:	const_int(1)
			]
			prio = 0
			result = 7
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 354
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Iadd)
				15:	some
				16:	const_int(-1)
			]
			prio = 0
			result = 7
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 355
			constraints = [
				1:	some
				3:	variant(InstructionData::Binary)
				4:	variant(Opcode::Iadd)
				17:	some
				18:	const_int(-1)
			]
			prio = 1
			result = 8
		}
	]
}
term {
	name = sse_or
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	argument(2)
		3: Xmm	constructor(x64_orps, [1, 2], 1)
		4: Xmm	constructor(x64_orpd, [1, 2], 1)
		5: Option((u32, u32))	extractor(multi_lane, 0)
		6: (u32, u32)	match_some(5)
		7: u32	match_tuple(6, 0)
		8: u32	match_tuple(6, 1)
		9: Xmm	constructor(x64_por, [1, 2], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 417
			constraints = [
				0:	const_prim(F32X4)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 418
			constraints = [
				0:	const_prim(F64X2)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 419
			constraints = [
				0:	const_prim(F32)
			]
			prio = 0
			result = 3
			impure = [3]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 420
			constraints = [
				0:	const_prim(F64)
			]
			prio = 0
			result = 4
			impure = [4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 421
			constraints = [
				5:	some
			]
			prio = -1
			result = 9
			impure = [9]
		}
	]
}
term {
	name = or_i128
	bindings = [
		0: ValueRegs	argument(0)
		1: ValueRegs	argument(1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [0, 2], 1)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [0, 4], 2)
		6: Gpr	constructor(value_regs_get_gpr, [1, 2], 3)
		7: Gpr	constructor(value_regs_get_gpr, [1, 4], 4)
		8: Type	const_prim(I64)
		9: GprMemImm	constructor(gpr_to_gpr_mem_imm, [6], 5)
		10: Gpr	constructor(x64_or, [8, 3, 9], 6)
		11: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 7)
		12: Gpr	constructor(x64_or, [8, 5, 11], 8)
		13: ValueRegs	constructor(value_gprs, [10, 12], 9)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 430
			constraints = [
			]
			prio = 0
			result = 13
			impure = [3, 5, 6, 7, 9, 10, 11, 12, 13]
		}
	]
}
term {
	name = shl_i128
	bindings = [
		0: ValueRegs	argument(0)
		1: Gpr	argument(1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [0, 2], 1)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [0, 4], 2)
		6: Type	const_prim(I64)
		7: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 3)
		8: Gpr	constructor(x64_shl, [6, 3, 7], 4)
		9: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 5)
		10: Gpr	constructor(x64_shl, [6, 5, 9], 6)
		11: u64	const_int(64, u64)
		12: Reg	constructor(imm, [6, 11], 7)
		13: Gpr	constructor(gpr_new, [12], 8)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1], 9)
		15: Gpr	constructor(x64_sub, [6, 13, 14], 10)
		16: Imm8Gpr	constructor(gpr_to_imm8_gpr, [15], 11)
		17: Gpr	constructor(x64_shr, [6, 3, 16], 12)
		18: u64	const_int(0, u64)
		19: Reg	constructor(imm, [6, 18], 13)
		20: Gpr	constructor(gpr_new, [19], 14)
		21: OperandSize	make_variant(OperandSize::Size64, [])
		22: u32	const_int(127, u32)
		23: RegMemImm	make_variant(RegMemImm::Imm, [22])
		24: GprMemImm	constructor(gpr_mem_imm_new, [23], 15)
		25: ProducesFlags	constructor(x64_test, [21, 1, 24], 16)
		26: CC	make_variant(CC::Z, [])
		27: GprMem	constructor(gpr_to_gpr_mem, [20], 17)
		28: ConsumesFlags	constructor(cmove, [6, 26, 27, 17], 18)
		29: Reg	constructor(with_flags_reg, [25, 28], 19)
		30: Gpr	constructor(gpr_new, [29], 20)
		31: GprMemImm	constructor(gpr_to_gpr_mem_imm, [10], 21)
		32: Gpr	constructor(x64_or, [6, 30, 31], 22)
		33: u32	const_int(64, u32)
		34: RegMemImm	make_variant(RegMemImm::Imm, [33])
		35: GprMemImm	constructor(gpr_mem_imm_new, [34], 23)
		36: ProducesFlags	constructor(x64_test, [21, 1, 35], 24)
		37: GprMem	constructor(gpr_to_gpr_mem, [8], 25)
		38: ConsumesFlags	constructor(cmove, [6, 26, 37, 20], 26)
		39: GprMem	constructor(gpr_to_gpr_mem, [32], 27)
		40: ConsumesFlags	constructor(cmove, [6, 26, 39, 8], 28)
		41: ConsumesFlags	constructor(consumes_flags_concat, [38, 40], 29)
		42: ValueRegs	constructor(with_flags, [36, 41], 30)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 504
			constraints = [
			]
			prio = 0
			result = 42
			impure = [3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42]
		}
	]
}
term {
	name = ishl_i8x16_mask
	bindings = [
		0: RegMemImm	argument(0)
		1: u32	match_variant(0, RegMemImm::Imm, simm32)
		2: SyntheticAmode	constructor(ishl_i8x16_mask_for_const, [1], 1)
		3: Reg	match_variant(0, RegMemImm::Reg, reg)
		4: SyntheticAmode	constructor(ishl_i8x16_mask_table, [], 1)
		5: Type	const_prim(I64)
		6: Gpr	constructor(x64_lea, [5, 4], 2)
		7: Gpr	constructor(gpr_new, [3], 3)
		8: u8	const_int(4, u8)
		9: Imm8Gpr	constructor(imm8_to_imm8_gpr, [8], 4)
		10: Gpr	constructor(x64_shl, [5, 7, 9], 5)
		11: i32	const_int(0, i32)
		12: u8	const_int(0, u8)
		13: MemFlags	constructor(mem_flags_trusted, [], 0)
		14: Amode	make_variant(Amode::ImmRegRegShift, [11, 6, 10, 12, 13])
		15: SyntheticAmode	constructor(amode_to_synthetic_amode, [14], 6)
		16: SyntheticAmode	match_variant(0, RegMemImm::Mem, addr)
		17: ExtKind	make_variant(ExtKind::None, [])
		18: Reg	constructor(x64_load, [5, 16, 17], 1)
		19: RegMemImm	make_variant(RegMemImm::Reg, [18])
		20: SyntheticAmode	constructor(ishl_i8x16_mask, [19], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 569
			constraints = [
				0:	variant(RegMemImm::Imm)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 578
			constraints = [
				0:	variant(RegMemImm::Reg)
			]
			prio = 0
			result = 15
			impure = [4, 6, 7, 9, 10, 15]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 589
			constraints = [
				0:	variant(RegMemImm::Mem)
			]
			prio = 0
			result = 20
			impure = [18, 20]
		}
	]
}
term {
	name = shr_i128
	bindings = [
		0: ValueRegs	argument(0)
		1: Gpr	argument(1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [0, 2], 1)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [0, 4], 2)
		6: Type	const_prim(I64)
		7: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 3)
		8: Gpr	constructor(x64_shr, [6, 3, 7], 4)
		9: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 5)
		10: Gpr	constructor(x64_shr, [6, 5, 9], 6)
		11: u64	const_int(64, u64)
		12: Reg	constructor(imm, [6, 11], 7)
		13: Gpr	constructor(gpr_new, [12], 8)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1], 9)
		15: Gpr	constructor(x64_sub, [6, 13, 14], 10)
		16: Imm8Gpr	constructor(gpr_to_imm8_gpr, [15], 11)
		17: Gpr	constructor(x64_shl, [6, 5, 16], 12)
		18: u64	const_int(0, u64)
		19: Reg	constructor(imm, [6, 18], 13)
		20: Gpr	constructor(gpr_new, [19], 14)
		21: OperandSize	make_variant(OperandSize::Size64, [])
		22: u32	const_int(127, u32)
		23: RegMemImm	make_variant(RegMemImm::Imm, [22])
		24: GprMemImm	constructor(gpr_mem_imm_new, [23], 15)
		25: ProducesFlags	constructor(x64_test, [21, 1, 24], 16)
		26: CC	make_variant(CC::Z, [])
		27: GprMem	constructor(gpr_to_gpr_mem, [20], 17)
		28: ConsumesFlags	constructor(cmove, [6, 26, 27, 17], 18)
		29: Reg	constructor(with_flags_reg, [25, 28], 19)
		30: Gpr	constructor(gpr_new, [29], 20)
		31: GprMemImm	constructor(gpr_to_gpr_mem_imm, [8], 21)
		32: Gpr	constructor(x64_or, [6, 30, 31], 22)
		33: u32	const_int(64, u32)
		34: RegMemImm	make_variant(RegMemImm::Imm, [33])
		35: GprMemImm	constructor(gpr_mem_imm_new, [34], 23)
		36: ProducesFlags	constructor(x64_test, [21, 1, 35], 24)
		37: GprMem	constructor(gpr_to_gpr_mem, [32], 25)
		38: ConsumesFlags	constructor(cmove, [6, 26, 37, 10], 26)
		39: GprMem	constructor(gpr_to_gpr_mem, [10], 27)
		40: ConsumesFlags	constructor(cmove, [6, 26, 39, 20], 28)
		41: ConsumesFlags	constructor(consumes_flags_concat, [38, 40], 29)
		42: ValueRegs	constructor(with_flags, [36, 41], 30)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 614
			constraints = [
			]
			prio = 0
			result = 42
			impure = [3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42]
		}
	]
}
term {
	name = ushr_i8x16_mask
	bindings = [
		0: RegMemImm	argument(0)
		1: u32	match_variant(0, RegMemImm::Imm, simm32)
		2: SyntheticAmode	constructor(ushr_i8x16_mask_for_const, [1], 1)
		3: Reg	match_variant(0, RegMemImm::Reg, reg)
		4: SyntheticAmode	constructor(ushr_i8x16_mask_table, [], 1)
		5: Type	const_prim(I64)
		6: Gpr	constructor(x64_lea, [5, 4], 2)
		7: Gpr	constructor(gpr_new, [3], 3)
		8: u8	const_int(4, u8)
		9: Imm8Gpr	constructor(imm8_to_imm8_gpr, [8], 4)
		10: Gpr	constructor(x64_shl, [5, 7, 9], 5)
		11: i32	const_int(0, i32)
		12: u8	const_int(0, u8)
		13: MemFlags	constructor(mem_flags_trusted, [], 0)
		14: Amode	make_variant(Amode::ImmRegRegShift, [11, 6, 10, 12, 13])
		15: SyntheticAmode	constructor(amode_to_synthetic_amode, [14], 6)
		16: SyntheticAmode	match_variant(0, RegMemImm::Mem, addr)
		17: ExtKind	make_variant(ExtKind::None, [])
		18: Reg	constructor(x64_load, [5, 16, 17], 1)
		19: RegMemImm	make_variant(RegMemImm::Reg, [18])
		20: SyntheticAmode	constructor(ushr_i8x16_mask, [19], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 674
			constraints = [
				0:	variant(RegMemImm::Imm)
			]
			prio = 0
			result = 2
			impure = [2]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 683
			constraints = [
				0:	variant(RegMemImm::Reg)
			]
			prio = 0
			result = 15
			impure = [4, 6, 7, 9, 10, 15]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 695
			constraints = [
				0:	variant(RegMemImm::Mem)
			]
			prio = 0
			result = 20
			impure = [18, 20]
		}
	]
}
term {
	name = mask_xmm_shift
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Type	const_prim(I64)
		3: Gpr	constructor(put_in_gpr, [1], 1)
		4: u8	constructor(shift_mask, [0], 2)
		5: u32	constructor(u8_as_u32, [4], 0)
		6: RegMemImm	make_variant(RegMemImm::Imm, [5])
		7: GprMemImm	constructor(gpr_mem_imm_new, [6], 3)
		8: Gpr	constructor(x64_and, [2, 3, 7], 4)
		9: Reg	constructor(gpr_to_reg, [8], 5)
		10: RegMemImm	constructor(reg_to_reg_mem_imm, [9], 6)
		11: Option(Inst)	extractor(def_inst, 1)
		12: Inst	match_some(11)
		13: InstructionData	extractor(inst_data, 12)
		14: Opcode	match_variant(13, InstructionData::UnaryImm, opcode)
		15: Imm64	match_variant(13, InstructionData::UnaryImm, imm)
		16: u8	constructor(shift_amount_masked, [0, 15], 1)
		17: u32	constructor(u8_as_u32, [16], 0)
		18: RegMemImm	make_variant(RegMemImm::Imm, [17])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 710
			constraints = [
			]
			prio = 0
			result = 10
			impure = [3, 4, 7, 8, 9, 10]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 712
			constraints = [
				11:	some
				13:	variant(InstructionData::UnaryImm)
				14:	variant(Opcode::Iconst)
			]
			prio = 1
			result = 18
			impure = [16]
		}
	]
}
term {
	name = sar_i128
	bindings = [
		0: ValueRegs	argument(0)
		1: Gpr	argument(1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [0, 2], 1)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [0, 4], 2)
		6: Type	const_prim(I64)
		7: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 3)
		8: Gpr	constructor(x64_shr, [6, 3, 7], 4)
		9: Imm8Gpr	constructor(gpr_to_imm8_gpr, [1], 5)
		10: Gpr	constructor(x64_sar, [6, 5, 9], 6)
		11: u64	const_int(64, u64)
		12: Reg	constructor(imm, [6, 11], 7)
		13: Gpr	constructor(gpr_new, [12], 8)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [1], 9)
		15: Gpr	constructor(x64_sub, [6, 13, 14], 10)
		16: Imm8Gpr	constructor(gpr_to_imm8_gpr, [15], 11)
		17: Gpr	constructor(x64_shl, [6, 5, 16], 12)
		18: OperandSize	make_variant(OperandSize::Size64, [])
		19: u32	const_int(127, u32)
		20: RegMemImm	make_variant(RegMemImm::Imm, [19])
		21: GprMemImm	constructor(gpr_mem_imm_new, [20], 13)
		22: ProducesFlags	constructor(x64_test, [18, 1, 21], 14)
		23: CC	make_variant(CC::Z, [])
		24: u64	const_int(0, u64)
		25: Reg	constructor(imm, [6, 24], 15)
		26: GprMem	constructor(reg_to_gpr_mem, [25], 16)
		27: ConsumesFlags	constructor(cmove, [6, 23, 26, 17], 17)
		28: Reg	constructor(with_flags_reg, [22, 27], 18)
		29: Gpr	constructor(gpr_new, [28], 19)
		30: GprMemImm	constructor(gpr_to_gpr_mem_imm, [29], 20)
		31: Gpr	constructor(x64_or, [6, 8, 30], 21)
		32: u8	const_int(63, u8)
		33: Imm8Gpr	constructor(imm8_to_imm8_gpr, [32], 22)
		34: Gpr	constructor(x64_sar, [6, 5, 33], 23)
		35: u32	const_int(64, u32)
		36: RegMemImm	make_variant(RegMemImm::Imm, [35])
		37: GprMemImm	constructor(gpr_mem_imm_new, [36], 24)
		38: ProducesFlags	constructor(x64_test, [18, 1, 37], 25)
		39: GprMem	constructor(gpr_to_gpr_mem, [31], 26)
		40: ConsumesFlags	constructor(cmove, [6, 23, 39, 10], 27)
		41: GprMem	constructor(gpr_to_gpr_mem, [10], 28)
		42: ConsumesFlags	constructor(cmove, [6, 23, 41, 34], 29)
		43: ConsumesFlags	constructor(consumes_flags_concat, [40, 42], 30)
		44: ValueRegs	constructor(with_flags, [38, 43], 31)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 726
			constraints = [
			]
			prio = 0
			result = 44
			impure = [3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44]
		}
	]
}
term {
	name = sshr_i8x16_bigger_shift
	bindings = [
		0: Type	argument(0)
		1: RegMemImm	argument(1)
		2: u32	match_variant(1, RegMemImm::Imm, simm32)
		3: u32	const_int(8, u32)
		4: u32	constructor(u32_add, [2, 3], 0)
		5: RegMemImm	make_variant(RegMemImm::Imm, [4])
		6: XmmMemImm	constructor(xmm_mem_imm_new, [5], 1)
		7: Reg	match_variant(1, RegMemImm::Reg, reg)
		8: Gpr	constructor(gpr_new, [7], 1)
		9: RegMemImm	make_variant(RegMemImm::Imm, [3])
		10: GprMemImm	constructor(gpr_mem_imm_new, [9], 2)
		11: Gpr	constructor(x64_add, [0, 8, 10], 3)
		12: Reg	constructor(gpr_to_reg, [11], 4)
		13: RegMemImm	make_variant(RegMemImm::Reg, [12])
		14: XmmMemImm	constructor(mov_rmi_to_xmm, [13], 5)
		15: SyntheticAmode	match_variant(1, RegMemImm::Mem, addr)
		16: u64	const_int(8, u64)
		17: Reg	constructor(imm, [0, 16], 1)
		18: Gpr	constructor(gpr_new, [17], 2)
		19: GprMemImm	constructor(gpr_mem_imm_new, [1], 3)
		20: Gpr	constructor(x64_add, [0, 18, 19], 4)
		21: Reg	constructor(gpr_to_reg, [20], 5)
		22: RegMemImm	make_variant(RegMemImm::Reg, [21])
		23: XmmMemImm	constructor(mov_rmi_to_xmm, [22], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 792
			constraints = [
				1:	variant(RegMemImm::Imm)
			]
			prio = 0
			result = 6
			impure = [6]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 794
			constraints = [
				1:	variant(RegMemImm::Reg)
			]
			prio = 0
			result = 14
			impure = [8, 10, 11, 12, 14]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 798
			constraints = [
				1:	variant(RegMemImm::Mem)
			]
			prio = 0
			result = 23
			impure = [17, 18, 19, 20, 21, 23]
		}
	]
}
term {
	name = lower_i64x2_sshr_imm
	bindings = [
		0: Xmm	argument(0)
		1: u32	argument(1)
		2: u64	constructor(u32_as_u64, [1], 0)
		3: u64	const_int(32, u64)
		4: bool	constructor(u64_lt, [2, 3], 0)
		5: XmmMemImm	constructor(xmi_imm, [1], 1)
		6: Xmm	constructor(x64_psrad, [0, 5], 2)
		7: XmmMem	constructor(xmm_to_xmm_mem, [6], 3)
		8: u8	const_int(237, u8)
		9: Xmm	constructor(x64_pshufd, [7, 8], 4)
		10: XmmMemImm	constructor(xmi_imm, [1], 5)
		11: Xmm	constructor(x64_psrlq, [0, 10], 6)
		12: XmmMem	constructor(xmm_to_xmm_mem, [11], 7)
		13: u8	const_int(232, u8)
		14: Xmm	constructor(x64_pshufd, [12, 13], 8)
		15: XmmMem	constructor(xmm_to_xmm_mem, [9], 9)
		16: Xmm	constructor(x64_punpckldq, [14, 15], 10)
		17: XmmMem	constructor(xmm_to_xmm_mem, [0], 1)
		18: Xmm	constructor(x64_pshufd, [17, 8], 2)
		19: u32	const_int(31, u32)
		20: XmmMemImm	constructor(xmi_imm, [19], 3)
		21: Xmm	constructor(x64_psrad, [0, 20], 4)
		22: XmmMem	constructor(xmm_to_xmm_mem, [21], 5)
		23: Xmm	constructor(x64_pshufd, [22, 8], 6)
		24: XmmMem	constructor(xmm_to_xmm_mem, [23], 7)
		25: Xmm	constructor(x64_punpckldq, [18, 24], 8)
		26: bool	constructor(u64_lt, [3, 2], 0)
		27: XmmMemImm	constructor(xmi_imm, [19], 1)
		28: Xmm	constructor(x64_psrad, [0, 27], 2)
		29: XmmMem	constructor(xmm_to_xmm_mem, [28], 3)
		30: Xmm	constructor(x64_pshufd, [29, 8], 4)
		31: u32	const_int(32, u32)
		32: u32	constructor(u32_sub, [1, 31], 0)
		33: XmmMemImm	constructor(xmi_imm, [32], 5)
		34: Xmm	constructor(x64_psrad, [0, 33], 6)
		35: XmmMem	constructor(xmm_to_xmm_mem, [34], 7)
		36: Xmm	constructor(x64_pshufd, [35, 8], 8)
		37: XmmMem	constructor(xmm_to_xmm_mem, [30], 9)
		38: Xmm	constructor(x64_punpckldq, [36, 37], 10)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 837
			constraints = [
				4:	const_prim(true)
			]
			prio = 2
			result = 16
			impure = [5, 6, 7, 9, 10, 11, 12, 14, 15, 16]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 848
			constraints = [
				1:	const_int(32)
			]
			prio = 1
			result = 25
			impure = [17, 18, 20, 21, 22, 23, 24, 25]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 859
			constraints = [
				26:	const_prim(true)
			]
			prio = 0
			result = 38
			impure = [27, 28, 29, 30, 33, 34, 35, 36, 37, 38]
		}
	]
}
term {
	name = lower_i64x2_sshr_gpr
	bindings = [
		0: Xmm	argument(0)
		1: Gpr	argument(1)
		2: GprMem	constructor(gpr_to_gpr_mem, [1], 1)
		3: Xmm	constructor(x64_movq_to_xmm, [2], 2)
		4: Type	const_prim(I64X2)
		5: Xmm	constructor(flip_high_bit_mask, [4], 3)
		6: XmmMemImm	constructor(xmm_to_xmm_mem_imm, [3], 4)
		7: Xmm	constructor(x64_psrlq, [5, 6], 5)
		8: XmmMemImm	constructor(xmm_to_xmm_mem_imm, [3], 6)
		9: Xmm	constructor(x64_psrlq, [0, 8], 7)
		10: XmmMem	constructor(xmm_to_xmm_mem, [9], 8)
		11: Xmm	constructor(x64_pxor, [7, 10], 9)
		12: XmmMem	constructor(xmm_to_xmm_mem, [7], 10)
		13: Xmm	constructor(x64_psubq, [11, 12], 11)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 874
			constraints = [
			]
			prio = 0
			result = 13
			impure = [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13]
		}
	]
}
term {
	name = lower_bmask
	bindings = [
		0: Type	argument(0)
		1: Option(Type)	extractor(fits_in_64, 0)
		2: Type	match_some(1)
		3: Type	argument(1)
		4: Option(Type)	extractor(fits_in_64, 3)
		5: Type	match_some(4)
		6: ValueRegs	argument(2)
		7: usize	const_int(0, usize)
		8: Gpr	constructor(value_regs_get_gpr, [6, 7], 1)
		9: ProducesFlags	constructor(x64_neg_paired, [5, 8], 2)
		10: GprMemImm	constructor(gpr_to_gpr_mem_imm, [8], 3)
		11: ConsumesFlags	constructor(x64_sbb_paired, [2, 8, 10], 4)
		12: ValueRegs	constructor(with_flags, [9, 11], 5)
		13: usize	const_int(1, usize)
		14: Reg	constructor(value_regs_get, [12, 13], 6)
		15: ValueRegs	constructor(value_reg, [14], 7)
		16: Gpr	constructor(value_regs_get_gpr, [6, 13], 2)
		17: Type	const_prim(I64)
		18: GprMemImm	constructor(gpr_to_gpr_mem_imm, [16], 3)
		19: Gpr	constructor(x64_or, [17, 8, 18], 4)
		20: Reg	constructor(gpr_to_reg, [19], 5)
		21: ValueRegs	constructor(value_reg, [20], 6)
		22: ValueRegs	constructor(lower_bmask, [2, 17, 21], 7)
		23: ValueRegs	constructor(lower_bmask, [17, 3, 6], 1)
		24: Gpr	constructor(value_regs_get_gpr, [23, 7], 2)
		25: Reg	constructor(gpr_to_reg, [24], 3)
		26: Reg	constructor(gpr_to_reg, [24], 4)
		27: ValueRegs	constructor(value_regs, [25, 26], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1342
			constraints = [
				1:	some
				4:	some
			]
			prio = 0
			result = 15
			impure = [8, 9, 10, 11, 12, 14, 15]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1353
			constraints = [
				1:	some
				3:	const_prim(I128)
			]
			prio = 1
			result = 22
			impure = [8, 16, 18, 19, 20, 21, 22]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1361
			constraints = [
				0:	const_prim(I128)
			]
			prio = 2
			result = 27
			impure = [23, 24, 25, 26, 27]
		}
	]
}
term {
	name = i128_not
	bindings = [
		0: Value	argument(0)
		1: ValueRegs	constructor(put_in_regs, [0], 1)
		2: usize	const_int(0, usize)
		3: Gpr	constructor(value_regs_get_gpr, [1, 2], 2)
		4: usize	const_int(1, usize)
		5: Gpr	constructor(value_regs_get_gpr, [1, 4], 3)
		6: Type	const_prim(I64)
		7: Gpr	constructor(x64_not, [6, 3], 4)
		8: Gpr	constructor(x64_not, [6, 5], 5)
		9: ValueRegs	constructor(value_gprs, [7, 8], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1384
			constraints = [
			]
			prio = 0
			result = 9
			impure = [1, 3, 5, 7, 8, 9]
		}
	]
}
term {
	name = all_ones_or_all_zeros
	bindings = [
		0: Value	argument(0)
		1: Option(Inst)	extractor(def_inst, 0)
		2: Inst	match_some(1)
		3: InstructionData	extractor(inst_data, 2)
		4: Opcode	match_variant(3, InstructionData::IntCompare, opcode)
		5: ValueArray2	match_variant(3, InstructionData::IntCompare, args)
		6: IntCC	match_variant(3, InstructionData::IntCompare, cond)
		7: (Value, Value)	extractor(value_array_2, 5)
		8: Value	match_tuple(7, 0)
		9: Value	match_tuple(7, 1)
		10: Type	extractor(value_type, 0)
		11: Option((u32, u32))	extractor(multi_lane, 10)
		12: (u32, u32)	match_some(11)
		13: u32	match_tuple(12, 0)
		14: u32	match_tuple(12, 1)
		15: bool	const_prim(true)
		16: Opcode	match_variant(3, InstructionData::FloatCompare, opcode)
		17: ValueArray2	match_variant(3, InstructionData::FloatCompare, args)
		18: FloatCC	match_variant(3, InstructionData::FloatCompare, cond)
		19: (Value, Value)	extractor(value_array_2, 17)
		20: Value	match_tuple(19, 0)
		21: Value	match_tuple(19, 1)
		22: Opcode	match_variant(3, InstructionData::LoadNoOffset, opcode)
		23: Value	match_variant(3, InstructionData::LoadNoOffset, arg)
		24: MemFlags	match_variant(3, InstructionData::LoadNoOffset, flags)
		25: Option(Inst)	extractor(def_inst, 23)
		26: Inst	match_some(25)
		27: InstructionData	extractor(inst_data, 26)
		28: Opcode	match_variant(27, InstructionData::FloatCompare, opcode)
		29: ValueArray2	match_variant(27, InstructionData::FloatCompare, args)
		30: FloatCC	match_variant(27, InstructionData::FloatCompare, cond)
		31: (Value, Value)	extractor(value_array_2, 29)
		32: Value	match_tuple(31, 0)
		33: Value	match_tuple(31, 1)
		34: Opcode	match_variant(3, InstructionData::UnaryConst, opcode)
		35: Constant	match_variant(3, InstructionData::UnaryConst, constant_handle)
		36: Option(())	extractor(vconst_all_ones_or_all_zeros, 35)
		37: ()	match_some(36)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1429
			constraints = [
				1:	some
				3:	variant(InstructionData::IntCompare)
				4:	variant(Opcode::Icmp)
				11:	some
			]
			prio = 0
			result = 15
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1430
			constraints = [
				1:	some
				3:	variant(InstructionData::FloatCompare)
				11:	some
				16:	variant(Opcode::Fcmp)
			]
			prio = 0
			result = 15
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1431
			constraints = [
				1:	some
				3:	variant(InstructionData::LoadNoOffset)
				11:	some
				22:	variant(Opcode::Bitcast)
				25:	some
				27:	variant(InstructionData::FloatCompare)
				28:	variant(Opcode::Fcmp)
			]
			prio = 0
			result = 15
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1432
			constraints = [
				1:	some
				3:	variant(InstructionData::UnaryConst)
				34:	variant(Opcode::Vconst)
				36:	some
			]
			prio = 0
			result = 15
		}
	]
}
term {
	name = insert_i8x16_lane_pshufd_imm
	bindings = [
		0: u8	argument(0)
		1: u8	const_int(84, u8)
		2: u8	const_int(81, u8)
		3: u8	const_int(69, u8)
		4: u8	const_int(21, u8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1531
			constraints = [
				0:	const_int(0)
			]
			prio = 0
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1532
			constraints = [
				0:	const_int(1)
			]
			prio = 0
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1533
			constraints = [
				0:	const_int(2)
			]
			prio = 0
			result = 3
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1534
			constraints = [
				0:	const_int(3)
			]
			prio = 0
			result = 4
		}
	]
}
term {
	name = f32x4_insertlane
	bindings = [
		0: Xmm	argument(0)
		1: Xmm	argument(1)
		2: u8	argument(2)
		3: bool	constructor(use_sse41, [], 0)
		4: XmmMem	constructor(xmm_to_xmm_mem, [1], 1)
		5: u8	constructor(sse_insertps_lane_imm, [2], 2)
		6: Xmm	constructor(x64_insertps, [0, 4, 5], 3)
		7: Xmm	constructor(x64_movss_regmove, [0, 1], 1)
		8: XmmMem	constructor(xmm_to_xmm_mem, [0], 1)
		9: Xmm	constructor(x64_movlhps, [1, 8], 2)
		10: XmmMem	constructor(xmm_to_xmm_mem, [0], 3)
		11: u8	const_int(226, u8)
		12: Xmm	constructor(x64_shufps, [9, 10, 11], 4)
		13: u8	const_int(48, u8)
		14: Xmm	constructor(x64_shufps, [1, 8, 13], 2)
		15: XmmMem	constructor(xmm_to_xmm_mem, [14], 3)
		16: u8	const_int(132, u8)
		17: Xmm	constructor(x64_shufps, [0, 15, 16], 4)
		18: u8	const_int(228, u8)
		19: Xmm	constructor(x64_shufps, [1, 8, 18], 2)
		20: XmmMem	constructor(xmm_to_xmm_mem, [19], 3)
		21: u8	const_int(36, u8)
		22: Xmm	constructor(x64_shufps, [0, 20, 21], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1600
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [4, 5, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1609
			constraints = [
				2:	const_int(0)
			]
			prio = 0
			result = 7
			impure = [7]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1615
			constraints = [
				2:	const_int(1)
			]
			prio = 0
			result = 12
			impure = [8, 9, 10, 12]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1622
			constraints = [
				2:	const_int(2)
			]
			prio = 0
			result = 17
			impure = [8, 14, 15, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1629
			constraints = [
				2:	const_int(3)
			]
			prio = 0
			result = 22
			impure = [8, 19, 20, 22]
		}
	]
}
term {
	name = cmp_and_choose
	bindings = [
		0: Type	argument(0)
		1: Option(Type)	extractor(fits_in_64, 0)
		2: Type	match_some(1)
		3: CC	argument(1)
		4: Value	argument(2)
		5: Value	argument(3)
		6: OperandSize	constructor(raw_operand_size_of_type, [2], 1)
		7: Reg	constructor(put_in_reg, [4], 2)
		8: Reg	constructor(put_in_reg, [5], 3)
		9: Gpr	constructor(gpr_new, [8], 4)
		10: GprMemImm	constructor(reg_to_gpr_mem_imm, [7], 5)
		11: ProducesFlags	constructor(x64_cmp, [6, 9, 10], 6)
		12: GprMem	constructor(reg_to_gpr_mem, [8], 7)
		13: Gpr	constructor(gpr_new, [7], 8)
		14: ConsumesFlags	constructor(cmove, [2, 3, 12, 13], 9)
		15: Reg	constructor(with_flags_reg, [11, 14], 10)
		16: ValueRegs	constructor(value_reg, [15], 11)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1654
			constraints = [
				1:	some
			]
			prio = 0
			result = 16
			impure = [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
		}
	]
}
term {
	name = has_pmins
	bindings = [
		0: Type	argument(0)
		1: bool	const_prim(true)
		2: bool	const_prim(false)
		3: bool	constructor(use_sse41, [], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1680
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1681
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 1
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1682
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = has_pmaxs
	bindings = [
		0: Type	argument(0)
		1: bool	const_prim(true)
		2: bool	const_prim(false)
		3: bool	constructor(use_sse41, [], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1685
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1686
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 1
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1687
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = has_pmaxu
	bindings = [
		0: Type	argument(0)
		1: bool	const_prim(true)
		2: bool	const_prim(false)
		3: bool	constructor(use_sse41, [], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1690
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1691
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 1
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1692
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = has_pminu
	bindings = [
		0: Type	argument(0)
		1: bool	const_prim(true)
		2: bool	const_prim(false)
		3: bool	constructor(use_sse41, [], 0)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1695
			constraints = [
				0:	const_prim(I8X16)
			]
			prio = 1
			result = 1
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1696
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 1
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1697
			constraints = [
			]
			prio = 0
			result = 3
		}
	]
}
term {
	name = lower_vec_smax
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Xmm	argument(2)
		3: bool	constructor(has_pmaxs, [0], 0)
		4: XmmMem	constructor(xmm_to_xmm_mem, [2], 1)
		5: Xmm	constructor(x64_pmaxs, [0, 1, 4], 2)
		6: Xmm	constructor(x64_pcmpgt, [0, 1, 4], 2)
		7: XmmMem	constructor(xmm_to_xmm_mem, [1], 3)
		8: Xmm	constructor(x64_pand, [6, 7], 4)
		9: XmmMem	constructor(xmm_to_xmm_mem, [2], 5)
		10: Xmm	constructor(x64_pandn, [6, 9], 6)
		11: XmmMem	constructor(xmm_to_xmm_mem, [10], 7)
		12: Xmm	constructor(x64_por, [8, 11], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1705
			constraints = [
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1709
			constraints = [
			]
			prio = 0
			result = 12
			impure = [4, 6, 7, 8, 9, 10, 11, 12]
		}
	]
}
term {
	name = flip_high_bit_mask
	bindings = [
		0: Type	argument(0)
		1: u128	const_int(-170138587272425278588607549579869519872, u128)
		2: VCodeConstant	constructor(emit_u128_le_const, [1], 1)
		3: XmmMem	constructor(const_to_xmm_mem, [2], 2)
		4: Xmm	constructor(x64_movdqu_load, [3], 3)
		5: u128	const_int(-170141183420855150465331762880109871104, u128)
		6: VCodeConstant	constructor(emit_u128_le_const, [5], 1)
		7: XmmMem	constructor(const_to_xmm_mem, [6], 2)
		8: Xmm	constructor(x64_movdqu_load, [7], 3)
		9: u128	const_int(-170141183460469231722463931679029329920, u128)
		10: VCodeConstant	constructor(emit_u128_le_const, [9], 1)
		11: XmmMem	constructor(const_to_xmm_mem, [10], 2)
		12: Xmm	constructor(x64_movdqu_load, [11], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1764
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 4
			impure = [2, 3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1766
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 8
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 1768
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 0
			result = 12
			impure = [10, 11, 12]
		}
	]
}
term {
	name = lower_select_fcmp
	bindings = [
		0: Type	argument(0)
		1: FcmpCondResult	argument(1)
		2: ProducesFlags	match_variant(1, FcmpCondResult::Condition, producer)
		3: CC	match_variant(1, FcmpCondResult::Condition, cc)
		4: Value	argument(2)
		5: Value	argument(3)
		6: ConsumesFlags	constructor(cmove_from_values, [0, 3, 4, 5], 1)
		7: ValueRegs	constructor(with_flags, [2, 6], 2)
		8: InstOutput	constructor(output, [7], 3)
		9: ProducesFlags	match_variant(1, FcmpCondResult::OrCondition, producer)
		10: CC	match_variant(1, FcmpCondResult::OrCondition, cc1)
		11: CC	match_variant(1, FcmpCondResult::OrCondition, cc2)
		12: ConsumesFlags	constructor(cmove_or_from_values, [0, 10, 11, 4, 5], 1)
		13: ValueRegs	constructor(with_flags, [9, 12], 2)
		14: InstOutput	constructor(output, [13], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2087
			constraints = [
				1:	variant(FcmpCondResult::Condition)
			]
			prio = 0
			result = 8
			impure = [6, 7, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2089
			constraints = [
				1:	variant(FcmpCondResult::OrCondition)
			]
			prio = 0
			result = 14
			impure = [12, 13, 14]
		}
	]
}
term {
	name = lower_select_icmp
	bindings = [
		0: Type	argument(0)
		1: IcmpCondResult	argument(1)
		2: ProducesFlags	match_variant(1, IcmpCondResult::Condition, producer)
		3: CC	match_variant(1, IcmpCondResult::Condition, cc)
		4: Value	argument(2)
		5: Value	argument(3)
		6: ConsumesFlags	constructor(cmove_from_values, [0, 3, 4, 5], 1)
		7: ValueRegs	constructor(with_flags, [2, 6], 2)
		8: InstOutput	constructor(output, [7], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2115
			constraints = [
				1:	variant(IcmpCondResult::Condition)
			]
			prio = 0
			result = 8
			impure = [6, 7, 8]
		}
	]
}
term {
	name = do_clz
	bindings = [
		0: Type	argument(0)
		1: Type	argument(1)
		2: Gpr	argument(2)
		3: Type	const_prim(I64)
		4: i64	const_int(-1, i64)
		5: Reg	constructor(imm_i64, [3, 4], 1)
		6: Gpr	constructor(gpr_new, [5], 2)
		7: Gpr	constructor(bsr_or_else, [0, 2, 6], 3)
		8: Reg	constructor(gpr_to_reg, [7], 4)
		9: u64	constructor(ty_bits_u64, [1], 0)
		10: u64	const_int(1, u64)
		11: u64	constructor(u64_sub, [9, 10], 0)
		12: Reg	constructor(imm, [0, 11], 5)
		13: Gpr	constructor(gpr_new, [12], 6)
		14: GprMemImm	constructor(reg_to_gpr_mem_imm, [8], 7)
		15: Gpr	constructor(x64_sub, [0, 13, 14], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2163
			constraints = [
			]
			prio = 0
			result = 15
			impure = [5, 6, 7, 8, 12, 13, 14, 15]
		}
	]
}
term {
	name = do_ctz
	bindings = [
		0: Type	argument(0)
		1: Type	argument(1)
		2: Gpr	argument(2)
		3: Type	const_prim(I64)
		4: u64	constructor(ty_bits_u64, [1], 0)
		5: Reg	constructor(imm, [3, 4], 1)
		6: Gpr	constructor(gpr_new, [5], 2)
		7: Gpr	constructor(bsf_or_else, [0, 2, 6], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2199
			constraints = [
			]
			prio = 0
			result = 7
			impure = [5, 6, 7]
		}
	]
}
term {
	name = do_popcnt
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Type	const_prim(I64)
		3: u8	const_int(1, u8)
		4: Imm8Reg	make_variant(Imm8Reg::Imm8, [3])
		5: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [4], 1)
		6: Gpr	constructor(x64_shr, [2, 1, 5], 2)
		7: u64	const_int(8608480567731124087, u64)
		8: Reg	constructor(imm, [2, 7], 3)
		9: Gpr	constructor(gpr_new, [8], 4)
		10: GprMemImm	constructor(gpr_to_gpr_mem_imm, [9], 5)
		11: Gpr	constructor(x64_and, [2, 6, 10], 6)
		12: GprMemImm	constructor(gpr_to_gpr_mem_imm, [11], 7)
		13: Gpr	constructor(x64_sub, [2, 1, 12], 8)
		14: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [4], 9)
		15: Gpr	constructor(x64_shr, [2, 11, 14], 10)
		16: GprMemImm	constructor(gpr_to_gpr_mem_imm, [9], 11)
		17: Gpr	constructor(x64_and, [2, 15, 16], 12)
		18: GprMemImm	constructor(gpr_to_gpr_mem_imm, [17], 13)
		19: Gpr	constructor(x64_sub, [2, 13, 18], 14)
		20: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [4], 15)
		21: Gpr	constructor(x64_shr, [2, 17, 20], 16)
		22: GprMemImm	constructor(gpr_to_gpr_mem_imm, [9], 17)
		23: Gpr	constructor(x64_and, [2, 21, 22], 18)
		24: GprMemImm	constructor(gpr_to_gpr_mem_imm, [23], 19)
		25: Gpr	constructor(x64_sub, [2, 19, 24], 20)
		26: u8	const_int(4, u8)
		27: Imm8Reg	make_variant(Imm8Reg::Imm8, [26])
		28: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [27], 21)
		29: Gpr	constructor(x64_shr, [2, 25, 28], 22)
		30: GprMemImm	constructor(gpr_to_gpr_mem_imm, [25], 23)
		31: Gpr	constructor(x64_add, [2, 29, 30], 24)
		32: u64	const_int(1085102592571150095, u64)
		33: Reg	constructor(imm, [2, 32], 25)
		34: Gpr	constructor(gpr_new, [33], 26)
		35: GprMemImm	constructor(gpr_to_gpr_mem_imm, [34], 27)
		36: Gpr	constructor(x64_and, [2, 31, 35], 28)
		37: u64	const_int(72340172838076673, u64)
		38: Reg	constructor(imm, [2, 37], 29)
		39: Gpr	constructor(gpr_new, [38], 30)
		40: GprMem	constructor(gpr_to_gpr_mem, [39], 31)
		41: Gpr	constructor(x64_imul, [2, 36, 40], 32)
		42: u8	const_int(56, u8)
		43: Imm8Reg	make_variant(Imm8Reg::Imm8, [42])
		44: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [43], 33)
		45: Gpr	constructor(x64_shr, [2, 41, 44], 34)
		46: Type	const_prim(I32)
		47: Gpr	constructor(x64_shr, [46, 1, 5], 2)
		48: u64	const_int(2004318071, u64)
		49: Reg	constructor(imm, [46, 48], 3)
		50: Gpr	constructor(gpr_new, [49], 4)
		51: GprMemImm	constructor(gpr_to_gpr_mem_imm, [50], 5)
		52: Gpr	constructor(x64_and, [46, 47, 51], 6)
		53: GprMemImm	constructor(gpr_to_gpr_mem_imm, [52], 7)
		54: Gpr	constructor(x64_sub, [46, 1, 53], 8)
		55: Gpr	constructor(x64_shr, [46, 52, 14], 10)
		56: GprMemImm	constructor(gpr_to_gpr_mem_imm, [50], 11)
		57: Gpr	constructor(x64_and, [46, 55, 56], 12)
		58: GprMemImm	constructor(gpr_to_gpr_mem_imm, [57], 13)
		59: Gpr	constructor(x64_sub, [46, 54, 58], 14)
		60: Gpr	constructor(x64_shr, [46, 57, 20], 16)
		61: GprMemImm	constructor(gpr_to_gpr_mem_imm, [50], 17)
		62: Gpr	constructor(x64_and, [46, 60, 61], 18)
		63: GprMemImm	constructor(gpr_to_gpr_mem_imm, [62], 19)
		64: Gpr	constructor(x64_sub, [46, 59, 63], 20)
		65: Gpr	constructor(x64_shr, [46, 64, 28], 22)
		66: GprMemImm	constructor(gpr_to_gpr_mem_imm, [64], 23)
		67: Gpr	constructor(x64_add, [46, 65, 66], 24)
		68: u32	const_int(252645135, u32)
		69: RegMemImm	make_variant(RegMemImm::Imm, [68])
		70: GprMemImm	constructor(gpr_mem_imm_new, [69], 25)
		71: Gpr	constructor(x64_and, [46, 67, 70], 26)
		72: GprMem	constructor(gpr_to_gpr_mem, [71], 27)
		73: i32	const_int(16843009, i32)
		74: Gpr	constructor(x64_imul_imm, [46, 72, 73], 28)
		75: u8	const_int(24, u8)
		76: Imm8Reg	make_variant(Imm8Reg::Imm8, [75])
		77: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [76], 29)
		78: Gpr	constructor(x64_shr, [46, 74, 77], 30)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2238
			constraints = [
				0:	const_prim(I64)
			]
			prio = 0
			result = 45
			impure = [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2281
			constraints = [
				0:	const_prim(I32)
			]
			prio = 0
			result = 78
			impure = [5, 47, 49, 50, 51, 52, 53, 54, 14, 55, 56, 57, 58, 59, 20, 60, 61, 62, 63, 64, 28, 65, 66, 67, 70, 71, 72, 74, 77, 78]
		}
	]
}
term {
	name = do_bitrev8
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: u64	constructor(ty_mask, [0], 0)
		3: u64	const_int(6148914691236517205, u64)
		4: u64	constructor(u64_and, [2, 3], 0)
		5: Reg	constructor(imm, [0, 4], 1)
		6: Gpr	constructor(gpr_new, [5], 2)
		7: GprMemImm	constructor(gpr_to_gpr_mem_imm, [6], 3)
		8: Gpr	constructor(x64_and, [0, 1, 7], 4)
		9: u8	const_int(1, u8)
		10: Imm8Reg	make_variant(Imm8Reg::Imm8, [9])
		11: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [10], 5)
		12: Gpr	constructor(x64_shr, [0, 1, 11], 6)
		13: GprMemImm	constructor(gpr_to_gpr_mem_imm, [6], 7)
		14: Gpr	constructor(x64_and, [0, 12, 13], 8)
		15: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [10], 9)
		16: Gpr	constructor(x64_shl, [0, 8, 15], 10)
		17: GprMemImm	constructor(gpr_to_gpr_mem_imm, [14], 11)
		18: Gpr	constructor(x64_or, [0, 16, 17], 12)
		19: u64	const_int(3689348814741910323, u64)
		20: u64	constructor(u64_and, [2, 19], 0)
		21: Reg	constructor(imm, [0, 20], 13)
		22: Gpr	constructor(gpr_new, [21], 14)
		23: GprMemImm	constructor(gpr_to_gpr_mem_imm, [22], 15)
		24: Gpr	constructor(x64_and, [0, 18, 23], 16)
		25: u8	const_int(2, u8)
		26: Imm8Reg	make_variant(Imm8Reg::Imm8, [25])
		27: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [26], 17)
		28: Gpr	constructor(x64_shr, [0, 18, 27], 18)
		29: GprMemImm	constructor(gpr_to_gpr_mem_imm, [22], 19)
		30: Gpr	constructor(x64_and, [0, 28, 29], 20)
		31: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [26], 21)
		32: Gpr	constructor(x64_shl, [0, 24, 31], 22)
		33: GprMemImm	constructor(gpr_to_gpr_mem_imm, [30], 23)
		34: Gpr	constructor(x64_or, [0, 32, 33], 24)
		35: u64	const_int(1085102592571150095, u64)
		36: u64	constructor(u64_and, [2, 35], 0)
		37: Reg	constructor(imm, [0, 36], 25)
		38: Gpr	constructor(gpr_new, [37], 26)
		39: GprMemImm	constructor(gpr_to_gpr_mem_imm, [38], 27)
		40: Gpr	constructor(x64_and, [0, 34, 39], 28)
		41: u8	const_int(4, u8)
		42: Imm8Reg	make_variant(Imm8Reg::Imm8, [41])
		43: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [42], 29)
		44: Gpr	constructor(x64_shr, [0, 34, 43], 30)
		45: GprMemImm	constructor(gpr_to_gpr_mem_imm, [38], 31)
		46: Gpr	constructor(x64_and, [0, 44, 45], 32)
		47: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [42], 33)
		48: Gpr	constructor(x64_shl, [0, 40, 47], 34)
		49: GprMemImm	constructor(gpr_to_gpr_mem_imm, [46], 35)
		50: Gpr	constructor(x64_or, [0, 48, 49], 36)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2375
			constraints = [
			]
			prio = 0
			result = 50
			impure = [5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50]
		}
	]
}
term {
	name = do_bitrev16
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	constructor(do_bitrev8, [0, 1], 1)
		3: u64	constructor(ty_mask, [0], 0)
		4: u64	const_int(71777214294589695, u64)
		5: u64	constructor(u64_and, [3, 4], 0)
		6: Reg	constructor(imm, [0, 5], 2)
		7: Gpr	constructor(gpr_new, [6], 3)
		8: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 4)
		9: Gpr	constructor(x64_and, [0, 2, 8], 5)
		10: u8	const_int(8, u8)
		11: Imm8Reg	make_variant(Imm8Reg::Imm8, [10])
		12: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [11], 6)
		13: Gpr	constructor(x64_shr, [0, 2, 12], 7)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 8)
		15: Gpr	constructor(x64_and, [0, 13, 14], 9)
		16: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [11], 10)
		17: Gpr	constructor(x64_shl, [0, 9, 16], 11)
		18: GprMemImm	constructor(gpr_to_gpr_mem_imm, [15], 12)
		19: Gpr	constructor(x64_or, [0, 17, 18], 13)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2398
			constraints = [
			]
			prio = 0
			result = 19
			impure = [2, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19]
		}
	]
}
term {
	name = do_bitrev32
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	constructor(do_bitrev16, [0, 1], 1)
		3: u64	constructor(ty_mask, [0], 0)
		4: u64	const_int(281470681808895, u64)
		5: u64	constructor(u64_and, [3, 4], 0)
		6: Reg	constructor(imm, [0, 5], 2)
		7: Gpr	constructor(gpr_new, [6], 3)
		8: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 4)
		9: Gpr	constructor(x64_and, [0, 2, 8], 5)
		10: u8	const_int(16, u8)
		11: Imm8Reg	make_variant(Imm8Reg::Imm8, [10])
		12: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [11], 6)
		13: Gpr	constructor(x64_shr, [0, 2, 12], 7)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 8)
		15: Gpr	constructor(x64_and, [0, 13, 14], 9)
		16: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [11], 10)
		17: Gpr	constructor(x64_shl, [0, 9, 16], 11)
		18: GprMemImm	constructor(gpr_to_gpr_mem_imm, [15], 12)
		19: Gpr	constructor(x64_or, [0, 17, 18], 13)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2410
			constraints = [
			]
			prio = 0
			result = 19
			impure = [2, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19]
		}
	]
}
term {
	name = do_bitrev64
	bindings = [
		0: Type	argument(0)
		1: Gpr	argument(1)
		2: Gpr	constructor(do_bitrev32, [0, 1], 1)
		3: u64	const_int(4294967295, u64)
		4: Reg	constructor(imm, [0, 3], 2)
		5: Gpr	constructor(gpr_new, [4], 3)
		6: GprMemImm	constructor(gpr_to_gpr_mem_imm, [5], 4)
		7: Gpr	constructor(x64_and, [0, 2, 6], 5)
		8: u8	const_int(32, u8)
		9: Imm8Reg	make_variant(Imm8Reg::Imm8, [8])
		10: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [9], 6)
		11: Gpr	constructor(x64_shr, [0, 2, 10], 7)
		12: Imm8Gpr	constructor(imm8_reg_to_imm8_gpr, [9], 8)
		13: Gpr	constructor(x64_shl, [0, 7, 12], 9)
		14: GprMemImm	constructor(gpr_to_gpr_mem_imm, [11], 10)
		15: Gpr	constructor(x64_or, [0, 13, 14], 11)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2422
			constraints = [
				0:	const_prim(I64)
			]
			prio = 0
			result = 15
			impure = [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]
		}
	]
}
term {
	name = fmadd
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Value	argument(2)
		3: Value	argument(3)
		4: Xmm	constructor(put_in_xmm, [1], 1)
		5: Xmm	constructor(put_in_xmm, [2], 2)
		6: XmmMem	constructor(put_in_xmm_mem, [3], 3)
		7: Xmm	constructor(x64_vfmadd213, [0, 4, 5, 6], 4)
		8: Option(SinkableLoad)	extractor(sinkable_load, 1)
		9: SinkableLoad	match_some(8)
		10: Xmm	constructor(put_in_xmm, [2], 1)
		11: Xmm	constructor(put_in_xmm, [3], 2)
		12: XmmMem	constructor(sink_load_to_xmm_mem, [9], 3)
		13: Xmm	constructor(x64_vfmadd132, [0, 10, 11, 12], 4)
		14: Option(SinkableLoad)	extractor(sinkable_load, 2)
		15: SinkableLoad	match_some(14)
		16: XmmMem	constructor(sink_load_to_xmm_mem, [15], 3)
		17: Xmm	constructor(x64_vfmadd132, [0, 4, 11, 16], 4)
		18: Option(Inst)	extractor(def_inst, 1)
		19: Inst	match_some(18)
		20: InstructionData	extractor(inst_data, 19)
		21: Opcode	match_variant(20, InstructionData::Unary, opcode)
		22: Value	match_variant(20, InstructionData::Unary, arg)
		23: Xmm	constructor(fnmadd, [0, 22, 2, 3], 1)
		24: Option(Inst)	extractor(def_inst, 2)
		25: Inst	match_some(24)
		26: InstructionData	extractor(inst_data, 25)
		27: Opcode	match_variant(26, InstructionData::Unary, opcode)
		28: Value	match_variant(26, InstructionData::Unary, arg)
		29: Xmm	constructor(fnmadd, [0, 1, 28, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2845
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 6, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2850
			constraints = [
				8:	some
			]
			prio = 1
			result = 13
			impure = [10, 11, 12, 13]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2851
			constraints = [
				14:	some
			]
			prio = 2
			result = 17
			impure = [4, 11, 16, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2855
			constraints = [
				18:	some
				20:	variant(InstructionData::Unary)
				21:	variant(Opcode::Fneg)
			]
			prio = 3
			result = 23
			impure = [23]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2856
			constraints = [
				24:	some
				26:	variant(InstructionData::Unary)
				27:	variant(Opcode::Fneg)
			]
			prio = 4
			result = 29
			impure = [29]
		}
	]
}
term {
	name = fnmadd
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Value	argument(2)
		3: Value	argument(3)
		4: Xmm	constructor(put_in_xmm, [1], 1)
		5: Xmm	constructor(put_in_xmm, [2], 2)
		6: XmmMem	constructor(put_in_xmm_mem, [3], 3)
		7: Xmm	constructor(x64_vfnmadd213, [0, 4, 5, 6], 4)
		8: Option(SinkableLoad)	extractor(sinkable_load, 1)
		9: SinkableLoad	match_some(8)
		10: Xmm	constructor(put_in_xmm, [2], 1)
		11: Xmm	constructor(put_in_xmm, [3], 2)
		12: XmmMem	constructor(sink_load_to_xmm_mem, [9], 3)
		13: Xmm	constructor(x64_vfnmadd132, [0, 10, 11, 12], 4)
		14: Option(SinkableLoad)	extractor(sinkable_load, 2)
		15: SinkableLoad	match_some(14)
		16: XmmMem	constructor(sink_load_to_xmm_mem, [15], 3)
		17: Xmm	constructor(x64_vfnmadd132, [0, 4, 11, 16], 4)
		18: Option(Inst)	extractor(def_inst, 1)
		19: Inst	match_some(18)
		20: InstructionData	extractor(inst_data, 19)
		21: Opcode	match_variant(20, InstructionData::Unary, opcode)
		22: Value	match_variant(20, InstructionData::Unary, arg)
		23: Xmm	constructor(fmadd, [0, 22, 2, 3], 1)
		24: Option(Inst)	extractor(def_inst, 2)
		25: Inst	match_some(24)
		26: InstructionData	extractor(inst_data, 25)
		27: Opcode	match_variant(26, InstructionData::Unary, opcode)
		28: Value	match_variant(26, InstructionData::Unary, arg)
		29: Xmm	constructor(fmadd, [0, 1, 28, 3], 1)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2858
			constraints = [
			]
			prio = 0
			result = 7
			impure = [4, 5, 6, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2859
			constraints = [
				8:	some
			]
			prio = 1
			result = 13
			impure = [10, 11, 12, 13]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2860
			constraints = [
				14:	some
			]
			prio = 2
			result = 17
			impure = [4, 11, 16, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2863
			constraints = [
				18:	some
				20:	variant(InstructionData::Unary)
				21:	variant(Opcode::Fneg)
			]
			prio = 3
			result = 23
			impure = [23]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 2864
			constraints = [
				24:	some
				26:	variant(InstructionData::Unary)
				27:	variant(Opcode::Fneg)
			]
			prio = 4
			result = 29
			impure = [29]
		}
	]
}
term {
	name = cmp_zero_i128
	bindings = [
		0: CC	argument(0)
		1: Option(CC)	extractor(cc_nz_or_z, 0)
		2: CC	match_some(1)
		3: ValueRegs	argument(1)
		4: usize	const_int(0, usize)
		5: Gpr	constructor(value_regs_get_gpr, [3, 4], 1)
		6: usize	const_int(1, usize)
		7: Gpr	constructor(value_regs_get_gpr, [3, 6], 2)
		8: AluRmiROpcode	make_variant(AluRmiROpcode::Or, [])
		9: Type	const_prim(I64)
		10: GprMemImm	constructor(gpr_to_gpr_mem_imm, [7], 3)
		11: ProducesFlags	constructor(x64_alurmi_flags_side_effect, [8, 9, 5, 10], 4)
		12: CC	constructor(cc_invert, [2], 5)
		13: IcmpCondResult	constructor(icmp_cond_result, [11, 12], 6)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3332
			constraints = [
				1:	some
			]
			prio = 0
			result = 13
			impure = [5, 7, 10, 11, 12, 13]
		}
	]
}
term {
	name = cmp_zero_int_bool_ref
	bindings = [
		0: Value	argument(0)
		1: Type	extractor(value_type, 0)
		2: OperandSize	constructor(raw_operand_size_of_type, [1], 1)
		3: Gpr	constructor(put_in_gpr, [0], 2)
		4: GprMemImm	constructor(gpr_to_gpr_mem_imm, [3], 3)
		5: ProducesFlags	constructor(x64_test, [2, 3, 4], 4)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3341
			constraints = [
			]
			prio = 0
			result = 5
			impure = [2, 3, 4, 5]
		}
	]
}
term {
	name = lower_swiden_low
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: XmmMem	constructor(xmm_to_xmm_mem, [1], 1)
		3: Xmm	constructor(x64_punpcklbw, [1, 2], 2)
		4: u32	const_int(8, u32)
		5: XmmMemImm	constructor(xmi_imm, [4], 3)
		6: Xmm	constructor(x64_psraw, [3, 5], 4)
		7: Xmm	constructor(x64_punpcklwd, [1, 2], 2)
		8: u32	const_int(16, u32)
		9: XmmMemImm	constructor(xmi_imm, [8], 3)
		10: Xmm	constructor(x64_psrad, [7, 9], 4)
		11: Type	const_prim(I32X4)
		12: Xmm	constructor(xmm_zero, [11], 1)
		13: XmmMem	constructor(xmm_to_xmm_mem, [1], 2)
		14: Xmm	constructor(x64_pcmpgtd, [12, 13], 3)
		15: XmmMem	constructor(xmm_to_xmm_mem, [14], 4)
		16: Xmm	constructor(x64_punpckldq, [1, 15], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3806
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 6
			impure = [2, 3, 5, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3808
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 10
			impure = [2, 7, 9, 10]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3814
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 0
			result = 16
			impure = [12, 13, 14, 15, 16]
		}
	]
}
term {
	name = lower_uwiden_low
	bindings = [
		0: Type	argument(0)
		1: Xmm	argument(1)
		2: Type	const_prim(I8X16)
		3: Xmm	constructor(xmm_zero, [2], 1)
		4: XmmMem	constructor(xmm_to_xmm_mem, [3], 2)
		5: Xmm	constructor(x64_punpcklbw, [1, 4], 3)
		6: Xmm	constructor(x64_punpcklwd, [1, 4], 3)
		7: Type	const_prim(F32X4)
		8: Xmm	constructor(xmm_zero, [7], 1)
		9: XmmMem	constructor(xmm_to_xmm_mem, [8], 2)
		10: Xmm	constructor(x64_unpcklps, [1, 9], 3)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3869
			constraints = [
				0:	const_prim(I16X8)
			]
			prio = 0
			result = 5
			impure = [3, 4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3870
			constraints = [
				0:	const_prim(I32X4)
			]
			prio = 0
			result = 6
			impure = [3, 4, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3871
			constraints = [
				0:	const_prim(I64X2)
			]
			prio = 0
			result = 10
			impure = [8, 9, 10]
		}
	]
}
term {
	name = unarrow_i32x4_lanes_to_low_u16_lanes
	bindings = [
		0: Xmm	argument(0)
		1: Type	const_prim(I32X4)
		2: Xmm	constructor(xmm_zero, [1], 1)
		3: XmmMem	constructor(xmm_to_xmm_mem, [2], 2)
		4: Xmm	constructor(x64_pcmpgtd, [0, 3], 3)
		5: XmmMem	constructor(xmm_to_xmm_mem, [4], 4)
		6: Xmm	constructor(x64_pand, [0, 5], 5)
		7: u128	const_int(5192217631581220737344928932233215, u128)
		8: VCodeConstant	constructor(emit_u128_le_const, [7], 6)
		9: XmmMem	constructor(const_to_xmm_mem, [8], 7)
		10: Xmm	constructor(x64_movdqu_load, [9], 8)
		11: XmmMem	constructor(xmm_to_xmm_mem, [6], 9)
		12: Xmm	constructor(x64_pcmpgtd, [10, 11], 10)
		13: XmmMem	constructor(xmm_to_xmm_mem, [12], 11)
		14: Xmm	constructor(x64_pand, [6, 13], 12)
		15: XmmMem	constructor(xmm_to_xmm_mem, [10], 13)
		16: Xmm	constructor(x64_pandn, [12, 15], 14)
		17: XmmMem	constructor(xmm_to_xmm_mem, [16], 15)
		18: Xmm	constructor(x64_por, [14, 17], 16)
		19: XmmMem	constructor(xmm_to_xmm_mem, [18], 17)
		20: u8	const_int(8, u8)
		21: Xmm	constructor(x64_pshuflw, [19, 20], 18)
		22: XmmMem	constructor(xmm_to_xmm_mem, [21], 19)
		23: Xmm	constructor(x64_pshufhw, [22, 20], 20)
		24: XmmMem	constructor(xmm_to_xmm_mem, [23], 21)
		25: Xmm	constructor(x64_pshufd, [24, 20], 22)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 3951
			constraints = [
			]
			prio = 0
			result = 25
			impure = [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25]
		}
	]
}
term {
	name = x64_round
	bindings = [
		0: Type	argument(0)
		1: RegMem	argument(1)
		2: RoundImm	argument(2)
		3: bool	constructor(use_sse41, [], 0)
		4: XmmMem	constructor(reg_mem_to_xmm_mem, [1], 1)
		5: Xmm	constructor(x64_roundss, [4, 2], 2)
		6: Xmm	constructor(x64_roundsd, [4, 2], 2)
		7: Xmm	constructor(x64_roundps, [4, 2], 2)
		8: Xmm	constructor(x64_roundpd, [4, 2], 2)
		9: Reg	match_variant(1, RegMem::Reg, reg)
		10: Type	const_prim(F32)
		11: LibCall	constructor(round_libcall, [10, 2], 1)
		12: Reg	constructor(libcall_1, [11, 9], 2)
		13: Xmm	constructor(xmm_new, [12], 3)
		14: Type	const_prim(F64)
		15: LibCall	constructor(round_libcall, [14, 2], 1)
		16: Reg	constructor(libcall_1, [15, 9], 2)
		17: Xmm	constructor(xmm_new, [16], 3)
		18: XmmMem	constructor(reg_to_xmm_mem, [9], 4)
		19: u8	const_int(1, u8)
		20: Xmm	constructor(x64_pshufd, [18, 19], 5)
		21: Reg	constructor(xmm_to_reg, [20], 6)
		22: Reg	constructor(libcall_1, [11, 21], 7)
		23: Xmm	constructor(xmm_new, [22], 8)
		24: Xmm	constructor(f32x4_insertlane, [13, 23, 19], 9)
		25: XmmMem	constructor(reg_to_xmm_mem, [9], 10)
		26: u8	const_int(2, u8)
		27: Xmm	constructor(x64_pshufd, [25, 26], 11)
		28: Reg	constructor(xmm_to_reg, [27], 12)
		29: Reg	constructor(libcall_1, [11, 28], 13)
		30: Xmm	constructor(xmm_new, [29], 14)
		31: Xmm	constructor(f32x4_insertlane, [24, 30, 26], 15)
		32: XmmMem	constructor(reg_to_xmm_mem, [9], 16)
		33: u8	const_int(3, u8)
		34: Xmm	constructor(x64_pshufd, [32, 33], 17)
		35: Reg	constructor(xmm_to_reg, [34], 18)
		36: Reg	constructor(libcall_1, [11, 35], 19)
		37: Xmm	constructor(xmm_new, [36], 20)
		38: Xmm	constructor(f32x4_insertlane, [31, 37, 33], 21)
		39: u8	const_int(14, u8)
		40: Xmm	constructor(x64_pshufd, [18, 39], 5)
		41: Reg	constructor(xmm_to_reg, [40], 6)
		42: Reg	constructor(libcall_1, [15, 41], 7)
		43: Xmm	constructor(xmm_new, [42], 8)
		44: XmmMem	constructor(xmm_to_xmm_mem, [43], 9)
		45: Xmm	constructor(x64_movlhps, [17, 44], 10)
		46: SyntheticAmode	match_variant(1, RegMem::Mem, addr)
		47: ExtKind	make_variant(ExtKind::ZeroExtend, [])
		48: Reg	constructor(x64_load, [0, 46, 47], 1)
		49: RegMem	make_variant(RegMem::Reg, [48])
		50: Xmm	constructor(x64_round, [0, 49, 2], 2)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4035
			constraints = [
				0:	const_prim(F32)
				3:	const_prim(true)
			]
			prio = 1
			result = 5
			impure = [4, 5]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4038
			constraints = [
				0:	const_prim(F64)
				3:	const_prim(true)
			]
			prio = 1
			result = 6
			impure = [4, 6]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4041
			constraints = [
				0:	const_prim(F32X4)
				3:	const_prim(true)
			]
			prio = 1
			result = 7
			impure = [4, 7]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4044
			constraints = [
				0:	const_prim(F64X2)
				3:	const_prim(true)
			]
			prio = 1
			result = 8
			impure = [4, 8]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4048
			constraints = [
				0:	const_prim(F32)
				1:	variant(RegMem::Reg)
			]
			prio = 0
			result = 13
			impure = [11, 12, 13]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4049
			constraints = [
				0:	const_prim(F64)
				1:	variant(RegMem::Reg)
			]
			prio = 0
			result = 17
			impure = [15, 16, 17]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4050
			constraints = [
				0:	const_prim(F32X4)
				1:	variant(RegMem::Reg)
			]
			prio = 0
			result = 38
			impure = [11, 12, 13, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4062
			constraints = [
				0:	const_prim(F64X2)
				1:	variant(RegMem::Reg)
			]
			prio = 0
			result = 45
			impure = [15, 16, 17, 18, 40, 41, 42, 43, 44, 45]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4069
			constraints = [
				1:	variant(RegMem::Mem)
			]
			prio = 0
			result = 50
			impure = [48, 50]
		}
	]
}
term {
	name = round_libcall
	bindings = [
		0: Type	argument(0)
		1: RoundImm	argument(1)
		2: LibCall	make_variant(LibCall::CeilF32, [])
		3: LibCall	make_variant(LibCall::CeilF64, [])
		4: LibCall	make_variant(LibCall::FloorF32, [])
		5: LibCall	make_variant(LibCall::FloorF64, [])
		6: LibCall	make_variant(LibCall::NearestF32, [])
		7: LibCall	make_variant(LibCall::NearestF64, [])
		8: LibCall	make_variant(LibCall::TruncF32, [])
		9: LibCall	make_variant(LibCall::TruncF64, [])
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4073
			constraints = [
				0:	const_prim(F32)
				1:	variant(RoundImm::RoundUp)
			]
			prio = 0
			result = 2
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4074
			constraints = [
				0:	const_prim(F64)
				1:	variant(RoundImm::RoundUp)
			]
			prio = 0
			result = 3
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4075
			constraints = [
				0:	const_prim(F32)
				1:	variant(RoundImm::RoundDown)
			]
			prio = 0
			result = 4
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4076
			constraints = [
				0:	const_prim(F64)
				1:	variant(RoundImm::RoundDown)
			]
			prio = 0
			result = 5
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4077
			constraints = [
				0:	const_prim(F32)
				1:	variant(RoundImm::RoundNearest)
			]
			prio = 0
			result = 6
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4078
			constraints = [
				0:	const_prim(F64)
				1:	variant(RoundImm::RoundNearest)
			]
			prio = 0
			result = 7
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4079
			constraints = [
				0:	const_prim(F32)
				1:	variant(RoundImm::RoundZero)
			]
			prio = 0
			result = 8
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4080
			constraints = [
				0:	const_prim(F64)
				1:	variant(RoundImm::RoundZero)
			]
			prio = 0
			result = 9
		}
	]
}
term {
	name = nonzero_sdiv_divisor
	bindings = [
		0: Type	argument(0)
		1: Value	argument(1)
		2: Option(Inst)	extractor(def_inst, 1)
		3: Inst	match_some(2)
		4: InstructionData	extractor(inst_data, 3)
		5: Opcode	match_variant(4, InstructionData::UnaryImm, opcode)
		6: Imm64	match_variant(4, InstructionData::UnaryImm, imm)
		7: Option(u64)	constructor(safe_divisor_from_imm64, [0, 6], 0)
		8: u64	match_some(7)
		9: Reg	constructor(imm, [0, 8], 1)
		10: Reg	constructor(put_in_reg, [1], 1)
		11: OperandSize	constructor(raw_operand_size_of_type, [0], 2)
		12: Gpr	constructor(gpr_new, [10], 3)
		13: GprMemImm	constructor(reg_to_gpr_mem_imm, [10], 4)
		14: ProducesFlags	constructor(x64_test, [11, 12, 13], 5)
		15: CC	make_variant(CC::Z, [])
		16: TrapCode	make_variant(TrapCode::IntegerDivisionByZero, [])
		17: ConsumesFlags	constructor(trap_if, [15, 16], 6)
		18: SideEffectNoResult	constructor(with_flags_side_effect, [14, 17], 7)
		19: InstOutput	constructor(side_effect, [18], 8)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4160
			constraints = [
				2:	some
				4:	variant(InstructionData::UnaryImm)
				5:	variant(Opcode::Iconst)
				7:	some
			]
			prio = 1
			result = 9
			impure = [9]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4163
			constraints = [
			]
			prio = 0
			result = 10
			impure = [10, 11, 12, 13, 14, 17, 18, 19]
		}
	]
}
term {
	name = lower_pshufb
	bindings = [
		0: Xmm	argument(0)
		1: RegMem	argument(1)
		2: bool	constructor(use_ssse3, [], 0)
		3: XmmMem	constructor(reg_mem_to_xmm_mem, [1], 1)
		4: Xmm	constructor(x64_pshufb, [0, 3], 2)
		5: Reg	match_variant(1, RegMem::Reg, reg)
		6: LibCall	make_variant(LibCall::X86Pshufb, [])
		7: Reg	constructor(xmm_to_reg, [0], 1)
		8: Reg	constructor(libcall_2, [6, 7, 5], 2)
		9: Xmm	constructor(xmm_new, [8], 3)
		10: SyntheticAmode	match_variant(1, RegMem::Mem, addr)
		11: XmmMem	constructor(synthetic_amode_to_xmm_mem, [10], 1)
		12: Xmm	constructor(x64_movdqu_load, [11], 2)
		13: Reg	constructor(xmm_to_reg, [12], 3)
		14: XmmMem	constructor(xmm_to_reg_mem, [13], 4)
		15: RegMem	constructor(xmm_mem_to_reg_mem, [14], 0)
		16: Xmm	constructor(lower_pshufb, [0, 15], 5)
	]
	rules = [
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4445
			constraints = [
				2:	const_prim(true)
			]
			prio = 1
			result = 4
			impure = [3, 4]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4448
			constraints = [
				1:	variant(RegMem::Reg)
			]
			prio = 0
			result = 9
			impure = [7, 8, 9]
		}
		{
			pos = ../../codegen/src/isa/x64/lower.isle line 4450
			constraints = [
				1:	variant(RegMem::Mem)
			]
			prio = 0
			result = 16
			impure = [11, 12, 13, 14, 16]
		}
	]
}
