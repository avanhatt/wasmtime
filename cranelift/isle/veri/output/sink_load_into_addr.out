inline term: sink_load_into_addr
expansions = 1
expansion {
	term = sink_load_into_addr
	rules = [
		../../codegen/src/isa/aarch64/inst.isle line 3220
	]
	bindings = [
		0: Type	argument(0)
		1: Inst	argument(1)
		5: InstructionData	extractor(inst_data, 1)
		6: Opcode	match_variant(5, InstructionData::Load, opcode)
		7: Unit	constructor(sink_inst, [1], 1)
		8: Value	match_variant(5, InstructionData::Load, arg)
		9: Reg	constructor(put_in_reg, [8], 2)
		10: Offset32	match_variant(5, InstructionData::Load, offset)
		11: i32	extractor(offset32, 10)
		12: i64	constructor(i32_as_i64, [11], 0)
		13: u64	constructor(i64_as_u64, [12], 0)
		14: Reg	constructor(add_imm_to_addr, [9, 13], 3)
	]
	constraints = [
		5:	variant(InstructionData::Load)
		6:	variant(Opcode::Load)
	]
	result = 14
}
